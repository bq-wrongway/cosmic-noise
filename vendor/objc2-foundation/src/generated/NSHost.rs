//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
    pub struct NSHost;

    unsafe impl ClassType for NSHost {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for NSHost {}

extern_methods!(
    unsafe impl NSHost {
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other currentHost)]
        pub unsafe fn currentHost() -> Retained<Self>;

        #[cfg(feature = "NSString")]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other hostWithName:)]
        pub unsafe fn hostWithName(name: Option<&NSString>) -> Retained<Self>;

        #[cfg(feature = "NSString")]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other hostWithAddress:)]
        pub unsafe fn hostWithAddress(address: &NSString) -> Retained<Self>;

        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method(isEqualToHost:)]
        pub unsafe fn isEqualToHost(&self, a_host: &NSHost) -> bool;

        #[cfg(feature = "NSString")]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Option<Retained<NSString>>;

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other names)]
        pub unsafe fn names(&self) -> Retained<NSArray<NSString>>;

        #[cfg(feature = "NSString")]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other address)]
        pub unsafe fn address(&self) -> Option<Retained<NSString>>;

        #[cfg(all(feature = "NSArray", feature = "NSString"))]
        #[deprecated = "Use Network framework instead, see deprecation notice in <Foundation/NSHost.h>"]
        #[method_id(@__retain_semantics Other addresses)]
        pub unsafe fn addresses(&self) -> Retained<NSArray<NSString>>;

        #[cfg(feature = "NSString")]
        #[method_id(@__retain_semantics Other localizedName)]
        pub unsafe fn localizedName(&self) -> Option<Retained<NSString>>;

        #[deprecated = "Caching no longer supported"]
        #[method(setHostCacheEnabled:)]
        pub unsafe fn setHostCacheEnabled(flag: bool);

        #[deprecated = "Caching no longer supported"]
        #[method(isHostCacheEnabled)]
        pub unsafe fn isHostCacheEnabled() -> bool;

        #[deprecated = "Caching no longer supported"]
        #[method(flushHostCache)]
        pub unsafe fn flushHostCache();
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl NSHost {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
