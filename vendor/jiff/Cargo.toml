# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "jiff"
version = "0.2.15"
authors = ["Andrew Gallant <jamslam@gmail.com>"]
build = false
include = [
    "/src/**/*.rs",
    "/tests/lib.rs",
    "/*.md",
    "COPYING",
    "LICENSE-MIT",
    "UNLICENSE",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
A date-time library that encourages you to jump into the pit of success.

This library is heavily inspired by the Temporal project.
"""
documentation = "https://docs.rs/jiff"
readme = "README.md"
keywords = [
    "date",
    "time",
    "calendar",
    "zone",
    "duration",
]
categories = [
    "date-and-time",
    "no-std",
]
license = "Unlicense OR MIT"
repository = "https://github.com/BurntSushi/jiff"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[features]
alloc = [
    "serde?/alloc",
    "portable-atomic-util/alloc",
]
default = [
    "std",
    "tz-system",
    "tz-fat",
    "tzdb-bundle-platform",
    "tzdb-zoneinfo",
    "tzdb-concatenated",
    "perf-inline",
]
js = [
    "dep:wasm-bindgen",
    "dep:js-sys",
]
logging = ["dep:log"]
perf-inline = []
serde = ["dep:serde"]
static = [
    "static-tz",
    "jiff-static?/tzdb",
]
static-tz = ["dep:jiff-static"]
std = [
    "alloc",
    "log?/std",
    "serde?/std",
]
tz-fat = ["jiff-static?/tz-fat"]
tz-system = [
    "std",
    "dep:windows-sys",
]
tzdb-bundle-always = [
    "dep:jiff-tzdb",
    "alloc",
]
tzdb-bundle-platform = [
    "dep:jiff-tzdb-platform",
    "alloc",
]
tzdb-concatenated = ["std"]
tzdb-zoneinfo = ["std"]

[lib]
name = "jiff"
path = "src/lib.rs"

[[test]]
name = "integration"
path = "tests/lib.rs"

[dependencies.jiff-static]
version = "0.2"
optional = true

[dependencies.jiff-tzdb]
version = "0.1.4"
optional = true

[dependencies.log]
version = "0.4.21"
optional = true
default-features = false

[dependencies.serde]
version = "1.0.203"
optional = true
default-features = false

[dev-dependencies.anyhow]
version = "1.0.81"

[dev-dependencies.chrono]
version = "0.4.38"
features = ["serde"]

[dev-dependencies.chrono-tz]
version = "0.10.0"

[dev-dependencies.humantime]
version = "2.1.0"

[dev-dependencies.insta]
version = "1.39.0"

[dev-dependencies.log]
version = "0.4.21"

[dev-dependencies.quickcheck]
version = "1.0.3"
default-features = false

[dev-dependencies.serde]
version = "1.0.203"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0.117"

[dev-dependencies.serde_yaml]
version = "0.9.34"

[dev-dependencies.tabwriter]
version = "1.4.0"

[dev-dependencies.time]
version = "0.3.36"
features = [
    "local-offset",
    "macros",
    "parsing",
]

[dev-dependencies.tzfile]
version = "0.1.3"

[dev-dependencies.walkdir]
version = "2.5.0"

[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dependencies.js-sys]
version = "0.3.50"
optional = true

[target.'cfg(all(any(target_arch = "wasm32", target_arch = "wasm64"), target_os = "unknown"))'.dependencies.wasm-bindgen]
version = "0.2.70"
optional = true

[target."cfg(any())".dependencies.jiff-static]
version = "=0.2.15"

[target.'cfg(any(windows, target_family = "wasm"))'.dependencies.jiff-tzdb-platform]
version = "0.1.3"
optional = true

[target.'cfg(not(target_family = "wasm"))'.dev-dependencies.hifitime]
version = "3.9.0"

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies.portable-atomic]
version = "1.10.0"
default-features = false

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies.portable-atomic-util]
version = "0.2.4"
default-features = false

[target."cfg(windows)".dependencies.windows-sys]
version = ">=0.52.0, <=0.59.*"
features = [
    "Win32_Foundation",
    "Win32_System_Time",
]
optional = true
default-features = false

[profile.testrelease]
debug-assertions = false
inherits = "test"
