# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70.0"
name = "winit"
version = "0.30.8"
authors = [
    "The winit contributors",
    "Pierre Krieger <pierre.krieger1708@gmail.com>",
]
build = "build.rs"
include = [
    "/build.rs",
    "/docs",
    "/examples",
    "/FEATURES.md",
    "/LICENSE",
    "/src",
    "!/src/platform_impl/web/script",
    "/src/platform_impl/web/script/**/*.min.js",
    "/tests",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Cross-platform window creation library."
documentation = "https://docs.rs/winit"
readme = "README.md"
keywords = ["windowing"]
categories = ["gui"]
license = "Apache-2.0"
repository = "https://github.com/rust-windowing/winit"

[package.metadata.docs.rs]
features = [
    "rwh_04",
    "rwh_05",
    "rwh_06",
    "serde",
    "mint",
    "android-native-activity",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "i686-pc-windows-msvc",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "i686-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-ios",
    "aarch64-linux-android",
    "wasm32-unknown-unknown",
]

[features]
android-game-activity = ["android-activity/game-activity"]
android-native-activity = ["android-activity/native-activity"]
default = [
    "rwh_06",
    "x11",
    "wayland",
    "wayland-dlopen",
    "wayland-csd-adwaita",
]
mint = ["dpi/mint"]
rwh_04 = [
    "dep:rwh_04",
    "ndk/rwh_04",
]
rwh_05 = [
    "dep:rwh_05",
    "ndk/rwh_05",
]
rwh_06 = [
    "dep:rwh_06",
    "ndk/rwh_06",
]
serde = [
    "dep:serde",
    "cursor-icon/serde",
    "smol_str/serde",
    "dpi/serde",
]
wayland = [
    "wayland-client",
    "wayland-backend",
    "wayland-protocols",
    "wayland-protocols-plasma",
    "sctk",
    "ahash",
    "memmap2",
]
wayland-csd-adwaita = [
    "sctk-adwaita",
    "sctk-adwaita/ab_glyph",
]
wayland-csd-adwaita-crossfont = [
    "sctk-adwaita",
    "sctk-adwaita/crossfont",
]
wayland-csd-adwaita-notitle = ["sctk-adwaita"]
wayland-dlopen = ["wayland-backend/dlopen"]
x11 = [
    "x11-dl",
    "bytemuck",
    "percent-encoding",
    "xkbcommon-dl/x11",
    "x11rb",
]

[lib]
name = "winit"
path = "src/lib.rs"

[[example]]
name = "child_window"
path = "examples/child_window.rs"

[[example]]
name = "control_flow"
path = "examples/control_flow.rs"

[[example]]
name = "pump_events"
path = "examples/pump_events.rs"

[[example]]
name = "run_on_demand"
path = "examples/run_on_demand.rs"

[[example]]
name = "window"
path = "examples/window.rs"
doc-scrape-examples = true

[[example]]
name = "x11_embed"
path = "examples/x11_embed.rs"

[[test]]
name = "send_objects"
path = "tests/send_objects.rs"

[[test]]
name = "serde_objects"
path = "tests/serde_objects.rs"

[[test]]
name = "sync_object"
path = "tests/sync_object.rs"

[dependencies]
bitflags = "2"
cursor-icon = "1.1.0"
smol_str = "0.2.0"

[dependencies.dpi]
version = "0.1.1"
path = "dpi"

[dependencies.rwh_04]
version = "0.4"
optional = true
package = "raw-window-handle"

[dependencies.rwh_05]
version = "0.5.2"
features = ["std"]
optional = true
package = "raw-window-handle"

[dependencies.rwh_06]
version = "0.6"
features = ["std"]
optional = true
package = "raw-window-handle"

[dependencies.serde]
version = "1"
features = ["serde_derive"]
optional = true

[dependencies.tracing]
version = "0.1.40"
default-features = false

[dev-dependencies.image]
version = "0.25.0"
features = ["png"]
default-features = false

[dev-dependencies.tracing]
version = "0.1.40"
features = ["log"]
default-features = false

[dev-dependencies.tracing-subscriber]
version = "0.3.18"
features = ["env-filter"]

[dev-dependencies.winit]
path = "."
features = ["rwh_05"]

[build-dependencies]
cfg_aliases = "0.2.1"

[target.'cfg(all(target_family = "wasm", target_feature = "atomics"))'.dependencies]
atomic-waker = "1"

[target.'cfg(all(target_family = "wasm", target_feature = "atomics"))'.dependencies.concurrent-queue]
version = "2"
default-features = false

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies]
calloop = "0.13.0"
libc = "0.2.64"
xkbcommon-dl = "0.4.2"

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.ahash]
version = "0.8.7"
features = ["no-rng"]
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.bytemuck]
version = "1.13.1"
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.memmap2]
version = "0.9.0"
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.percent-encoding]
version = "2.0"
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.rustix]
version = "0.38.4"
features = [
    "std",
    "system",
    "thread",
    "process",
]
default-features = false

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.sctk]
version = "0.19.2"
features = ["calloop"]
optional = true
default-features = false
package = "smithay-client-toolkit"

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.sctk-adwaita]
version = "0.10.1"
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.wayland-backend]
version = "0.3.5"
features = ["client_system"]
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.wayland-client]
version = "0.31.4"
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.wayland-protocols]
version = "0.32.2"
features = ["staging"]
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.wayland-protocols-plasma]
version = "0.3.2"
features = ["client"]
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.x11-dl]
version = "2.19.1"
optional = true

[target.'cfg(all(unix, not(any(target_os = "redox", target_family = "wasm", target_os = "android", target_os = "ios", target_os = "macos"))))'.dependencies.x11rb]
version = "0.13.0"
features = [
    "allow-unsafe-code",
    "dl-libxcb",
    "randr",
    "resource_manager",
    "xinput",
    "xkb",
]
optional = true
default-features = false

[target.'cfg(any(target_os = "ios", target_os = "macos"))'.dependencies]
core-foundation = "0.9.3"
objc2 = "0.5.2"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dev-dependencies.softbuffer]
version = "0.4.0"
features = [
    "x11",
    "x11-dlopen",
    "wayland",
    "wayland-dlopen",
]
default-features = false

[target.'cfg(target_family = "wasm")'.dependencies]
js-sys = "0.3.70"
pin-project = "1"
wasm-bindgen = "0.2.93"
wasm-bindgen-futures = "0.4.43"
web-time = "1"

[target.'cfg(target_family = "wasm")'.dependencies.web_sys]
version = "0.3.70"
features = [
    "AbortController",
    "AbortSignal",
    "Blob",
    "BlobPropertyBag",
    "console",
    "CssStyleDeclaration",
    "Document",
    "DomException",
    "DomRect",
    "DomRectReadOnly",
    "Element",
    "Event",
    "EventTarget",
    "FocusEvent",
    "HtmlCanvasElement",
    "HtmlElement",
    "HtmlImageElement",
    "ImageBitmap",
    "ImageBitmapOptions",
    "ImageBitmapRenderingContext",
    "ImageData",
    "IntersectionObserver",
    "IntersectionObserverEntry",
    "KeyboardEvent",
    "MediaQueryList",
    "MessageChannel",
    "MessagePort",
    "Navigator",
    "Node",
    "OrientationLockType",
    "OrientationType",
    "PageTransitionEvent",
    "Permissions",
    "PermissionState",
    "PermissionStatus",
    "PointerEvent",
    "PremultiplyAlpha",
    "ResizeObserver",
    "ResizeObserverBoxOptions",
    "ResizeObserverEntry",
    "ResizeObserverOptions",
    "ResizeObserverSize",
    "Screen",
    "ScreenOrientation",
    "Url",
    "VisibilityState",
    "WheelEvent",
    "Window",
    "Worker",
]
package = "web-sys"

[target.'cfg(target_family = "wasm")'.dev-dependencies]
console_error_panic_hook = "0.1"
tracing-web = "0.1"

[target.'cfg(target_os = "android")'.dependencies]
android-activity = "0.6.0"

[target.'cfg(target_os = "android")'.dependencies.ndk]
version = "0.9.0"
default-features = false

[target.'cfg(target_os = "ios")'.dependencies.objc2-foundation]
version = "0.2.2"
features = [
    "dispatch",
    "NSArray",
    "NSEnumerator",
    "NSGeometry",
    "NSObjCRuntime",
    "NSString",
    "NSProcessInfo",
    "NSThread",
    "NSSet",
]

[target.'cfg(target_os = "ios")'.dependencies.objc2-ui-kit]
version = "0.2.2"
features = [
    "UIApplication",
    "UIDevice",
    "UIEvent",
    "UIGeometry",
    "UIGestureRecognizer",
    "UITextInput",
    "UITextInputTraits",
    "UIOrientation",
    "UIPanGestureRecognizer",
    "UIPinchGestureRecognizer",
    "UIResponder",
    "UIRotationGestureRecognizer",
    "UIScreen",
    "UIScreenMode",
    "UITapGestureRecognizer",
    "UITouch",
    "UITraitCollection",
    "UIView",
    "UIViewController",
    "UIWindow",
]

[target.'cfg(target_os = "macos")'.dependencies]
block2 = "0.5.1"
core-graphics = "0.23.1"

[target.'cfg(target_os = "macos")'.dependencies.objc2-app-kit]
version = "0.2.2"
features = [
    "NSAppearance",
    "NSApplication",
    "NSBitmapImageRep",
    "NSButton",
    "NSColor",
    "NSControl",
    "NSCursor",
    "NSDragging",
    "NSEvent",
    "NSGraphics",
    "NSGraphicsContext",
    "NSImage",
    "NSImageRep",
    "NSMenu",
    "NSMenuItem",
    "NSOpenGLView",
    "NSPasteboard",
    "NSResponder",
    "NSRunningApplication",
    "NSScreen",
    "NSTextInputClient",
    "NSTextInputContext",
    "NSView",
    "NSWindow",
    "NSWindowScripting",
    "NSWindowTabGroup",
]

[target.'cfg(target_os = "macos")'.dependencies.objc2-foundation]
version = "0.2.2"
features = [
    "block2",
    "dispatch",
    "NSArray",
    "NSAttributedString",
    "NSData",
    "NSDictionary",
    "NSDistributedNotificationCenter",
    "NSEnumerator",
    "NSKeyValueObserving",
    "NSNotification",
    "NSObjCRuntime",
    "NSPathUtilities",
    "NSProcessInfo",
    "NSRunLoop",
    "NSString",
    "NSThread",
    "NSValue",
]

[target.'cfg(target_os = "redox")'.dependencies]
redox_syscall = "0.4.1"

[target.'cfg(target_os = "redox")'.dependencies.orbclient]
version = "0.3.47"
default-features = false

[target.'cfg(target_os = "windows")'.dependencies]
unicode-segmentation = "1.7.1"

[target.'cfg(target_os = "windows")'.dependencies.windows-sys]
version = "0.52.0"
features = [
    "Win32_Devices_HumanInterfaceDevice",
    "Win32_Foundation",
    "Win32_Globalization",
    "Win32_Graphics_Dwm",
    "Win32_Graphics_Gdi",
    "Win32_Media",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_Com",
    "Win32_System_LibraryLoader",
    "Win32_System_Ole",
    "Win32_Security",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
    "Win32_UI_Accessibility",
    "Win32_UI_Controls",
    "Win32_UI_HiDpi",
    "Win32_UI_Input_Ime",
    "Win32_UI_Input_KeyboardAndMouse",
    "Win32_UI_Input_Pointer",
    "Win32_UI_Input_Touch",
    "Win32_UI_Shell",
    "Win32_UI_TextServices",
    "Win32_UI_WindowsAndMessaging",
]

[workspace]
members = ["dpi"]
resolver = "2"

[workspace.package]
license = "Apache-2.0"
repository = "https://github.com/rust-windowing/winit"
edition = "2021"
rust-version = "1.70.0"

[workspace.dependencies]
mint = "0.5.6"

[workspace.dependencies.serde]
version = "1"
features = ["serde_derive"]
