//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSToolbarItemGroupSelectionMode(pub NSInteger);
impl NSToolbarItemGroupSelectionMode {
    #[doc(alias = "NSToolbarItemGroupSelectionModeSelectOne")]
    pub const SelectOne: Self = Self(0);
    #[doc(alias = "NSToolbarItemGroupSelectionModeSelectAny")]
    pub const SelectAny: Self = Self(1);
    #[doc(alias = "NSToolbarItemGroupSelectionModeMomentary")]
    pub const Momentary: Self = Self(2);
}

unsafe impl Encode for NSToolbarItemGroupSelectionMode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NSToolbarItemGroupSelectionMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSToolbarItemGroupControlRepresentation(pub NSInteger);
impl NSToolbarItemGroupControlRepresentation {
    #[doc(alias = "NSToolbarItemGroupControlRepresentationAutomatic")]
    pub const Automatic: Self = Self(0);
    #[doc(alias = "NSToolbarItemGroupControlRepresentationExpanded")]
    pub const Expanded: Self = Self(1);
    #[doc(alias = "NSToolbarItemGroupControlRepresentationCollapsed")]
    pub const Collapsed: Self = Self(2);
}

unsafe impl Encode for NSToolbarItemGroupControlRepresentation {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NSToolbarItemGroupControlRepresentation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "NSToolbarItem")]
    pub struct NSToolbarItemGroup;

    #[cfg(feature = "NSToolbarItem")]
    unsafe impl ClassType for NSToolbarItemGroup {
        #[inherits(NSObject)]
        type Super = NSToolbarItem;
        type Mutability = MainThreadOnly;
    }
);

#[cfg(feature = "NSToolbarItem")]
unsafe impl NSCopying for NSToolbarItemGroup {}

#[cfg(feature = "NSToolbarItem")]
unsafe impl NSObjectProtocol for NSToolbarItemGroup {}

extern_methods!(
    #[cfg(feature = "NSToolbarItem")]
    unsafe impl NSToolbarItemGroup {
        #[cfg(feature = "NSToolbar")]
        #[method_id(@__retain_semantics Other groupWithItemIdentifier:titles:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_titles_selectionMode_labels_target_action(
            item_identifier: &NSToolbarItemIdentifier,
            titles: &NSArray<NSString>,
            selection_mode: NSToolbarItemGroupSelectionMode,
            labels: Option<&NSArray<NSString>>,
            target: Option<&AnyObject>,
            action: Option<Sel>,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[cfg(all(feature = "NSImage", feature = "NSToolbar"))]
        #[method_id(@__retain_semantics Other groupWithItemIdentifier:images:selectionMode:labels:target:action:)]
        pub unsafe fn groupWithItemIdentifier_images_selectionMode_labels_target_action(
            item_identifier: &NSToolbarItemIdentifier,
            images: &NSArray<NSImage>,
            selection_mode: NSToolbarItemGroupSelectionMode,
            labels: Option<&NSArray<NSString>>,
            target: Option<&AnyObject>,
            action: Option<Sel>,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other subitems)]
        pub unsafe fn subitems(&self) -> Retained<NSArray<NSToolbarItem>>;

        #[method(setSubitems:)]
        pub unsafe fn setSubitems(&self, subitems: &NSArray<NSToolbarItem>);

        #[method(controlRepresentation)]
        pub unsafe fn controlRepresentation(&self) -> NSToolbarItemGroupControlRepresentation;

        #[method(setControlRepresentation:)]
        pub unsafe fn setControlRepresentation(
            &self,
            control_representation: NSToolbarItemGroupControlRepresentation,
        );

        #[method(selectionMode)]
        pub unsafe fn selectionMode(&self) -> NSToolbarItemGroupSelectionMode;

        #[method(setSelectionMode:)]
        pub unsafe fn setSelectionMode(&self, selection_mode: NSToolbarItemGroupSelectionMode);

        #[method(selectedIndex)]
        pub unsafe fn selectedIndex(&self) -> NSInteger;

        #[method(setSelectedIndex:)]
        pub unsafe fn setSelectedIndex(&self, selected_index: NSInteger);

        #[method(setSelected:atIndex:)]
        pub unsafe fn setSelected_atIndex(&self, selected: bool, index: NSInteger);

        #[method(isSelectedAtIndex:)]
        pub unsafe fn isSelectedAtIndex(&self, index: NSInteger) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSToolbarItem`
    #[cfg(feature = "NSToolbarItem")]
    unsafe impl NSToolbarItemGroup {
        #[cfg(feature = "NSToolbar")]
        #[method_id(@__retain_semantics Init initWithItemIdentifier:)]
        pub unsafe fn initWithItemIdentifier(
            this: Allocated<Self>,
            item_identifier: &NSToolbarItemIdentifier,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "NSToolbarItem")]
    unsafe impl NSToolbarItemGroup {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
