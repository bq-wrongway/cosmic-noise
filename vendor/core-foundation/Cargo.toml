# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.65"
name = "core-foundation"
version = "0.10.1"
authors = ["The Servo Project Developers"]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bindings to Core Foundation for macOS"
readme = false
keywords = [
    "macos",
    "framework",
    "objc",
]
categories = ["os::macos-apis"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/servo/core-foundation-rs"

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-apple-darwin"

[lib]
name = "core_foundation"
path = "src/lib.rs"

[[test]]
name = "use_macro_outside_crate"
path = "tests/use_macro_outside_crate.rs"

[dependencies.core-foundation-sys]
version = "0.8"
default-features = false

[dependencies.libc]
version = "0.2"

[dependencies.uuid]
version = "1"
optional = true

[features]
default = ["link"]
link = ["core-foundation-sys/link"]
mac_os_10_7_support = ["core-foundation-sys/mac_os_10_7_support"]
mac_os_10_8_features = ["core-foundation-sys/mac_os_10_8_features"]
with-uuid = ["dep:uuid"]

[lints.clippy]
assertions_on_constants = "allow"
doc_markdown = "warn"
len_without_is_empty = "allow"
manual_range_contains = "allow"
missing_safety_doc = "allow"
new_ret_no_self = "allow"
new_without_default = "allow"
non_canonical_partial_ord_impl = "allow"
not_unsafe_ptr_arg_deref = "allow"
result_unit_err = "allow"
too_many_arguments = "allow"
type_complexity = "allow"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ['cfg(feature, values("cargo-clippy"))']
