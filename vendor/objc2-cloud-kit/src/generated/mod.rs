// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]

#[link(name = "CloudKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "CKAcceptSharesOperation")]
#[path = "CKAcceptSharesOperation.rs"]
mod __CKAcceptSharesOperation;
#[cfg(feature = "CKAllowedSharingOptions")]
#[path = "CKAllowedSharingOptions.rs"]
mod __CKAllowedSharingOptions;
#[cfg(feature = "CKAsset")]
#[path = "CKAsset.rs"]
mod __CKAsset;
#[cfg(feature = "CKContainer")]
#[path = "CKContainer.rs"]
mod __CKContainer;
#[cfg(feature = "CKDatabase")]
#[path = "CKDatabase.rs"]
mod __CKDatabase;
#[cfg(feature = "CKDatabaseOperation")]
#[path = "CKDatabaseOperation.rs"]
mod __CKDatabaseOperation;
#[cfg(feature = "CKDefines")]
#[path = "CKDefines.rs"]
mod __CKDefines;
#[cfg(feature = "CKDiscoverAllUserIdentitiesOperation")]
#[path = "CKDiscoverAllUserIdentitiesOperation.rs"]
mod __CKDiscoverAllUserIdentitiesOperation;
#[cfg(feature = "CKDiscoverUserIdentitiesOperation")]
#[path = "CKDiscoverUserIdentitiesOperation.rs"]
mod __CKDiscoverUserIdentitiesOperation;
#[cfg(feature = "CKError")]
#[path = "CKError.rs"]
mod __CKError;
#[cfg(feature = "CKFetchDatabaseChangesOperation")]
#[path = "CKFetchDatabaseChangesOperation.rs"]
mod __CKFetchDatabaseChangesOperation;
#[cfg(feature = "CKFetchNotificationChangesOperation")]
#[path = "CKFetchNotificationChangesOperation.rs"]
mod __CKFetchNotificationChangesOperation;
#[cfg(feature = "CKFetchRecordChangesOperation")]
#[path = "CKFetchRecordChangesOperation.rs"]
mod __CKFetchRecordChangesOperation;
#[cfg(feature = "CKFetchRecordZoneChangesOperation")]
#[path = "CKFetchRecordZoneChangesOperation.rs"]
mod __CKFetchRecordZoneChangesOperation;
#[cfg(feature = "CKFetchRecordZonesOperation")]
#[path = "CKFetchRecordZonesOperation.rs"]
mod __CKFetchRecordZonesOperation;
#[cfg(feature = "CKFetchRecordsOperation")]
#[path = "CKFetchRecordsOperation.rs"]
mod __CKFetchRecordsOperation;
#[cfg(feature = "CKFetchShareMetadataOperation")]
#[path = "CKFetchShareMetadataOperation.rs"]
mod __CKFetchShareMetadataOperation;
#[cfg(feature = "CKFetchShareParticipantsOperation")]
#[path = "CKFetchShareParticipantsOperation.rs"]
mod __CKFetchShareParticipantsOperation;
#[cfg(feature = "CKFetchSubscriptionsOperation")]
#[path = "CKFetchSubscriptionsOperation.rs"]
mod __CKFetchSubscriptionsOperation;
#[cfg(feature = "CKFetchWebAuthTokenOperation")]
#[path = "CKFetchWebAuthTokenOperation.rs"]
mod __CKFetchWebAuthTokenOperation;
#[cfg(feature = "CKLocationSortDescriptor")]
#[path = "CKLocationSortDescriptor.rs"]
mod __CKLocationSortDescriptor;
#[cfg(feature = "CKMarkNotificationsReadOperation")]
#[path = "CKMarkNotificationsReadOperation.rs"]
mod __CKMarkNotificationsReadOperation;
#[cfg(feature = "CKModifyBadgeOperation")]
#[path = "CKModifyBadgeOperation.rs"]
mod __CKModifyBadgeOperation;
#[cfg(feature = "CKModifyRecordZonesOperation")]
#[path = "CKModifyRecordZonesOperation.rs"]
mod __CKModifyRecordZonesOperation;
#[cfg(feature = "CKModifyRecordsOperation")]
#[path = "CKModifyRecordsOperation.rs"]
mod __CKModifyRecordsOperation;
#[cfg(feature = "CKModifySubscriptionsOperation")]
#[path = "CKModifySubscriptionsOperation.rs"]
mod __CKModifySubscriptionsOperation;
#[cfg(feature = "CKNotification")]
#[path = "CKNotification.rs"]
mod __CKNotification;
#[cfg(feature = "CKOperation")]
#[path = "CKOperation.rs"]
mod __CKOperation;
#[cfg(feature = "CKOperationGroup")]
#[path = "CKOperationGroup.rs"]
mod __CKOperationGroup;
#[cfg(feature = "CKQuery")]
#[path = "CKQuery.rs"]
mod __CKQuery;
#[cfg(feature = "CKQueryOperation")]
#[path = "CKQueryOperation.rs"]
mod __CKQueryOperation;
#[cfg(feature = "CKRecord")]
#[path = "CKRecord.rs"]
mod __CKRecord;
#[cfg(feature = "CKRecordID")]
#[path = "CKRecordID.rs"]
mod __CKRecordID;
#[cfg(feature = "CKRecordZone")]
#[path = "CKRecordZone.rs"]
mod __CKRecordZone;
#[cfg(feature = "CKRecordZoneID")]
#[path = "CKRecordZoneID.rs"]
mod __CKRecordZoneID;
#[cfg(feature = "CKReference")]
#[path = "CKReference.rs"]
mod __CKReference;
#[cfg(feature = "CKServerChangeToken")]
#[path = "CKServerChangeToken.rs"]
mod __CKServerChangeToken;
#[cfg(feature = "CKShare")]
#[path = "CKShare.rs"]
mod __CKShare;
#[cfg(feature = "CKShareMetadata")]
#[path = "CKShareMetadata.rs"]
mod __CKShareMetadata;
#[cfg(feature = "CKShareParticipant")]
#[path = "CKShareParticipant.rs"]
mod __CKShareParticipant;
#[cfg(feature = "CKSubscription")]
#[path = "CKSubscription.rs"]
mod __CKSubscription;
#[cfg(feature = "CKSyncEngine")]
#[path = "CKSyncEngine.rs"]
mod __CKSyncEngine;
#[cfg(feature = "CKSyncEngineConfiguration")]
#[path = "CKSyncEngineConfiguration.rs"]
mod __CKSyncEngineConfiguration;
#[cfg(feature = "CKSyncEngineEvent")]
#[path = "CKSyncEngineEvent.rs"]
mod __CKSyncEngineEvent;
#[cfg(feature = "CKSyncEngineRecordZoneChangeBatch")]
#[path = "CKSyncEngineRecordZoneChangeBatch.rs"]
mod __CKSyncEngineRecordZoneChangeBatch;
#[cfg(feature = "CKSyncEngineState")]
#[path = "CKSyncEngineState.rs"]
mod __CKSyncEngineState;
#[cfg(feature = "CKSystemSharingUIObserver")]
#[path = "CKSystemSharingUIObserver.rs"]
mod __CKSystemSharingUIObserver;
#[cfg(feature = "CKUserIdentity")]
#[path = "CKUserIdentity.rs"]
mod __CKUserIdentity;
#[cfg(feature = "CKUserIdentityLookupInfo")]
#[path = "CKUserIdentityLookupInfo.rs"]
mod __CKUserIdentityLookupInfo;
#[cfg(feature = "NSItemProvider_CKSharingSupport")]
#[path = "NSItemProvider_CKSharingSupport.rs"]
mod __NSItemProvider_CKSharingSupport;

#[cfg(all(feature = "CKAcceptSharesOperation", feature = "CKOperation"))]
pub use self::__CKAcceptSharesOperation::CKAcceptSharesOperation;
#[cfg(feature = "CKAllowedSharingOptions")]
pub use self::__CKAllowedSharingOptions::CKAllowedSharingOptions;
#[cfg(feature = "CKAllowedSharingOptions")]
pub use self::__CKAllowedSharingOptions::CKSharingParticipantAccessOption;
#[cfg(feature = "CKAllowedSharingOptions")]
pub use self::__CKAllowedSharingOptions::CKSharingParticipantPermissionOption;
#[cfg(feature = "CKAsset")]
pub use self::__CKAsset::CKAsset;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKAccountChangedNotification;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKAccountStatus;
#[cfg(all(feature = "CKContainer", feature = "block2"))]
pub use self::__CKContainer::CKApplicationPermissionBlock;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKApplicationPermissionStatus;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKApplicationPermissions;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKContainer;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKCurrentUserDefaultName;
#[cfg(feature = "CKContainer")]
pub use self::__CKContainer::CKOwnerDefaultName;
#[cfg(feature = "CKDatabase")]
pub use self::__CKDatabase::CKDatabase;
#[cfg(feature = "CKDatabase")]
pub use self::__CKDatabase::CKDatabaseScope;
#[cfg(all(feature = "CKDatabaseOperation", feature = "CKOperation"))]
pub use self::__CKDatabaseOperation::CKDatabaseOperation;
#[cfg(all(
    feature = "CKDiscoverAllUserIdentitiesOperation",
    feature = "CKOperation"
))]
pub use self::__CKDiscoverAllUserIdentitiesOperation::CKDiscoverAllUserIdentitiesOperation;
#[cfg(all(feature = "CKDiscoverUserIdentitiesOperation", feature = "CKOperation"))]
pub use self::__CKDiscoverUserIdentitiesOperation::CKDiscoverUserIdentitiesOperation;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKErrorCode;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKErrorDomain;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKErrorRetryAfterKey;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKErrorUserDidResetEncryptedDataKey;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKPartialErrorsByItemIDKey;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKRecordChangedErrorAncestorRecordKey;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKRecordChangedErrorClientRecordKey;
#[cfg(feature = "CKError")]
pub use self::__CKError::CKRecordChangedErrorServerRecordKey;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchDatabaseChangesOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchDatabaseChangesOperation::CKFetchDatabaseChangesOperation;
#[cfg(all(
    feature = "CKFetchNotificationChangesOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchNotificationChangesOperation::CKFetchNotificationChangesOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchRecordChangesOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchRecordChangesOperation::CKFetchRecordChangesOperation;
#[cfg(feature = "CKFetchRecordZoneChangesOperation")]
pub use self::__CKFetchRecordZoneChangesOperation::CKFetchRecordZoneChangesConfiguration;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchRecordZoneChangesOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchRecordZoneChangesOperation::CKFetchRecordZoneChangesOperation;
#[cfg(feature = "CKFetchRecordZoneChangesOperation")]
pub use self::__CKFetchRecordZoneChangesOperation::CKFetchRecordZoneChangesOptions;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchRecordZonesOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchRecordZonesOperation::CKFetchRecordZonesOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchRecordsOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchRecordsOperation::CKFetchRecordsOperation;
#[cfg(all(feature = "CKFetchShareMetadataOperation", feature = "CKOperation"))]
pub use self::__CKFetchShareMetadataOperation::CKFetchShareMetadataOperation;
#[cfg(all(feature = "CKFetchShareParticipantsOperation", feature = "CKOperation"))]
pub use self::__CKFetchShareParticipantsOperation::CKFetchShareParticipantsOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchSubscriptionsOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchSubscriptionsOperation::CKFetchSubscriptionsOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKFetchWebAuthTokenOperation",
    feature = "CKOperation"
))]
pub use self::__CKFetchWebAuthTokenOperation::CKFetchWebAuthTokenOperation;
#[cfg(feature = "CKLocationSortDescriptor")]
pub use self::__CKLocationSortDescriptor::CKLocationSortDescriptor;
#[cfg(all(feature = "CKMarkNotificationsReadOperation", feature = "CKOperation"))]
pub use self::__CKMarkNotificationsReadOperation::CKMarkNotificationsReadOperation;
#[cfg(all(feature = "CKModifyBadgeOperation", feature = "CKOperation"))]
pub use self::__CKModifyBadgeOperation::CKModifyBadgeOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKModifyRecordZonesOperation",
    feature = "CKOperation"
))]
pub use self::__CKModifyRecordZonesOperation::CKModifyRecordZonesOperation;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKModifyRecordsOperation",
    feature = "CKOperation"
))]
pub use self::__CKModifyRecordsOperation::CKModifyRecordsOperation;
#[cfg(feature = "CKModifyRecordsOperation")]
pub use self::__CKModifyRecordsOperation::CKRecordSavePolicy;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKModifySubscriptionsOperation",
    feature = "CKOperation"
))]
pub use self::__CKModifySubscriptionsOperation::CKModifySubscriptionsOperation;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKDatabaseNotification;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKNotification;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKNotificationID;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKNotificationType;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKQueryNotification;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKQueryNotificationReason;
#[cfg(feature = "CKNotification")]
pub use self::__CKNotification::CKRecordZoneNotification;
#[cfg(feature = "CKOperation")]
pub use self::__CKOperation::CKOperation;
#[cfg(feature = "CKOperation")]
pub use self::__CKOperation::CKOperationConfiguration;
#[cfg(feature = "CKOperation")]
pub use self::__CKOperation::CKOperationID;
#[cfg(feature = "CKOperationGroup")]
pub use self::__CKOperationGroup::CKOperationGroup;
#[cfg(feature = "CKOperationGroup")]
pub use self::__CKOperationGroup::CKOperationGroupTransferSize;
#[cfg(feature = "CKQuery")]
pub use self::__CKQuery::CKQuery;
#[cfg(feature = "CKQueryOperation")]
pub use self::__CKQueryOperation::CKQueryCursor;
#[cfg(all(
    feature = "CKDatabaseOperation",
    feature = "CKOperation",
    feature = "CKQueryOperation"
))]
pub use self::__CKQueryOperation::CKQueryOperation;
#[cfg(feature = "CKQueryOperation")]
pub use self::__CKQueryOperation::CKQueryOperationMaximumResults;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecord;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordCreationDateKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordCreatorUserRecordIDKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordFieldKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordKeyValueSetting;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordLastModifiedUserRecordIDKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordModificationDateKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordParentKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordRecordIDKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordShareKey;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordType;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordTypeUserRecord;
#[cfg(feature = "CKRecord")]
pub use self::__CKRecord::CKRecordValue;
#[cfg(feature = "CKRecordID")]
pub use self::__CKRecordID::CKRecordID;
#[cfg(feature = "CKRecordZone")]
pub use self::__CKRecordZone::CKRecordZone;
#[cfg(feature = "CKRecordZone")]
pub use self::__CKRecordZone::CKRecordZoneCapabilities;
#[cfg(feature = "CKRecordZone")]
pub use self::__CKRecordZone::CKRecordZoneDefaultName;
#[cfg(feature = "CKRecordZoneID")]
pub use self::__CKRecordZoneID::CKRecordZoneID;
#[cfg(feature = "CKReference")]
pub use self::__CKReference::CKReference;
#[cfg(feature = "CKReference")]
pub use self::__CKReference::CKReferenceAction;
#[cfg(feature = "CKServerChangeToken")]
pub use self::__CKServerChangeToken::CKServerChangeToken;
#[cfg(feature = "CKShare")]
pub use self::__CKShare::CKRecordNameZoneWideShare;
#[cfg(all(feature = "CKRecord", feature = "CKShare"))]
pub use self::__CKShare::CKRecordTypeShare;
#[cfg(all(feature = "CKRecord", feature = "CKShare"))]
pub use self::__CKShare::CKShare;
#[cfg(all(feature = "CKRecord", feature = "CKShare"))]
pub use self::__CKShare::CKShareThumbnailImageDataKey;
#[cfg(all(feature = "CKRecord", feature = "CKShare"))]
pub use self::__CKShare::CKShareTitleKey;
#[cfg(all(feature = "CKRecord", feature = "CKShare"))]
pub use self::__CKShare::CKShareTypeKey;
#[cfg(feature = "CKShareMetadata")]
pub use self::__CKShareMetadata::CKShareMetadata;
#[cfg(feature = "CKShareParticipant")]
pub use self::__CKShareParticipant::CKShareParticipant;
#[cfg(feature = "CKShareParticipant")]
pub use self::__CKShareParticipant::CKShareParticipantAcceptanceStatus;
#[cfg(feature = "CKShareParticipant")]
pub use self::__CKShareParticipant::CKShareParticipantPermission;
#[cfg(feature = "CKShareParticipant")]
pub use self::__CKShareParticipant::CKShareParticipantRole;
#[cfg(feature = "CKShareParticipant")]
pub use self::__CKShareParticipant::CKShareParticipantType;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKDatabaseSubscription;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKNotificationInfo;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKQuerySubscription;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKQuerySubscriptionOptions;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKRecordZoneSubscription;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKSubscription;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKSubscriptionID;
#[cfg(feature = "CKSubscription")]
pub use self::__CKSubscription::CKSubscriptionType;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngine;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineDelegate;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineFetchChangesContext;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineFetchChangesOptions;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineFetchChangesScope;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineSendChangesContext;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineSendChangesOptions;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineSendChangesScope;
#[cfg(feature = "CKSyncEngine")]
pub use self::__CKSyncEngine::CKSyncEngineSyncReason;
#[cfg(feature = "CKSyncEngineConfiguration")]
pub use self::__CKSyncEngineConfiguration::CKSyncEngineConfiguration;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineAccountChangeEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineAccountChangeType;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineDidFetchChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineDidFetchRecordZoneChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineDidSendChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineEventType;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFailedRecordSave;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFailedZoneSave;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFetchedDatabaseChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFetchedRecordDeletion;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFetchedRecordZoneChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineFetchedZoneDeletion;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineSentDatabaseChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineSentRecordZoneChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineStateUpdateEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineWillFetchChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineWillFetchRecordZoneChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineWillSendChangesEvent;
#[cfg(feature = "CKSyncEngineEvent")]
pub use self::__CKSyncEngineEvent::CKSyncEngineZoneDeletionReason;
#[cfg(feature = "CKSyncEngineRecordZoneChangeBatch")]
pub use self::__CKSyncEngineRecordZoneChangeBatch::CKSyncEngineRecordZoneChangeBatch;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingDatabaseChange;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingDatabaseChangeType;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingRecordZoneChange;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingRecordZoneChangeType;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingZoneDelete;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEnginePendingZoneSave;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEngineState;
#[cfg(feature = "CKSyncEngineState")]
pub use self::__CKSyncEngineState::CKSyncEngineStateSerialization;
#[cfg(feature = "CKSystemSharingUIObserver")]
pub use self::__CKSystemSharingUIObserver::CKSystemSharingUIObserver;
#[cfg(feature = "CKUserIdentity")]
pub use self::__CKUserIdentity::CKUserIdentity;
#[cfg(feature = "CKUserIdentityLookupInfo")]
pub use self::__CKUserIdentityLookupInfo::CKUserIdentityLookupInfo;
#[cfg(all(
    feature = "CKRecord",
    feature = "CKShare",
    feature = "NSItemProvider_CKSharingSupport",
    feature = "block2"
))]
pub use self::__NSItemProvider_CKSharingSupport::CKSharePreparationCompletionHandler;
#[cfg(all(
    feature = "CKRecord",
    feature = "CKShare",
    feature = "NSItemProvider_CKSharingSupport",
    feature = "block2"
))]
pub use self::__NSItemProvider_CKSharingSupport::CKSharePreparationHandler;
#[cfg(feature = "NSItemProvider_CKSharingSupport")]
pub use self::__NSItemProvider_CKSharingSupport::NSItemProviderCKSharingSupport;
