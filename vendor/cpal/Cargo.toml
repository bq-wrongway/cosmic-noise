# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "cpal"
version = "0.15.3"
description = "Low-level cross-platform audio I/O library in pure Rust."
documentation = "https://docs.rs/cpal"
readme = "README.md"
keywords = [
    "audio",
    "sound",
]
license = "Apache-2.0"
repository = "https://github.com/rustaudio/cpal"

[[example]]
name = "android"
crate-type = ["cdylib"]
path = "examples/android.rs"

[[example]]
name = "beep"

[[example]]
name = "enumerate"

[[example]]
name = "feedback"

[[example]]
name = "record_wav"

[[example]]
name = "synth_tones"

[dependencies.dasp_sample]
version = "0.11"

[dev-dependencies.anyhow]
version = "1.0"

[dev-dependencies.clap]
version = "4.0"
features = ["derive"]

[dev-dependencies.hound]
version = "3.5"

[dev-dependencies.ringbuf]
version = "0.3"

[features]
asio = [
    "asio-sys",
    "num-traits",
]
oboe-shared-stdcxx = ["oboe/shared-stdcxx"]

[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.js-sys]
version = "0.3.35"

[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.wasm-bindgen]
version = "0.2.58"
optional = true

[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))".dependencies.web-sys]
version = "0.3.35"
features = [
    "AudioContext",
    "AudioContextOptions",
    "AudioBuffer",
    "AudioBufferSourceNode",
    "AudioNode",
    "AudioDestinationNode",
    "Window",
    "AudioContextState",
]

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))".dependencies.alsa]
version = "0.9"

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))".dependencies.jack]
version = "0.11"
optional = true

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"netbsd\"))".dependencies.libc]
version = "0.2"

[target."cfg(any(target_os = \"macos\", target_os = \"ios\"))".dependencies.core-foundation-sys]
version = "0.8.2"

[target."cfg(any(target_os = \"macos\", target_os = \"ios\"))".dependencies.mach2]
version = "0.4"

[target."cfg(target_os = \"android\")".dependencies.jni]
version = "0.21"

[target."cfg(target_os = \"android\")".dependencies.ndk]
version = "0.8"
default-features = false

[target."cfg(target_os = \"android\")".dependencies.ndk-context]
version = "0.1"

[target."cfg(target_os = \"android\")".dependencies.oboe]
version = "0.6"
features = ["java-interface"]

[target."cfg(target_os = \"android\")".dev-dependencies.ndk-glue]
version = "0.7"

[target."cfg(target_os = \"emscripten\")".dependencies.js-sys]
version = "0.3.35"

[target."cfg(target_os = \"emscripten\")".dependencies.wasm-bindgen]
version = "0.2.89"

[target."cfg(target_os = \"emscripten\")".dependencies.wasm-bindgen-futures]
version = "0.4.33"

[target."cfg(target_os = \"emscripten\")".dependencies.web-sys]
version = "0.3.35"
features = [
    "AudioContext",
    "AudioContextOptions",
    "AudioBuffer",
    "AudioBufferSourceNode",
    "AudioNode",
    "AudioDestinationNode",
    "Window",
    "AudioContextState",
]

[target."cfg(target_os = \"ios\")".dependencies.coreaudio-rs]
version = "0.11"
features = [
    "audio_unit",
    "core_audio",
    "audio_toolbox",
]
default-features = false

[target."cfg(target_os = \"macos\")".dependencies.coreaudio-rs]
version = "0.11"
features = [
    "audio_unit",
    "core_audio",
]
default-features = false

[target."cfg(target_os = \"windows\")".dependencies.asio-sys]
version = "0.2"
optional = true

[target."cfg(target_os = \"windows\")".dependencies.num-traits]
version = "0.2.6"
optional = true

[target."cfg(target_os = \"windows\")".dependencies.windows]
version = "0.54.0"
features = [
    "Win32_Media_Audio",
    "Win32_Foundation",
    "Win32_Devices_Properties",
    "Win32_Media_KernelStreaming",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_Threading",
    "Win32_Security",
    "Win32_System_SystemServices",
    "Win32_System_Variant",
    "Win32_Media_Multimedia",
    "Win32_UI_Shell_PropertiesSystem",
]
