//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
    pub struct UITableViewController;

    #[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
    unsafe impl ClassType for UITableViewController {
        #[inherits(UIResponder, NSObject)]
        type Super = UIViewController;
        type Mutability = MainThreadOnly;
    }
);

#[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
unsafe impl NSCoding for UITableViewController {}

#[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
unsafe impl NSObjectProtocol for UITableViewController {}

#[cfg(all(
    feature = "UIAppearance",
    feature = "UIResponder",
    feature = "UIViewController"
))]
unsafe impl UIAppearanceContainer for UITableViewController {}

#[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
unsafe impl UIContentContainer for UITableViewController {}

#[cfg(all(
    feature = "UIFocus",
    feature = "UIResponder",
    feature = "UIViewController"
))]
unsafe impl UIFocusEnvironment for UITableViewController {}

#[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
unsafe impl UIResponderStandardEditActions for UITableViewController {}

#[cfg(all(
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UIViewController"
))]
unsafe impl UIScrollViewDelegate for UITableViewController {}

#[cfg(all(
    feature = "UIResponder",
    feature = "UITableView",
    feature = "UIViewController"
))]
unsafe impl UITableViewDataSource for UITableViewController {}

#[cfg(all(
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UITableView",
    feature = "UIViewController"
))]
unsafe impl UITableViewDelegate for UITableViewController {}

#[cfg(all(
    feature = "UIResponder",
    feature = "UITraitCollection",
    feature = "UIViewController"
))]
unsafe impl UITraitEnvironment for UITableViewController {}

extern_methods!(
    #[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
    unsafe impl UITableViewController {
        #[cfg(feature = "UITableView")]
        #[method_id(@__retain_semantics Init initWithStyle:)]
        pub unsafe fn initWithStyle(
            this: Allocated<Self>,
            style: UITableViewStyle,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithNibName:bundle:)]
        pub unsafe fn initWithNibName_bundle(
            this: Allocated<Self>,
            nib_name_or_nil: Option<&NSString>,
            nib_bundle_or_nil: Option<&NSBundle>,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithCoder:)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "UIScrollView", feature = "UITableView", feature = "UIView"))]
        #[method_id(@__retain_semantics Other tableView)]
        pub unsafe fn tableView(&self) -> Option<Retained<UITableView>>;

        #[cfg(all(feature = "UIScrollView", feature = "UITableView", feature = "UIView"))]
        #[method(setTableView:)]
        pub unsafe fn setTableView(&self, table_view: Option<&UITableView>);

        #[method(clearsSelectionOnViewWillAppear)]
        pub unsafe fn clearsSelectionOnViewWillAppear(&self) -> bool;

        #[method(setClearsSelectionOnViewWillAppear:)]
        pub unsafe fn setClearsSelectionOnViewWillAppear(
            &self,
            clears_selection_on_view_will_appear: bool,
        );

        #[cfg(all(
            feature = "UIControl",
            feature = "UIRefreshControl",
            feature = "UIView"
        ))]
        #[method_id(@__retain_semantics Other refreshControl)]
        pub unsafe fn refreshControl(&self) -> Option<Retained<UIRefreshControl>>;

        #[cfg(all(
            feature = "UIControl",
            feature = "UIRefreshControl",
            feature = "UIView"
        ))]
        #[method(setRefreshControl:)]
        pub unsafe fn setRefreshControl(&self, refresh_control: Option<&UIRefreshControl>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
    unsafe impl UITableViewController {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
