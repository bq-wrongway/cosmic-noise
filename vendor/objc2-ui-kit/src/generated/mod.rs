// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]

#[link(name = "UIKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "DocumentManager")]
#[path = "DocumentManager.rs"]
mod __DocumentManager;
#[cfg(feature = "NSAttributedString")]
#[path = "NSAttributedString.rs"]
mod __NSAttributedString;
#[cfg(feature = "NSDataAsset")]
#[path = "NSDataAsset.rs"]
mod __NSDataAsset;
#[cfg(feature = "NSDiffableDataSourceSectionSnapshot")]
#[path = "NSDiffableDataSourceSectionSnapshot.rs"]
mod __NSDiffableDataSourceSectionSnapshot;
#[cfg(feature = "NSFileProviderExtension")]
#[path = "NSFileProviderExtension.rs"]
mod __NSFileProviderExtension;
#[cfg(feature = "NSIndexPath_UIKitAdditions")]
#[path = "NSIndexPath_UIKitAdditions.rs"]
mod __NSIndexPath_UIKitAdditions;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
#[path = "NSItemProvider_UIKitAdditions.rs"]
mod __NSItemProvider_UIKitAdditions;
#[cfg(feature = "NSLayoutAnchor")]
#[path = "NSLayoutAnchor.rs"]
mod __NSLayoutAnchor;
#[cfg(feature = "NSLayoutConstraint")]
#[path = "NSLayoutConstraint.rs"]
mod __NSLayoutConstraint;
#[cfg(feature = "NSLayoutManager")]
#[path = "NSLayoutManager.rs"]
mod __NSLayoutManager;
#[cfg(feature = "NSParagraphStyle")]
#[path = "NSParagraphStyle.rs"]
mod __NSParagraphStyle;
#[cfg(feature = "NSShadow")]
#[path = "NSShadow.rs"]
mod __NSShadow;
#[cfg(feature = "NSStringDrawing")]
#[path = "NSStringDrawing.rs"]
mod __NSStringDrawing;
#[cfg(feature = "NSText")]
#[path = "NSText.rs"]
mod __NSText;
#[cfg(feature = "NSTextAttachment")]
#[path = "NSTextAttachment.rs"]
mod __NSTextAttachment;
#[cfg(feature = "NSTextContainer")]
#[path = "NSTextContainer.rs"]
mod __NSTextContainer;
#[cfg(feature = "NSTextContentManager")]
#[path = "NSTextContentManager.rs"]
mod __NSTextContentManager;
#[cfg(feature = "NSTextElement")]
#[path = "NSTextElement.rs"]
mod __NSTextElement;
#[cfg(feature = "NSTextLayoutFragment")]
#[path = "NSTextLayoutFragment.rs"]
mod __NSTextLayoutFragment;
#[cfg(feature = "NSTextLayoutManager")]
#[path = "NSTextLayoutManager.rs"]
mod __NSTextLayoutManager;
#[cfg(feature = "NSTextLineFragment")]
#[path = "NSTextLineFragment.rs"]
mod __NSTextLineFragment;
#[cfg(feature = "NSTextList")]
#[path = "NSTextList.rs"]
mod __NSTextList;
#[cfg(feature = "NSTextListElement")]
#[path = "NSTextListElement.rs"]
mod __NSTextListElement;
#[cfg(feature = "NSTextRange")]
#[path = "NSTextRange.rs"]
mod __NSTextRange;
#[cfg(feature = "NSTextSelection")]
#[path = "NSTextSelection.rs"]
mod __NSTextSelection;
#[cfg(feature = "NSTextSelectionNavigation")]
#[path = "NSTextSelectionNavigation.rs"]
mod __NSTextSelectionNavigation;
#[cfg(feature = "NSTextStorage")]
#[path = "NSTextStorage.rs"]
mod __NSTextStorage;
#[cfg(feature = "NSTextViewportLayoutController")]
#[path = "NSTextViewportLayoutController.rs"]
mod __NSTextViewportLayoutController;
#[cfg(feature = "NSToolbar_UIKitAdditions")]
#[path = "NSToolbar_UIKitAdditions.rs"]
mod __NSToolbar_UIKitAdditions;
#[cfg(feature = "NSTouchBar_UIKitAdditions")]
#[path = "NSTouchBar_UIKitAdditions.rs"]
mod __NSTouchBar_UIKitAdditions;
#[cfg(feature = "NSUserActivity_NSItemProvider")]
#[path = "NSUserActivity_NSItemProvider.rs"]
mod __NSUserActivity_NSItemProvider;
#[cfg(feature = "PrintKitUI")]
#[path = "PrintKitUI.rs"]
mod __PrintKitUI;
#[cfg(feature = "ShareSheet")]
#[path = "ShareSheet.rs"]
mod __ShareSheet;
#[cfg(feature = "UIAccelerometer")]
#[path = "UIAccelerometer.rs"]
mod __UIAccelerometer;
#[cfg(feature = "UIAccessibility")]
#[path = "UIAccessibility.rs"]
mod __UIAccessibility;
#[cfg(feature = "UIAccessibilityAdditions")]
#[path = "UIAccessibilityAdditions.rs"]
mod __UIAccessibilityAdditions;
#[cfg(feature = "UIAccessibilityConstants")]
#[path = "UIAccessibilityConstants.rs"]
mod __UIAccessibilityConstants;
#[cfg(feature = "UIAccessibilityContainer")]
#[path = "UIAccessibilityContainer.rs"]
mod __UIAccessibilityContainer;
#[cfg(feature = "UIAccessibilityContentSizeCategoryImageAdjusting")]
#[path = "UIAccessibilityContentSizeCategoryImageAdjusting.rs"]
mod __UIAccessibilityContentSizeCategoryImageAdjusting;
#[cfg(feature = "UIAccessibilityCustomAction")]
#[path = "UIAccessibilityCustomAction.rs"]
mod __UIAccessibilityCustomAction;
#[cfg(feature = "UIAccessibilityCustomRotor")]
#[path = "UIAccessibilityCustomRotor.rs"]
mod __UIAccessibilityCustomRotor;
#[cfg(feature = "UIAccessibilityElement")]
#[path = "UIAccessibilityElement.rs"]
mod __UIAccessibilityElement;
#[cfg(feature = "UIAccessibilityIdentification")]
#[path = "UIAccessibilityIdentification.rs"]
mod __UIAccessibilityIdentification;
#[cfg(feature = "UIAccessibilityLocationDescriptor")]
#[path = "UIAccessibilityLocationDescriptor.rs"]
mod __UIAccessibilityLocationDescriptor;
#[cfg(feature = "UIAccessibilityZoom")]
#[path = "UIAccessibilityZoom.rs"]
mod __UIAccessibilityZoom;
#[cfg(feature = "UIAction")]
#[path = "UIAction.rs"]
mod __UIAction;
#[cfg(feature = "UIActionSheet")]
#[path = "UIActionSheet.rs"]
mod __UIActionSheet;
#[cfg(feature = "UIActivity")]
#[path = "UIActivity.rs"]
mod __UIActivity;
#[cfg(feature = "UIActivityIndicatorView")]
#[path = "UIActivityIndicatorView.rs"]
mod __UIActivityIndicatorView;
#[cfg(feature = "UIActivityItemProvider")]
#[path = "UIActivityItemProvider.rs"]
mod __UIActivityItemProvider;
#[cfg(feature = "UIActivityItemsConfiguration")]
#[path = "UIActivityItemsConfiguration.rs"]
mod __UIActivityItemsConfiguration;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
#[path = "UIActivityItemsConfigurationReading.rs"]
mod __UIActivityItemsConfigurationReading;
#[cfg(feature = "UIActivityViewController")]
#[path = "UIActivityViewController.rs"]
mod __UIActivityViewController;
#[cfg(feature = "UIAlert")]
#[path = "UIAlert.rs"]
mod __UIAlert;
#[cfg(feature = "UIAlertController")]
#[path = "UIAlertController.rs"]
mod __UIAlertController;
#[cfg(feature = "UIAlertView")]
#[path = "UIAlertView.rs"]
mod __UIAlertView;
#[cfg(feature = "UIAppearance")]
#[path = "UIAppearance.rs"]
mod __UIAppearance;
#[cfg(feature = "UIApplication")]
#[path = "UIApplication.rs"]
mod __UIApplication;
#[cfg(feature = "UIApplicationShortcutItem")]
#[path = "UIApplicationShortcutItem.rs"]
mod __UIApplicationShortcutItem;
#[cfg(feature = "UIAttachmentBehavior")]
#[path = "UIAttachmentBehavior.rs"]
mod __UIAttachmentBehavior;
#[cfg(feature = "UIBackgroundConfiguration")]
#[path = "UIBackgroundConfiguration.rs"]
mod __UIBackgroundConfiguration;
#[cfg(feature = "UIBandSelectionInteraction")]
#[path = "UIBandSelectionInteraction.rs"]
mod __UIBandSelectionInteraction;
#[cfg(feature = "UIBarAppearance")]
#[path = "UIBarAppearance.rs"]
mod __UIBarAppearance;
#[cfg(feature = "UIBarButtonItem")]
#[path = "UIBarButtonItem.rs"]
mod __UIBarButtonItem;
#[cfg(feature = "UIBarButtonItemAppearance")]
#[path = "UIBarButtonItemAppearance.rs"]
mod __UIBarButtonItemAppearance;
#[cfg(feature = "UIBarButtonItemGroup")]
#[path = "UIBarButtonItemGroup.rs"]
mod __UIBarButtonItemGroup;
#[cfg(feature = "UIBarCommon")]
#[path = "UIBarCommon.rs"]
mod __UIBarCommon;
#[cfg(feature = "UIBarItem")]
#[path = "UIBarItem.rs"]
mod __UIBarItem;
#[cfg(feature = "UIBehavioralStyle")]
#[path = "UIBehavioralStyle.rs"]
mod __UIBehavioralStyle;
#[cfg(feature = "UIBezierPath")]
#[path = "UIBezierPath.rs"]
mod __UIBezierPath;
#[cfg(feature = "UIBlurEffect")]
#[path = "UIBlurEffect.rs"]
mod __UIBlurEffect;
#[cfg(feature = "UIButton")]
#[path = "UIButton.rs"]
mod __UIButton;
#[cfg(feature = "UIButtonConfiguration")]
#[path = "UIButtonConfiguration.rs"]
mod __UIButtonConfiguration;
#[cfg(feature = "UICalendarSelection")]
#[path = "UICalendarSelection.rs"]
mod __UICalendarSelection;
#[cfg(feature = "UICalendarSelectionMultiDate")]
#[path = "UICalendarSelectionMultiDate.rs"]
mod __UICalendarSelectionMultiDate;
#[cfg(feature = "UICalendarSelectionSingleDate")]
#[path = "UICalendarSelectionSingleDate.rs"]
mod __UICalendarSelectionSingleDate;
#[cfg(feature = "UICalendarView")]
#[path = "UICalendarView.rs"]
mod __UICalendarView;
#[cfg(feature = "UICalendarViewDecoration")]
#[path = "UICalendarViewDecoration.rs"]
mod __UICalendarViewDecoration;
#[cfg(feature = "UICanvasFeedbackGenerator")]
#[path = "UICanvasFeedbackGenerator.rs"]
mod __UICanvasFeedbackGenerator;
#[cfg(feature = "UICellAccessory")]
#[path = "UICellAccessory.rs"]
mod __UICellAccessory;
#[cfg(feature = "UICellConfigurationState")]
#[path = "UICellConfigurationState.rs"]
mod __UICellConfigurationState;
#[cfg(feature = "UICloudSharingController")]
#[path = "UICloudSharingController.rs"]
mod __UICloudSharingController;
#[cfg(feature = "UICollectionLayoutList")]
#[path = "UICollectionLayoutList.rs"]
mod __UICollectionLayoutList;
#[cfg(feature = "UICollectionView")]
#[path = "UICollectionView.rs"]
mod __UICollectionView;
#[cfg(feature = "UICollectionViewCell")]
#[path = "UICollectionViewCell.rs"]
mod __UICollectionViewCell;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
#[path = "UICollectionViewCompositionalLayout.rs"]
mod __UICollectionViewCompositionalLayout;
#[cfg(feature = "UICollectionViewController")]
#[path = "UICollectionViewController.rs"]
mod __UICollectionViewController;
#[cfg(feature = "UICollectionViewFlowLayout")]
#[path = "UICollectionViewFlowLayout.rs"]
mod __UICollectionViewFlowLayout;
#[cfg(feature = "UICollectionViewItemRegistration")]
#[path = "UICollectionViewItemRegistration.rs"]
mod __UICollectionViewItemRegistration;
#[cfg(feature = "UICollectionViewLayout")]
#[path = "UICollectionViewLayout.rs"]
mod __UICollectionViewLayout;
#[cfg(feature = "UICollectionViewListCell")]
#[path = "UICollectionViewListCell.rs"]
mod __UICollectionViewListCell;
#[cfg(feature = "UICollectionViewTransitionLayout")]
#[path = "UICollectionViewTransitionLayout.rs"]
mod __UICollectionViewTransitionLayout;
#[cfg(feature = "UICollectionViewUpdateItem")]
#[path = "UICollectionViewUpdateItem.rs"]
mod __UICollectionViewUpdateItem;
#[cfg(feature = "UICollisionBehavior")]
#[path = "UICollisionBehavior.rs"]
mod __UICollisionBehavior;
#[cfg(feature = "UIColor")]
#[path = "UIColor.rs"]
mod __UIColor;
#[cfg(feature = "UIColorPickerViewController")]
#[path = "UIColorPickerViewController.rs"]
mod __UIColorPickerViewController;
#[cfg(feature = "UIColorWell")]
#[path = "UIColorWell.rs"]
mod __UIColorWell;
#[cfg(feature = "UICommand")]
#[path = "UICommand.rs"]
mod __UICommand;
#[cfg(feature = "UIConfigurationColorTransformer")]
#[path = "UIConfigurationColorTransformer.rs"]
mod __UIConfigurationColorTransformer;
#[cfg(feature = "UIConfigurationState")]
#[path = "UIConfigurationState.rs"]
mod __UIConfigurationState;
#[cfg(feature = "UIContentConfiguration")]
#[path = "UIContentConfiguration.rs"]
mod __UIContentConfiguration;
#[cfg(feature = "UIContentSizeCategory")]
#[path = "UIContentSizeCategory.rs"]
mod __UIContentSizeCategory;
#[cfg(feature = "UIContentSizeCategoryAdjusting")]
#[path = "UIContentSizeCategoryAdjusting.rs"]
mod __UIContentSizeCategoryAdjusting;
#[cfg(feature = "UIContentUnavailableButtonProperties")]
#[path = "UIContentUnavailableButtonProperties.rs"]
mod __UIContentUnavailableButtonProperties;
#[cfg(feature = "UIContentUnavailableConfiguration")]
#[path = "UIContentUnavailableConfiguration.rs"]
mod __UIContentUnavailableConfiguration;
#[cfg(feature = "UIContentUnavailableConfigurationState")]
#[path = "UIContentUnavailableConfigurationState.rs"]
mod __UIContentUnavailableConfigurationState;
#[cfg(feature = "UIContentUnavailableImageProperties")]
#[path = "UIContentUnavailableImageProperties.rs"]
mod __UIContentUnavailableImageProperties;
#[cfg(feature = "UIContentUnavailableTextProperties")]
#[path = "UIContentUnavailableTextProperties.rs"]
mod __UIContentUnavailableTextProperties;
#[cfg(feature = "UIContentUnavailableView")]
#[path = "UIContentUnavailableView.rs"]
mod __UIContentUnavailableView;
#[cfg(feature = "UIContextMenuConfiguration")]
#[path = "UIContextMenuConfiguration.rs"]
mod __UIContextMenuConfiguration;
#[cfg(feature = "UIContextMenuInteraction")]
#[path = "UIContextMenuInteraction.rs"]
mod __UIContextMenuInteraction;
#[cfg(feature = "UIContextualAction")]
#[path = "UIContextualAction.rs"]
mod __UIContextualAction;
#[cfg(feature = "UIControl")]
#[path = "UIControl.rs"]
mod __UIControl;
#[cfg(feature = "UIDataDetectors")]
#[path = "UIDataDetectors.rs"]
mod __UIDataDetectors;
#[cfg(feature = "UIDataSourceTranslating")]
#[path = "UIDataSourceTranslating.rs"]
mod __UIDataSourceTranslating;
#[cfg(feature = "UIDatePicker")]
#[path = "UIDatePicker.rs"]
mod __UIDatePicker;
#[cfg(feature = "UIDeferredMenuElement")]
#[path = "UIDeferredMenuElement.rs"]
mod __UIDeferredMenuElement;
#[cfg(feature = "UIDevice")]
#[path = "UIDevice.rs"]
mod __UIDevice;
#[cfg(feature = "UIDiffableDataSource")]
#[path = "UIDiffableDataSource.rs"]
mod __UIDiffableDataSource;
#[cfg(feature = "UIDocument")]
#[path = "UIDocument.rs"]
mod __UIDocument;
#[cfg(feature = "UIDocumentBrowserAction")]
#[path = "UIDocumentBrowserAction.rs"]
mod __UIDocumentBrowserAction;
#[cfg(feature = "UIDocumentBrowserViewController")]
#[path = "UIDocumentBrowserViewController.rs"]
mod __UIDocumentBrowserViewController;
#[cfg(feature = "UIDocumentInteractionController")]
#[path = "UIDocumentInteractionController.rs"]
mod __UIDocumentInteractionController;
#[cfg(feature = "UIDocumentMenuViewController")]
#[path = "UIDocumentMenuViewController.rs"]
mod __UIDocumentMenuViewController;
#[cfg(feature = "UIDocumentPickerExtensionViewController")]
#[path = "UIDocumentPickerExtensionViewController.rs"]
mod __UIDocumentPickerExtensionViewController;
#[cfg(feature = "UIDocumentPickerViewController")]
#[path = "UIDocumentPickerViewController.rs"]
mod __UIDocumentPickerViewController;
#[cfg(feature = "UIDocumentProperties")]
#[path = "UIDocumentProperties.rs"]
mod __UIDocumentProperties;
#[cfg(feature = "UIDocumentViewController")]
#[path = "UIDocumentViewController.rs"]
mod __UIDocumentViewController;
#[cfg(feature = "UIDragInteraction")]
#[path = "UIDragInteraction.rs"]
mod __UIDragInteraction;
#[cfg(feature = "UIDragItem")]
#[path = "UIDragItem.rs"]
mod __UIDragItem;
#[cfg(feature = "UIDragPreview")]
#[path = "UIDragPreview.rs"]
mod __UIDragPreview;
#[cfg(feature = "UIDragPreviewParameters")]
#[path = "UIDragPreviewParameters.rs"]
mod __UIDragPreviewParameters;
#[cfg(feature = "UIDragSession")]
#[path = "UIDragSession.rs"]
mod __UIDragSession;
#[cfg(feature = "UIDropInteraction")]
#[path = "UIDropInteraction.rs"]
mod __UIDropInteraction;
#[cfg(feature = "UIDynamicAnimator")]
#[path = "UIDynamicAnimator.rs"]
mod __UIDynamicAnimator;
#[cfg(feature = "UIDynamicBehavior")]
#[path = "UIDynamicBehavior.rs"]
mod __UIDynamicBehavior;
#[cfg(feature = "UIDynamicItemBehavior")]
#[path = "UIDynamicItemBehavior.rs"]
mod __UIDynamicItemBehavior;
#[cfg(feature = "UIEditMenuInteraction")]
#[path = "UIEditMenuInteraction.rs"]
mod __UIEditMenuInteraction;
#[cfg(feature = "UIEvent")]
#[path = "UIEvent.rs"]
mod __UIEvent;
#[cfg(feature = "UIEventAttribution")]
#[path = "UIEventAttribution.rs"]
mod __UIEventAttribution;
#[cfg(feature = "UIEventAttributionView")]
#[path = "UIEventAttributionView.rs"]
mod __UIEventAttributionView;
#[cfg(feature = "UIFeedbackGenerator")]
#[path = "UIFeedbackGenerator.rs"]
mod __UIFeedbackGenerator;
#[cfg(feature = "UIFieldBehavior")]
#[path = "UIFieldBehavior.rs"]
mod __UIFieldBehavior;
#[cfg(feature = "UIFindInteraction")]
#[path = "UIFindInteraction.rs"]
mod __UIFindInteraction;
#[cfg(feature = "UIFindSession")]
#[path = "UIFindSession.rs"]
mod __UIFindSession;
#[cfg(feature = "UIFocus")]
#[path = "UIFocus.rs"]
mod __UIFocus;
#[cfg(feature = "UIFocusAnimationCoordinator")]
#[path = "UIFocusAnimationCoordinator.rs"]
mod __UIFocusAnimationCoordinator;
#[cfg(feature = "UIFocusDebugger")]
#[path = "UIFocusDebugger.rs"]
mod __UIFocusDebugger;
#[cfg(feature = "UIFocusEffect")]
#[path = "UIFocusEffect.rs"]
mod __UIFocusEffect;
#[cfg(feature = "UIFocusGuide")]
#[path = "UIFocusGuide.rs"]
mod __UIFocusGuide;
#[cfg(feature = "UIFocusMovementHint")]
#[path = "UIFocusMovementHint.rs"]
mod __UIFocusMovementHint;
#[cfg(feature = "UIFocusSystem")]
#[path = "UIFocusSystem.rs"]
mod __UIFocusSystem;
#[cfg(feature = "UIFont")]
#[path = "UIFont.rs"]
mod __UIFont;
#[cfg(feature = "UIFontDescriptor")]
#[path = "UIFontDescriptor.rs"]
mod __UIFontDescriptor;
#[cfg(feature = "UIFontMetrics")]
#[path = "UIFontMetrics.rs"]
mod __UIFontMetrics;
#[cfg(feature = "UIFontPickerViewController")]
#[path = "UIFontPickerViewController.rs"]
mod __UIFontPickerViewController;
#[cfg(feature = "UIFontPickerViewControllerConfiguration")]
#[path = "UIFontPickerViewControllerConfiguration.rs"]
mod __UIFontPickerViewControllerConfiguration;
#[cfg(feature = "UIFoundation")]
#[path = "UIFoundation.rs"]
mod __UIFoundation;
#[cfg(feature = "UIGeometry")]
#[path = "UIGeometry.rs"]
mod __UIGeometry;
#[cfg(feature = "UIGestureRecognizer")]
#[path = "UIGestureRecognizer.rs"]
mod __UIGestureRecognizer;
#[cfg(feature = "UIGestureRecognizerSubclass")]
#[path = "UIGestureRecognizerSubclass.rs"]
mod __UIGestureRecognizerSubclass;
#[cfg(feature = "UIGraphics")]
#[path = "UIGraphics.rs"]
mod __UIGraphics;
#[cfg(feature = "UIGraphicsImageRenderer")]
#[path = "UIGraphicsImageRenderer.rs"]
mod __UIGraphicsImageRenderer;
#[cfg(feature = "UIGraphicsPDFRenderer")]
#[path = "UIGraphicsPDFRenderer.rs"]
mod __UIGraphicsPDFRenderer;
#[cfg(feature = "UIGraphicsRenderer")]
#[path = "UIGraphicsRenderer.rs"]
mod __UIGraphicsRenderer;
#[cfg(feature = "UIGraphicsRendererSubclass")]
#[path = "UIGraphicsRendererSubclass.rs"]
mod __UIGraphicsRendererSubclass;
#[cfg(feature = "UIGravityBehavior")]
#[path = "UIGravityBehavior.rs"]
mod __UIGravityBehavior;
#[cfg(feature = "UIGuidedAccess")]
#[path = "UIGuidedAccess.rs"]
mod __UIGuidedAccess;
#[cfg(feature = "UIGuidedAccessRestrictions")]
#[path = "UIGuidedAccessRestrictions.rs"]
mod __UIGuidedAccessRestrictions;
#[cfg(feature = "UIHoverEffect")]
#[path = "UIHoverEffect.rs"]
mod __UIHoverEffect;
#[cfg(feature = "UIHoverEffectLayer")]
#[path = "UIHoverEffectLayer.rs"]
mod __UIHoverEffectLayer;
#[cfg(feature = "UIHoverGestureRecognizer")]
#[path = "UIHoverGestureRecognizer.rs"]
mod __UIHoverGestureRecognizer;
#[cfg(feature = "UIHoverStyle")]
#[path = "UIHoverStyle.rs"]
mod __UIHoverStyle;
#[cfg(feature = "UIImage")]
#[path = "UIImage.rs"]
mod __UIImage;
#[cfg(feature = "UIImageAsset")]
#[path = "UIImageAsset.rs"]
mod __UIImageAsset;
#[cfg(feature = "UIImageConfiguration")]
#[path = "UIImageConfiguration.rs"]
mod __UIImageConfiguration;
#[cfg(feature = "UIImagePickerController")]
#[path = "UIImagePickerController.rs"]
mod __UIImagePickerController;
#[cfg(feature = "UIImageReader")]
#[path = "UIImageReader.rs"]
mod __UIImageReader;
#[cfg(feature = "UIImageSymbolConfiguration")]
#[path = "UIImageSymbolConfiguration.rs"]
mod __UIImageSymbolConfiguration;
#[cfg(feature = "UIImageView")]
#[path = "UIImageView.rs"]
mod __UIImageView;
#[cfg(feature = "UIImpactFeedbackGenerator")]
#[path = "UIImpactFeedbackGenerator.rs"]
mod __UIImpactFeedbackGenerator;
#[cfg(feature = "UIIndirectScribbleInteraction")]
#[path = "UIIndirectScribbleInteraction.rs"]
mod __UIIndirectScribbleInteraction;
#[cfg(feature = "UIInputView")]
#[path = "UIInputView.rs"]
mod __UIInputView;
#[cfg(feature = "UIInputViewController")]
#[path = "UIInputViewController.rs"]
mod __UIInputViewController;
#[cfg(feature = "UIInteraction")]
#[path = "UIInteraction.rs"]
mod __UIInteraction;
#[cfg(feature = "UIInterface")]
#[path = "UIInterface.rs"]
mod __UIInterface;
#[cfg(feature = "UIKey")]
#[path = "UIKey.rs"]
mod __UIKey;
#[cfg(feature = "UIKeyCommand")]
#[path = "UIKeyCommand.rs"]
mod __UIKeyCommand;
#[cfg(feature = "UIKeyConstants")]
#[path = "UIKeyConstants.rs"]
mod __UIKeyConstants;
#[cfg(feature = "UIKeyboardLayoutGuide")]
#[path = "UIKeyboardLayoutGuide.rs"]
mod __UIKeyboardLayoutGuide;
#[cfg(feature = "UIKitCore")]
#[path = "UIKitCore.rs"]
mod __UIKitCore;
#[cfg(feature = "UIKitDefines")]
#[path = "UIKitDefines.rs"]
mod __UIKitDefines;
#[cfg(feature = "UILabel")]
#[path = "UILabel.rs"]
mod __UILabel;
#[cfg(feature = "UILargeContentViewer")]
#[path = "UILargeContentViewer.rs"]
mod __UILargeContentViewer;
#[cfg(feature = "UILayoutGuide")]
#[path = "UILayoutGuide.rs"]
mod __UILayoutGuide;
#[cfg(feature = "UILetterformAwareAdjusting")]
#[path = "UILetterformAwareAdjusting.rs"]
mod __UILetterformAwareAdjusting;
#[cfg(feature = "UILexicon")]
#[path = "UILexicon.rs"]
mod __UILexicon;
#[cfg(feature = "UIListContentConfiguration")]
#[path = "UIListContentConfiguration.rs"]
mod __UIListContentConfiguration;
#[cfg(feature = "UIListContentImageProperties")]
#[path = "UIListContentImageProperties.rs"]
mod __UIListContentImageProperties;
#[cfg(feature = "UIListContentTextProperties")]
#[path = "UIListContentTextProperties.rs"]
mod __UIListContentTextProperties;
#[cfg(feature = "UIListSeparatorConfiguration")]
#[path = "UIListSeparatorConfiguration.rs"]
mod __UIListSeparatorConfiguration;
#[cfg(feature = "UILocalNotification")]
#[path = "UILocalNotification.rs"]
mod __UILocalNotification;
#[cfg(feature = "UILocalizedIndexedCollation")]
#[path = "UILocalizedIndexedCollation.rs"]
mod __UILocalizedIndexedCollation;
#[cfg(feature = "UILongPressGestureRecognizer")]
#[path = "UILongPressGestureRecognizer.rs"]
mod __UILongPressGestureRecognizer;
#[cfg(feature = "UIManagedDocument")]
#[path = "UIManagedDocument.rs"]
mod __UIManagedDocument;
#[cfg(feature = "UIMenu")]
#[path = "UIMenu.rs"]
mod __UIMenu;
#[cfg(feature = "UIMenuBuilder")]
#[path = "UIMenuBuilder.rs"]
mod __UIMenuBuilder;
#[cfg(feature = "UIMenuController")]
#[path = "UIMenuController.rs"]
mod __UIMenuController;
#[cfg(feature = "UIMenuDisplayPreferences")]
#[path = "UIMenuDisplayPreferences.rs"]
mod __UIMenuDisplayPreferences;
#[cfg(feature = "UIMenuElement")]
#[path = "UIMenuElement.rs"]
mod __UIMenuElement;
#[cfg(feature = "UIMenuLeaf")]
#[path = "UIMenuLeaf.rs"]
mod __UIMenuLeaf;
#[cfg(feature = "UIMenuSystem")]
#[path = "UIMenuSystem.rs"]
mod __UIMenuSystem;
#[cfg(feature = "UIMotionEffect")]
#[path = "UIMotionEffect.rs"]
mod __UIMotionEffect;
#[cfg(feature = "UINavigationBar")]
#[path = "UINavigationBar.rs"]
mod __UINavigationBar;
#[cfg(feature = "UINavigationBarAppearance")]
#[path = "UINavigationBarAppearance.rs"]
mod __UINavigationBarAppearance;
#[cfg(feature = "UINavigationController")]
#[path = "UINavigationController.rs"]
mod __UINavigationController;
#[cfg(feature = "UINavigationItem")]
#[path = "UINavigationItem.rs"]
mod __UINavigationItem;
#[cfg(feature = "UINib")]
#[path = "UINib.rs"]
mod __UINib;
#[cfg(feature = "UINibDeclarations")]
#[path = "UINibDeclarations.rs"]
mod __UINibDeclarations;
#[cfg(feature = "UINibLoading")]
#[path = "UINibLoading.rs"]
mod __UINibLoading;
#[cfg(feature = "UINotificationFeedbackGenerator")]
#[path = "UINotificationFeedbackGenerator.rs"]
mod __UINotificationFeedbackGenerator;
#[cfg(feature = "UIOpenURLContext")]
#[path = "UIOpenURLContext.rs"]
mod __UIOpenURLContext;
#[cfg(feature = "UIOrientation")]
#[path = "UIOrientation.rs"]
mod __UIOrientation;
#[cfg(feature = "UIPageControl")]
#[path = "UIPageControl.rs"]
mod __UIPageControl;
#[cfg(feature = "UIPageControlProgress")]
#[path = "UIPageControlProgress.rs"]
mod __UIPageControlProgress;
#[cfg(feature = "UIPageViewController")]
#[path = "UIPageViewController.rs"]
mod __UIPageViewController;
#[cfg(feature = "UIPanGestureRecognizer")]
#[path = "UIPanGestureRecognizer.rs"]
mod __UIPanGestureRecognizer;
#[cfg(feature = "UIPasteConfiguration")]
#[path = "UIPasteConfiguration.rs"]
mod __UIPasteConfiguration;
#[cfg(feature = "UIPasteConfigurationSupporting")]
#[path = "UIPasteConfigurationSupporting.rs"]
mod __UIPasteConfigurationSupporting;
#[cfg(feature = "UIPasteControl")]
#[path = "UIPasteControl.rs"]
mod __UIPasteControl;
#[cfg(feature = "UIPasteboard")]
#[path = "UIPasteboard.rs"]
mod __UIPasteboard;
#[cfg(feature = "UIPencilInteraction")]
#[path = "UIPencilInteraction.rs"]
mod __UIPencilInteraction;
#[cfg(feature = "UIPickerView")]
#[path = "UIPickerView.rs"]
mod __UIPickerView;
#[cfg(feature = "UIPinchGestureRecognizer")]
#[path = "UIPinchGestureRecognizer.rs"]
mod __UIPinchGestureRecognizer;
#[cfg(feature = "UIPointerAccessory")]
#[path = "UIPointerAccessory.rs"]
mod __UIPointerAccessory;
#[cfg(feature = "UIPointerInteraction")]
#[path = "UIPointerInteraction.rs"]
mod __UIPointerInteraction;
#[cfg(feature = "UIPointerLockState")]
#[path = "UIPointerLockState.rs"]
mod __UIPointerLockState;
#[cfg(feature = "UIPointerRegion")]
#[path = "UIPointerRegion.rs"]
mod __UIPointerRegion;
#[cfg(feature = "UIPointerStyle")]
#[path = "UIPointerStyle.rs"]
mod __UIPointerStyle;
#[cfg(feature = "UIPopoverBackgroundView")]
#[path = "UIPopoverBackgroundView.rs"]
mod __UIPopoverBackgroundView;
#[cfg(feature = "UIPopoverController")]
#[path = "UIPopoverController.rs"]
mod __UIPopoverController;
#[cfg(feature = "UIPopoverPresentationController")]
#[path = "UIPopoverPresentationController.rs"]
mod __UIPopoverPresentationController;
#[cfg(feature = "UIPopoverPresentationControllerSourceItem")]
#[path = "UIPopoverPresentationControllerSourceItem.rs"]
mod __UIPopoverPresentationControllerSourceItem;
#[cfg(feature = "UIPopoverSupport")]
#[path = "UIPopoverSupport.rs"]
mod __UIPopoverSupport;
#[cfg(feature = "UIPresentationController")]
#[path = "UIPresentationController.rs"]
mod __UIPresentationController;
#[cfg(feature = "UIPress")]
#[path = "UIPress.rs"]
mod __UIPress;
#[cfg(feature = "UIPressesEvent")]
#[path = "UIPressesEvent.rs"]
mod __UIPressesEvent;
#[cfg(feature = "UIPreviewInteraction")]
#[path = "UIPreviewInteraction.rs"]
mod __UIPreviewInteraction;
#[cfg(feature = "UIPreviewParameters")]
#[path = "UIPreviewParameters.rs"]
mod __UIPreviewParameters;
#[cfg(feature = "UIPrintError")]
#[path = "UIPrintError.rs"]
mod __UIPrintError;
#[cfg(feature = "UIPrintFormatter")]
#[path = "UIPrintFormatter.rs"]
mod __UIPrintFormatter;
#[cfg(feature = "UIPrintInfo")]
#[path = "UIPrintInfo.rs"]
mod __UIPrintInfo;
#[cfg(feature = "UIPrintInteractionController")]
#[path = "UIPrintInteractionController.rs"]
mod __UIPrintInteractionController;
#[cfg(feature = "UIPrintPageRenderer")]
#[path = "UIPrintPageRenderer.rs"]
mod __UIPrintPageRenderer;
#[cfg(feature = "UIPrintPaper")]
#[path = "UIPrintPaper.rs"]
mod __UIPrintPaper;
#[cfg(feature = "UIPrintServiceExtension")]
#[path = "UIPrintServiceExtension.rs"]
mod __UIPrintServiceExtension;
#[cfg(feature = "UIPrinter")]
#[path = "UIPrinter.rs"]
mod __UIPrinter;
#[cfg(feature = "UIPrinterPickerController")]
#[path = "UIPrinterPickerController.rs"]
mod __UIPrinterPickerController;
#[cfg(feature = "UIProgressView")]
#[path = "UIProgressView.rs"]
mod __UIProgressView;
#[cfg(feature = "UIPushBehavior")]
#[path = "UIPushBehavior.rs"]
mod __UIPushBehavior;
#[cfg(feature = "UIReferenceLibraryViewController")]
#[path = "UIReferenceLibraryViewController.rs"]
mod __UIReferenceLibraryViewController;
#[cfg(feature = "UIRefreshControl")]
#[path = "UIRefreshControl.rs"]
mod __UIRefreshControl;
#[cfg(feature = "UIRegion")]
#[path = "UIRegion.rs"]
mod __UIRegion;
#[cfg(feature = "UIResponder")]
#[path = "UIResponder.rs"]
mod __UIResponder;
#[cfg(feature = "UIResponder_UIActivityItemsConfiguration")]
#[path = "UIResponder_UIActivityItemsConfiguration.rs"]
mod __UIResponder_UIActivityItemsConfiguration;
#[cfg(feature = "UIRotationGestureRecognizer")]
#[path = "UIRotationGestureRecognizer.rs"]
mod __UIRotationGestureRecognizer;
#[cfg(feature = "UIScene")]
#[path = "UIScene.rs"]
mod __UIScene;
#[cfg(feature = "UISceneActivationConditions")]
#[path = "UISceneActivationConditions.rs"]
mod __UISceneActivationConditions;
#[cfg(feature = "UISceneDefinitions")]
#[path = "UISceneDefinitions.rs"]
mod __UISceneDefinitions;
#[cfg(feature = "UISceneEnhancedStateRestoration")]
#[path = "UISceneEnhancedStateRestoration.rs"]
mod __UISceneEnhancedStateRestoration;
#[cfg(feature = "UISceneOptions")]
#[path = "UISceneOptions.rs"]
mod __UISceneOptions;
#[cfg(feature = "UISceneSession")]
#[path = "UISceneSession.rs"]
mod __UISceneSession;
#[cfg(feature = "UISceneSessionActivationRequest")]
#[path = "UISceneSessionActivationRequest.rs"]
mod __UISceneSessionActivationRequest;
#[cfg(feature = "UISceneWindowingBehaviors")]
#[path = "UISceneWindowingBehaviors.rs"]
mod __UISceneWindowingBehaviors;
#[cfg(feature = "UIScene_AVAudioSession")]
#[path = "UIScene_AVAudioSession.rs"]
mod __UIScene_AVAudioSession;
#[cfg(feature = "UIScreen")]
#[path = "UIScreen.rs"]
mod __UIScreen;
#[cfg(feature = "UIScreenEdgePanGestureRecognizer")]
#[path = "UIScreenEdgePanGestureRecognizer.rs"]
mod __UIScreenEdgePanGestureRecognizer;
#[cfg(feature = "UIScreenMode")]
#[path = "UIScreenMode.rs"]
mod __UIScreenMode;
#[cfg(feature = "UIScreenshotService")]
#[path = "UIScreenshotService.rs"]
mod __UIScreenshotService;
#[cfg(feature = "UIScribbleInteraction")]
#[path = "UIScribbleInteraction.rs"]
mod __UIScribbleInteraction;
#[cfg(feature = "UIScrollView")]
#[path = "UIScrollView.rs"]
mod __UIScrollView;
#[cfg(feature = "UISearchBar")]
#[path = "UISearchBar.rs"]
mod __UISearchBar;
#[cfg(feature = "UISearchContainerViewController")]
#[path = "UISearchContainerViewController.rs"]
mod __UISearchContainerViewController;
#[cfg(feature = "UISearchController")]
#[path = "UISearchController.rs"]
mod __UISearchController;
#[cfg(feature = "UISearchDisplayController")]
#[path = "UISearchDisplayController.rs"]
mod __UISearchDisplayController;
#[cfg(feature = "UISearchSuggestion")]
#[path = "UISearchSuggestion.rs"]
mod __UISearchSuggestion;
#[cfg(feature = "UISearchTextField")]
#[path = "UISearchTextField.rs"]
mod __UISearchTextField;
#[cfg(feature = "UISegmentedControl")]
#[path = "UISegmentedControl.rs"]
mod __UISegmentedControl;
#[cfg(feature = "UISelectionFeedbackGenerator")]
#[path = "UISelectionFeedbackGenerator.rs"]
mod __UISelectionFeedbackGenerator;
#[cfg(feature = "UIShape")]
#[path = "UIShape.rs"]
mod __UIShape;
#[cfg(feature = "UISheetPresentationController")]
#[path = "UISheetPresentationController.rs"]
mod __UISheetPresentationController;
#[cfg(feature = "UISlider")]
#[path = "UISlider.rs"]
mod __UISlider;
#[cfg(feature = "UISnapBehavior")]
#[path = "UISnapBehavior.rs"]
mod __UISnapBehavior;
#[cfg(feature = "UISplitViewController")]
#[path = "UISplitViewController.rs"]
mod __UISplitViewController;
#[cfg(feature = "UISpringLoadedInteraction")]
#[path = "UISpringLoadedInteraction.rs"]
mod __UISpringLoadedInteraction;
#[cfg(feature = "UISpringLoadedInteractionSupporting")]
#[path = "UISpringLoadedInteractionSupporting.rs"]
mod __UISpringLoadedInteractionSupporting;
#[cfg(feature = "UIStackView")]
#[path = "UIStackView.rs"]
mod __UIStackView;
#[cfg(feature = "UIStandardTextCursorView")]
#[path = "UIStandardTextCursorView.rs"]
mod __UIStandardTextCursorView;
#[cfg(feature = "UIStateRestoration")]
#[path = "UIStateRestoration.rs"]
mod __UIStateRestoration;
#[cfg(feature = "UIStatusBarManager")]
#[path = "UIStatusBarManager.rs"]
mod __UIStatusBarManager;
#[cfg(feature = "UIStepper")]
#[path = "UIStepper.rs"]
mod __UIStepper;
#[cfg(feature = "UIStoryboard")]
#[path = "UIStoryboard.rs"]
mod __UIStoryboard;
#[cfg(feature = "UIStoryboardPopoverSegue")]
#[path = "UIStoryboardPopoverSegue.rs"]
mod __UIStoryboardPopoverSegue;
#[cfg(feature = "UIStoryboardSegue")]
#[path = "UIStoryboardSegue.rs"]
mod __UIStoryboardSegue;
#[cfg(feature = "UIStringDrawing")]
#[path = "UIStringDrawing.rs"]
mod __UIStringDrawing;
#[cfg(feature = "UISwipeActionsConfiguration")]
#[path = "UISwipeActionsConfiguration.rs"]
mod __UISwipeActionsConfiguration;
#[cfg(feature = "UISwipeGestureRecognizer")]
#[path = "UISwipeGestureRecognizer.rs"]
mod __UISwipeGestureRecognizer;
#[cfg(feature = "UISwitch")]
#[path = "UISwitch.rs"]
mod __UISwitch;
#[cfg(feature = "UISymbolEffectCompletion")]
#[path = "UISymbolEffectCompletion.rs"]
mod __UISymbolEffectCompletion;
#[cfg(feature = "UITabBar")]
#[path = "UITabBar.rs"]
mod __UITabBar;
#[cfg(feature = "UITabBarAppearance")]
#[path = "UITabBarAppearance.rs"]
mod __UITabBarAppearance;
#[cfg(feature = "UITabBarController")]
#[path = "UITabBarController.rs"]
mod __UITabBarController;
#[cfg(feature = "UITabBarItem")]
#[path = "UITabBarItem.rs"]
mod __UITabBarItem;
#[cfg(feature = "UITableView")]
#[path = "UITableView.rs"]
mod __UITableView;
#[cfg(feature = "UITableViewCell")]
#[path = "UITableViewCell.rs"]
mod __UITableViewCell;
#[cfg(feature = "UITableViewController")]
#[path = "UITableViewController.rs"]
mod __UITableViewController;
#[cfg(feature = "UITableViewHeaderFooterView")]
#[path = "UITableViewHeaderFooterView.rs"]
mod __UITableViewHeaderFooterView;
#[cfg(feature = "UITapGestureRecognizer")]
#[path = "UITapGestureRecognizer.rs"]
mod __UITapGestureRecognizer;
#[cfg(feature = "UITargetedDragPreview")]
#[path = "UITargetedDragPreview.rs"]
mod __UITargetedDragPreview;
#[cfg(feature = "UITargetedPreview")]
#[path = "UITargetedPreview.rs"]
mod __UITargetedPreview;
#[cfg(feature = "UITextChecker")]
#[path = "UITextChecker.rs"]
mod __UITextChecker;
#[cfg(feature = "UITextCursorDropPositionAnimator")]
#[path = "UITextCursorDropPositionAnimator.rs"]
mod __UITextCursorDropPositionAnimator;
#[cfg(feature = "UITextCursorView")]
#[path = "UITextCursorView.rs"]
mod __UITextCursorView;
#[cfg(feature = "UITextDragPreviewRenderer")]
#[path = "UITextDragPreviewRenderer.rs"]
mod __UITextDragPreviewRenderer;
#[cfg(feature = "UITextDragURLPreviews")]
#[path = "UITextDragURLPreviews.rs"]
mod __UITextDragURLPreviews;
#[cfg(feature = "UITextDragging")]
#[path = "UITextDragging.rs"]
mod __UITextDragging;
#[cfg(feature = "UITextDropProposal")]
#[path = "UITextDropProposal.rs"]
mod __UITextDropProposal;
#[cfg(feature = "UITextDropping")]
#[path = "UITextDropping.rs"]
mod __UITextDropping;
#[cfg(feature = "UITextField")]
#[path = "UITextField.rs"]
mod __UITextField;
#[cfg(feature = "UITextFormattingCoordinator")]
#[path = "UITextFormattingCoordinator.rs"]
mod __UITextFormattingCoordinator;
#[cfg(feature = "UITextInput")]
#[path = "UITextInput.rs"]
mod __UITextInput;
#[cfg(feature = "UITextInputContext")]
#[path = "UITextInputContext.rs"]
mod __UITextInputContext;
#[cfg(feature = "UITextInputTraits")]
#[path = "UITextInputTraits.rs"]
mod __UITextInputTraits;
#[cfg(feature = "UITextInteraction")]
#[path = "UITextInteraction.rs"]
mod __UITextInteraction;
#[cfg(feature = "UITextItem")]
#[path = "UITextItem.rs"]
mod __UITextItem;
#[cfg(feature = "UITextItemInteraction")]
#[path = "UITextItemInteraction.rs"]
mod __UITextItemInteraction;
#[cfg(feature = "UITextLoupeSession")]
#[path = "UITextLoupeSession.rs"]
mod __UITextLoupeSession;
#[cfg(feature = "UITextPasteConfigurationSupporting")]
#[path = "UITextPasteConfigurationSupporting.rs"]
mod __UITextPasteConfigurationSupporting;
#[cfg(feature = "UITextPasteDelegate")]
#[path = "UITextPasteDelegate.rs"]
mod __UITextPasteDelegate;
#[cfg(feature = "UITextSearching")]
#[path = "UITextSearching.rs"]
mod __UITextSearching;
#[cfg(feature = "UITextSelectionDisplayInteraction")]
#[path = "UITextSelectionDisplayInteraction.rs"]
mod __UITextSelectionDisplayInteraction;
#[cfg(feature = "UITextSelectionHandleView")]
#[path = "UITextSelectionHandleView.rs"]
mod __UITextSelectionHandleView;
#[cfg(feature = "UITextSelectionHighlightView")]
#[path = "UITextSelectionHighlightView.rs"]
mod __UITextSelectionHighlightView;
#[cfg(feature = "UITextView")]
#[path = "UITextView.rs"]
mod __UITextView;
#[cfg(feature = "UITimingCurveProvider")]
#[path = "UITimingCurveProvider.rs"]
mod __UITimingCurveProvider;
#[cfg(feature = "UITimingParameters")]
#[path = "UITimingParameters.rs"]
mod __UITimingParameters;
#[cfg(feature = "UIToolTipInteraction")]
#[path = "UIToolTipInteraction.rs"]
mod __UIToolTipInteraction;
#[cfg(feature = "UIToolbar")]
#[path = "UIToolbar.rs"]
mod __UIToolbar;
#[cfg(feature = "UIToolbarAppearance")]
#[path = "UIToolbarAppearance.rs"]
mod __UIToolbarAppearance;
#[cfg(feature = "UITouch")]
#[path = "UITouch.rs"]
mod __UITouch;
#[cfg(feature = "UITrackingLayoutGuide")]
#[path = "UITrackingLayoutGuide.rs"]
mod __UITrackingLayoutGuide;
#[cfg(feature = "UITrait")]
#[path = "UITrait.rs"]
mod __UITrait;
#[cfg(feature = "UITraitCollection")]
#[path = "UITraitCollection.rs"]
mod __UITraitCollection;
#[cfg(feature = "UIUserActivity")]
#[path = "UIUserActivity.rs"]
mod __UIUserActivity;
#[cfg(feature = "UIUserNotificationSettings")]
#[path = "UIUserNotificationSettings.rs"]
mod __UIUserNotificationSettings;
#[cfg(feature = "UIVibrancyEffect")]
#[path = "UIVibrancyEffect.rs"]
mod __UIVibrancyEffect;
#[cfg(feature = "UIVideoEditorController")]
#[path = "UIVideoEditorController.rs"]
mod __UIVideoEditorController;
#[cfg(feature = "UIView")]
#[path = "UIView.rs"]
mod __UIView;
#[cfg(feature = "UIViewAnimating")]
#[path = "UIViewAnimating.rs"]
mod __UIViewAnimating;
#[cfg(feature = "UIViewConfigurationState")]
#[path = "UIViewConfigurationState.rs"]
mod __UIViewConfigurationState;
#[cfg(feature = "UIViewController")]
#[path = "UIViewController.rs"]
mod __UIViewController;
#[cfg(feature = "UIViewControllerTransitionCoordinator")]
#[path = "UIViewControllerTransitionCoordinator.rs"]
mod __UIViewControllerTransitionCoordinator;
#[cfg(feature = "UIViewControllerTransitioning")]
#[path = "UIViewControllerTransitioning.rs"]
mod __UIViewControllerTransitioning;
#[cfg(feature = "UIViewPropertyAnimator")]
#[path = "UIViewPropertyAnimator.rs"]
mod __UIViewPropertyAnimator;
#[cfg(feature = "UIVisualEffect")]
#[path = "UIVisualEffect.rs"]
mod __UIVisualEffect;
#[cfg(feature = "UIVisualEffectView")]
#[path = "UIVisualEffectView.rs"]
mod __UIVisualEffectView;
#[cfg(feature = "UIWebView")]
#[path = "UIWebView.rs"]
mod __UIWebView;
#[cfg(feature = "UIWindow")]
#[path = "UIWindow.rs"]
mod __UIWindow;
#[cfg(feature = "UIWindowScene")]
#[path = "UIWindowScene.rs"]
mod __UIWindowScene;
#[cfg(feature = "UIWindowSceneActivationAction")]
#[path = "UIWindowSceneActivationAction.rs"]
mod __UIWindowSceneActivationAction;
#[cfg(feature = "UIWindowSceneActivationConfiguration")]
#[path = "UIWindowSceneActivationConfiguration.rs"]
mod __UIWindowSceneActivationConfiguration;
#[cfg(feature = "UIWindowSceneActivationInteraction")]
#[path = "UIWindowSceneActivationInteraction.rs"]
mod __UIWindowSceneActivationInteraction;
#[cfg(feature = "UIWindowSceneActivationRequestOptions")]
#[path = "UIWindowSceneActivationRequestOptions.rs"]
mod __UIWindowSceneActivationRequestOptions;
#[cfg(feature = "UIWindowSceneDragInteraction")]
#[path = "UIWindowSceneDragInteraction.rs"]
mod __UIWindowSceneDragInteraction;
#[cfg(feature = "UIWindowSceneGeometry")]
#[path = "UIWindowSceneGeometry.rs"]
mod __UIWindowSceneGeometry;
#[cfg(feature = "UIWindowSceneGeometryPreferences")]
#[path = "UIWindowSceneGeometryPreferences.rs"]
mod __UIWindowSceneGeometryPreferences;
#[cfg(feature = "UIWindowSceneGeometryPreferencesIOS")]
#[path = "UIWindowSceneGeometryPreferencesIOS.rs"]
mod __UIWindowSceneGeometryPreferencesIOS;
#[cfg(feature = "UIWindowSceneGeometryPreferencesMac")]
#[path = "UIWindowSceneGeometryPreferencesMac.rs"]
mod __UIWindowSceneGeometryPreferencesMac;
#[cfg(feature = "UIWindowSceneGeometryPreferencesVision")]
#[path = "UIWindowSceneGeometryPreferencesVision.rs"]
mod __UIWindowSceneGeometryPreferencesVision;
#[cfg(feature = "UIWindowScenePlacement")]
#[path = "UIWindowScenePlacement.rs"]
mod __UIWindowScenePlacement;
#[cfg(feature = "UIWindowSceneProminentPlacement")]
#[path = "UIWindowSceneProminentPlacement.rs"]
mod __UIWindowSceneProminentPlacement;
#[cfg(feature = "UIWindowSceneStandardPlacement")]
#[path = "UIWindowSceneStandardPlacement.rs"]
mod __UIWindowSceneStandardPlacement;
#[cfg(feature = "UNNotificationResponse_UIKitAdditions")]
#[path = "UNNotificationResponse_UIKitAdditions.rs"]
mod __UNNotificationResponse_UIKitAdditions;

#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttachmentAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringAttributeFixing;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringDocumentAttributeKey;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringDocumentFormats;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringDocumentReadingOptionKey;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringDocumentType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSAttributedStringKitAdditions;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSBackgroundColorAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSBackgroundColorDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSBaselineOffsetAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSCharacterEncodingDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSCharacterEncodingDocumentOption;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSCocoaVersionDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDefaultAttributesDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDefaultAttributesDocumentOption;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDefaultFontExcludedDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDefaultTabIntervalDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDocumentTypeDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSDocumentTypeDocumentOption;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSExpansionAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSFontAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSForegroundColorAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSHTMLTextDocumentType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSHyphenationFactorDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSKernAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSLigatureAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSLinkAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSMutableAttributedStringDocumentFormats;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSObliquenessAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSPaperMarginDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSPaperSizeDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSParagraphStyleAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSPlainTextDocumentType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSRTFDTextDocumentType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSRTFTextDocumentType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSReadOnlyDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSShadowAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSSourceTextScalingDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSSourceTextScalingDocumentOption;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSStrikethroughColorAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSStrikethroughStyleAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSStrokeColorAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSStrokeWidthAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTargetTextScalingDocumentOption;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextEffectAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextEffectLetterpressStyle;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextEffectStyle;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextLayoutSectionKey;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextLayoutSectionOrientation;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextLayoutSectionRange;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextLayoutSectionsAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextScalingDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextScalingType;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTextWritingDirection;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSTrackingAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlineByWord;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlineColorAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlinePatternDash;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlinePatternDashDot;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlinePatternDashDotDot;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlinePatternDot;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlinePatternSolid;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlineStyle;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSUnderlineStyleAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSVerticalGlyphFormAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSViewModeDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSViewSizeDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSViewZoomDocumentAttribute;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSWritingDirectionAttributeName;
#[cfg(feature = "NSAttributedString")]
pub use self::__NSAttributedString::NSWritingDirectionFormatType;
#[cfg(feature = "NSDataAsset")]
pub use self::__NSDataAsset::NSDataAsset;
#[cfg(feature = "NSDataAsset")]
pub use self::__NSDataAsset::NSDataAssetName;
#[cfg(feature = "NSDiffableDataSourceSectionSnapshot")]
pub use self::__NSDiffableDataSourceSectionSnapshot::NSDiffableDataSourceSectionSnapshot;
#[cfg(feature = "NSIndexPath_UIKitAdditions")]
pub use self::__NSIndexPath_UIKitAdditions::NSIndexPathUIKitAdditions;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
pub use self::__NSItemProvider_UIKitAdditions::NSItemProviderUIKitAdditions;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
pub use self::__NSItemProvider_UIKitAdditions::UIItemProviderPresentationSizeProviding;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
pub use self::__NSItemProvider_UIKitAdditions::UIItemProviderReadingAugmentationDesignating;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
pub use self::__NSItemProvider_UIKitAdditions::UIItemProviderReadingAugmentationProviding;
#[cfg(feature = "NSItemProvider_UIKitAdditions")]
pub use self::__NSItemProvider_UIKitAdditions::UIPreferredPresentationStyle;
#[cfg(feature = "NSLayoutAnchor")]
pub use self::__NSLayoutAnchor::NSLayoutAnchor;
#[cfg(feature = "NSLayoutAnchor")]
pub use self::__NSLayoutAnchor::NSLayoutDimension;
#[cfg(feature = "NSLayoutAnchor")]
pub use self::__NSLayoutAnchor::NSLayoutXAxisAnchor;
#[cfg(feature = "NSLayoutAnchor")]
pub use self::__NSLayoutAnchor::NSLayoutYAxisAnchor;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::NSLayoutAttribute;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::NSLayoutConstraint;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::NSLayoutFormatOptions;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::NSLayoutRelation;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriority;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityDefaultHigh;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityDefaultLow;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityDragThatCanResizeScene;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityDragThatCannotResizeScene;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityFittingSizeLevel;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPriorityRequired;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutPrioritySceneSizeStayPut;
#[cfg(feature = "NSLayoutConstraint")]
pub use self::__NSLayoutConstraint::UILayoutSupport;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSControlCharacterAction;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSGlyphProperty;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSLayoutManager;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSLayoutManagerDelegate;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSTextLayoutOrientation;
#[cfg(feature = "NSLayoutManager")]
pub use self::__NSLayoutManager::NSTextLayoutOrientationProvider;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSLineBreakMode;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSLineBreakStrategy;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSMutableParagraphStyle;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSParagraphStyle;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSTabColumnTerminatorsAttributeName;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSTextTab;
#[cfg(feature = "NSParagraphStyle")]
pub use self::__NSParagraphStyle::NSTextTabOptionKey;
#[cfg(feature = "NSShadow")]
pub use self::__NSShadow::NSShadow;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSAttributedStringNSExtendedStringDrawing;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSAttributedStringNSStringDrawing;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSStringDrawing;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSStringDrawingContext;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSStringDrawingOptions;
#[cfg(feature = "NSStringDrawing")]
pub use self::__NSStringDrawing::NSStringNSExtendedStringDrawing;
#[cfg(feature = "NSText")]
pub use self::__NSText::NSWritingDirection;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSAttachmentCharacter;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSAttributedStringAttachmentConveniences;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSTextAttachment;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSTextAttachmentContainer;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSTextAttachmentLayout;
#[cfg(feature = "NSTextAttachment")]
pub use self::__NSTextAttachment::NSTextAttachmentViewProvider;
#[cfg(feature = "NSTextContainer")]
pub use self::__NSTextContainer::NSTextContainer;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentManager;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentManagerDelegate;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentManagerEnumerationOptions;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentStorage;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentStorageDelegate;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextContentStorageUnsupportedAttributeAddedNotification;
#[cfg(feature = "NSTextContentManager")]
pub use self::__NSTextContentManager::NSTextElementProvider;
#[cfg(feature = "NSTextElement")]
pub use self::__NSTextElement::NSTextElement;
#[cfg(feature = "NSTextElement")]
pub use self::__NSTextElement::NSTextParagraph;
#[cfg(feature = "NSTextLayoutFragment")]
pub use self::__NSTextLayoutFragment::NSTextLayoutFragment;
#[cfg(feature = "NSTextLayoutFragment")]
pub use self::__NSTextLayoutFragment::NSTextLayoutFragmentEnumerationOptions;
#[cfg(feature = "NSTextLayoutFragment")]
pub use self::__NSTextLayoutFragment::NSTextLayoutFragmentState;
#[cfg(feature = "NSTextLayoutManager")]
pub use self::__NSTextLayoutManager::NSTextLayoutManager;
#[cfg(feature = "NSTextLayoutManager")]
pub use self::__NSTextLayoutManager::NSTextLayoutManagerDelegate;
#[cfg(feature = "NSTextLayoutManager")]
pub use self::__NSTextLayoutManager::NSTextLayoutManagerSegmentOptions;
#[cfg(feature = "NSTextLayoutManager")]
pub use self::__NSTextLayoutManager::NSTextLayoutManagerSegmentType;
#[cfg(feature = "NSTextLineFragment")]
pub use self::__NSTextLineFragment::NSTextLineFragment;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextList;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerBox;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerCheck;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerCircle;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerDecimal;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerDiamond;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerDisc;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerFormat;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerHyphen;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerLowercaseAlpha;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerLowercaseHexadecimal;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerLowercaseLatin;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerLowercaseRoman;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerOctal;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerSquare;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerUppercaseAlpha;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerUppercaseHexadecimal;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerUppercaseLatin;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListMarkerUppercaseRoman;
#[cfg(feature = "NSTextList")]
pub use self::__NSTextList::NSTextListOptions;
#[cfg(all(feature = "NSTextElement", feature = "NSTextListElement"))]
pub use self::__NSTextListElement::NSTextListElement;
#[cfg(feature = "NSTextRange")]
pub use self::__NSTextRange::NSTextLocation;
#[cfg(feature = "NSTextRange")]
pub use self::__NSTextRange::NSTextRange;
#[cfg(feature = "NSTextSelection")]
pub use self::__NSTextSelection::NSTextSelection;
#[cfg(feature = "NSTextSelection")]
pub use self::__NSTextSelection::NSTextSelectionAffinity;
#[cfg(feature = "NSTextSelection")]
pub use self::__NSTextSelection::NSTextSelectionGranularity;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionDataSource;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigation;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigationDestination;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigationDirection;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigationLayoutOrientation;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigationModifier;
#[cfg(feature = "NSTextSelectionNavigation")]
pub use self::__NSTextSelectionNavigation::NSTextSelectionNavigationWritingDirection;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorage;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorageDelegate;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorageDidProcessEditingNotification;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorageEditActions;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorageObserving;
#[cfg(feature = "NSTextStorage")]
pub use self::__NSTextStorage::NSTextStorageWillProcessEditingNotification;
#[cfg(feature = "NSTextViewportLayoutController")]
pub use self::__NSTextViewportLayoutController::NSTextViewportLayoutController;
#[cfg(feature = "NSTextViewportLayoutController")]
pub use self::__NSTextViewportLayoutController::NSTextViewportLayoutControllerDelegate;
#[cfg(feature = "UIAccelerometer")]
pub use self::__UIAccelerometer::UIAcceleration;
#[cfg(feature = "UIAccelerometer")]
pub use self::__UIAccelerometer::UIAccelerationValue;
#[cfg(feature = "UIAccelerometer")]
pub use self::__UIAccelerometer::UIAccelerometer;
#[cfg(feature = "UIAccelerometer")]
pub use self::__UIAccelerometer::UIAccelerometerDelegate;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXArrayReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXAttributedStringArrayReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXAttributedStringReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXBoolReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIAccessibilityConstants",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXContainerTypeReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIAccessibilityCustomAction",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXCustomActionsReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIAccessibilityConstants",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXNavigationStyleReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXObjectReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIBezierPath",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXPathReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXPointReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXRectReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXStringArrayReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXStringReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIAccessibilityConstants",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXTextualContextReturnBlock;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIAccessibilityConstants",
    feature = "block2"
))]
pub use self::__UIAccessibility::AXTraitsReturnBlock;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::AXVoidReturnBlock;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::NSObjectUIAccessibility;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::NSObjectUIAccessibilityAction;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::NSObjectUIAccessibilityDragging;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::NSObjectUIAccessibilityFocus;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityAssistiveTouchStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityBoldTextStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityButtonShapesEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityButtonShapesEnabledStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityClosedCaptioningStatusDidChangeNotification;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIAccessibility::UIAccessibilityConvertFrameToScreenCoordinates;
#[cfg(all(
    feature = "UIAccessibility",
    feature = "UIBezierPath",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIAccessibility::UIAccessibilityConvertPathToScreenCoordinates;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityDarkerSystemColorsEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
#[cfg(all(feature = "UIAccessibility", feature = "UIAccessibilityConstants"))]
pub use self::__UIAccessibility::UIAccessibilityFocusedElement;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityGrayscaleStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityGuidedAccessStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityHearingDeviceEar;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityHearingDevicePairedEar;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityHearingDevicePairedEarDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityInvertColorsStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsAssistiveTouchRunning;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsBoldTextEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsClosedCaptioningEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsGrayscaleEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsGuidedAccessEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsInvertColorsEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsMonoAudioEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsOnOffSwitchLabelsEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsReduceMotionEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsReduceTransparencyEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsShakeToUndoEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsSpeakScreenEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsSpeakSelectionEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsSwitchControlRunning;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsVideoAutoplayEnabled;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityIsVoiceOverRunning;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityMonoAudioStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityOnOffSwitchLabelsDidChangeNotification;
#[cfg(all(feature = "UIAccessibility", feature = "UIAccessibilityConstants"))]
pub use self::__UIAccessibility::UIAccessibilityPostNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityPrefersCrossFadeTransitions;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityPrefersCrossFadeTransitionsStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityReadingContent;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityReduceMotionStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityReduceTransparencyStatusDidChangeNotification;
#[cfg(all(feature = "UIAccessibility", feature = "block2"))]
pub use self::__UIAccessibility::UIAccessibilityRequestGuidedAccessSession;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityScrollDirection;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityShakeToUndoDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityShouldDifferentiateWithoutColor;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilitySpeakScreenStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilitySpeakSelectionStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilitySwitchControlStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityVideoAutoplayStatusDidChangeNotification;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityVoiceOverStatusChanged;
#[cfg(feature = "UIAccessibility")]
pub use self::__UIAccessibility::UIAccessibilityVoiceOverStatusDidChangeNotification;
#[cfg(all(feature = "UIAccessibilityAdditions", feature = "UIPickerView"))]
pub use self::__UIAccessibilityAdditions::UIPickerViewAccessibilityDelegate;
#[cfg(all(feature = "UIAccessibilityAdditions", feature = "UIScrollView"))]
pub use self::__UIAccessibilityAdditions::UIScrollViewAccessibilityDelegate;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAnnouncementDidFinishNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAnnouncementKeyStringValue;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAnnouncementKeyWasSuccessful;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAnnouncementNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAssistiveTechnologyIdentifier;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityAssistiveTechnologyKey;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityContainerType;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityDirectTouchOptions;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityElementFocusedNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityFocusedElementKey;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityLayoutChangedNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityNavigationStyle;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityNotificationSwitchControlIdentifier;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityNotificationVoiceOverIdentifier;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityNotifications;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPageScrolledNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPauseAssistiveTechnologyNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPriority;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPriorityDefault;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPriorityHigh;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityPriorityLow;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityResumeAssistiveTechnologyNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityScreenChangedNotification;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributeAnnouncementPriority;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributeIPANotation;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributeLanguage;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributePitch;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributePunctuation;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributeQueueAnnouncement;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilitySpeechAttributeSpellOut;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextAttributeContext;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextAttributeCustom;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextAttributeHeadingLevel;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContext;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextConsole;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextFileSystem;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextMessaging;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextNarrative;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextSourceCode;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextSpreadsheet;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTextualContextWordProcessing;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitAdjustable;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitAllowsDirectInteraction;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitButton;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitCausesPageTurn;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitHeader;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitImage;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitKeyboardKey;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitLink;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitNone;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitNotEnabled;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitPlaysSound;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitSearchField;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitSelected;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitStartsMediaSession;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitStaticText;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitSummaryElement;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitSupportsZoom;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitTabBar;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitToggleButton;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraitUpdatesFrequently;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityTraits;
#[cfg(feature = "UIAccessibilityConstants")]
pub use self::__UIAccessibilityConstants::UIAccessibilityUnfocusedElementKey;
#[cfg(feature = "UIAccessibilityContainer")]
pub use self::__UIAccessibilityContainer::NSObjectUIAccessibilityContainer;
#[cfg(feature = "UIAccessibilityContainer")]
pub use self::__UIAccessibilityContainer::UIAccessibilityContainerDataTable;
#[cfg(feature = "UIAccessibilityContainer")]
pub use self::__UIAccessibilityContainer::UIAccessibilityContainerDataTableCell;
#[cfg(feature = "UIAccessibilityContentSizeCategoryImageAdjusting")]
pub use self::__UIAccessibilityContentSizeCategoryImageAdjusting::UIAccessibilityContentSizeCategoryImageAdjusting;
#[cfg(feature = "UIAccessibilityCustomAction")]
pub use self::__UIAccessibilityCustomAction::UIAccessibilityCustomAction;
#[cfg(all(feature = "UIAccessibilityCustomAction", feature = "block2"))]
pub use self::__UIAccessibilityCustomAction::UIAccessibilityCustomActionHandler;
#[cfg(all(feature = "UIAccessibilityCustomRotor", feature = "block2"))]
pub use self::__UIAccessibilityCustomRotor::AXCustomRotorsReturnBlock;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::NSObjectUIAccessibilityCustomRotor;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomRotor;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomRotorDirection;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomRotorItemResult;
#[cfg(all(feature = "UIAccessibilityCustomRotor", feature = "block2"))]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomRotorSearch;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomRotorSearchPredicate;
#[cfg(feature = "UIAccessibilityCustomRotor")]
pub use self::__UIAccessibilityCustomRotor::UIAccessibilityCustomSystemRotorType;
#[cfg(all(feature = "UIAccessibilityElement", feature = "UIResponder"))]
pub use self::__UIAccessibilityElement::UIAccessibilityElement;
#[cfg(feature = "UIAccessibilityIdentification")]
pub use self::__UIAccessibilityIdentification::UIAccessibilityIdentification;
#[cfg(feature = "UIAccessibilityLocationDescriptor")]
pub use self::__UIAccessibilityLocationDescriptor::UIAccessibilityLocationDescriptor;
#[cfg(feature = "UIAccessibilityZoom")]
pub use self::__UIAccessibilityZoom::UIAccessibilityRegisterGestureConflictWithZoom;
#[cfg(all(
    feature = "UIAccessibilityZoom",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIAccessibilityZoom::UIAccessibilityZoomFocusChanged;
#[cfg(feature = "UIAccessibilityZoom")]
pub use self::__UIAccessibilityZoom::UIAccessibilityZoomType;
#[cfg(all(feature = "UIAction", feature = "UIMenuElement"))]
pub use self::__UIAction::UIAction;
#[cfg(all(feature = "UIAction", feature = "UIMenuElement", feature = "block2"))]
pub use self::__UIAction::UIActionHandler;
#[cfg(feature = "UIAction")]
pub use self::__UIAction::UIActionIdentifier;
#[cfg(feature = "UIAction")]
pub use self::__UIAction::UIActionPaste;
#[cfg(feature = "UIAction")]
pub use self::__UIAction::UIActionPasteAndGo;
#[cfg(feature = "UIAction")]
pub use self::__UIAction::UIActionPasteAndMatchStyle;
#[cfg(feature = "UIAction")]
pub use self::__UIAction::UIActionPasteAndSearch;
#[cfg(all(feature = "UIActionSheet", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIActionSheet::UIActionSheet;
#[cfg(feature = "UIActionSheet")]
pub use self::__UIActionSheet::UIActionSheetDelegate;
#[cfg(feature = "UIActionSheet")]
pub use self::__UIActionSheet::UIActionSheetStyle;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivity;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityCategory;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityType;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeAddToHomeScreen;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeAddToReadingList;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeAirDrop;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeAssignToContact;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeCollaborationCopyLink;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeCollaborationInviteWithLink;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeCopyToPasteboard;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeMail;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeMarkupAsPDF;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeMessage;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeOpenInIBooks;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToFacebook;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToFlickr;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToTencentWeibo;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToTwitter;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToVimeo;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePostToWeibo;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypePrint;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeSaveToCameraRoll;
#[cfg(feature = "UIActivity")]
pub use self::__UIActivity::UIActivityTypeSharePlay;
#[cfg(all(
    feature = "UIActivityIndicatorView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIActivityIndicatorView::UIActivityIndicatorView;
#[cfg(feature = "UIActivityIndicatorView")]
pub use self::__UIActivityIndicatorView::UIActivityIndicatorViewStyle;
#[cfg(feature = "UIActivityItemProvider")]
pub use self::__UIActivityItemProvider::UIActivityItemProvider;
#[cfg(feature = "UIActivityItemProvider")]
pub use self::__UIActivityItemProvider::UIActivityItemSource;
#[cfg(feature = "UIActivityItemsConfiguration")]
pub use self::__UIActivityItemsConfiguration::UIActivityItemsConfiguration;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationInteraction;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationInteractionCopy;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationInteractionShare;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationMetadataKey;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationMetadataKeyMessageBody;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationMetadataKeyTitle;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationPreviewIntent;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationPreviewIntentFullSize;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationPreviewIntentThumbnail;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationProviding;
#[cfg(feature = "UIActivityItemsConfigurationReading")]
pub use self::__UIActivityItemsConfigurationReading::UIActivityItemsConfigurationReading;
#[cfg(all(
    feature = "UIActivityViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIActivityViewController::UIActivityViewController;
#[cfg(all(
    feature = "UIActivity",
    feature = "UIActivityViewController",
    feature = "block2"
))]
pub use self::__UIActivityViewController::UIActivityViewControllerCompletionHandler;
#[cfg(all(
    feature = "UIActivity",
    feature = "UIActivityViewController",
    feature = "block2"
))]
pub use self::__UIActivityViewController::UIActivityViewControllerCompletionWithItemsHandler;
#[cfg(feature = "UIAlertController")]
pub use self::__UIAlertController::UIAlertAction;
#[cfg(feature = "UIAlertController")]
pub use self::__UIAlertController::UIAlertActionStyle;
#[cfg(all(
    feature = "UIAlertController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIAlertController::UIAlertController;
#[cfg(feature = "UIAlertController")]
pub use self::__UIAlertController::UIAlertControllerSeverity;
#[cfg(feature = "UIAlertController")]
pub use self::__UIAlertController::UIAlertControllerStyle;
#[cfg(all(feature = "UIAlertView", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIAlertView::UIAlertView;
#[cfg(feature = "UIAlertView")]
pub use self::__UIAlertView::UIAlertViewDelegate;
#[cfg(feature = "UIAlertView")]
pub use self::__UIAlertView::UIAlertViewStyle;
#[cfg(feature = "UIAppearance")]
pub use self::__UIAppearance::UIAppearance;
#[cfg(feature = "UIAppearance")]
pub use self::__UIAppearance::UIAppearanceContainer;
#[cfg(all(feature = "UIApplication", feature = "UIResponder"))]
pub use self::__UIApplication::UIApplication;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationBackgroundFetchIntervalMinimum;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationBackgroundFetchIntervalNever;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationBackgroundRefreshStatusDidChangeNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDelegate;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidBecomeActiveNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidChangeStatusBarFrameNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidChangeStatusBarOrientationNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidEnterBackgroundNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidFinishLaunchingNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationDidReceiveMemoryWarningNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationExtensionPointIdentifier;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationInvalidInterfaceOrientationException;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationKeyboardExtensionPointIdentifier;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsAnnotationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsBluetoothCentralsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsBluetoothPeripheralsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsCloudKitShareMetadataKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsEventAttributionKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsLocalNotificationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsLocationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsNewsstandDownloadsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsRemoteNotificationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsShortcutItemKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsSourceApplicationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsURLKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsUserActivityDictionaryKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationLaunchOptionsUserActivityTypeKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationMain;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenExternalURLOptionsEventAttributionKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenExternalURLOptionsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenNotificationSettingsURLString;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenSettingsURLString;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionUniversalLinksOnly;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionsAnnotationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionsEventAttributionKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionsKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionsOpenInPlaceKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationOpenURLOptionsSourceApplicationKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationProtectedDataDidBecomeAvailable;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationProtectedDataWillBecomeUnavailable;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationSignificantTimeChangeNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationState;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationStatusBarFrameUserInfoKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationStatusBarOrientationUserInfoKey;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationUserDidTakeScreenshotNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationWillChangeStatusBarFrameNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationWillChangeStatusBarOrientationNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationWillEnterForegroundNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationWillResignActiveNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIApplicationWillTerminateNotification;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIBackgroundFetchResult;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIBackgroundRefreshStatus;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIBackgroundTaskIdentifier;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIBackgroundTaskInvalid;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIMinimumKeepAliveTimeout;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIRemoteNotificationType;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIStatusBarAnimation;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UIStatusBarStyle;
#[cfg(feature = "UIApplication")]
pub use self::__UIApplication::UITrackingRunLoopMode;
#[cfg(feature = "UIApplicationShortcutItem")]
pub use self::__UIApplicationShortcutItem::UIApplicationShortcutIcon;
#[cfg(feature = "UIApplicationShortcutItem")]
pub use self::__UIApplicationShortcutItem::UIApplicationShortcutIconType;
#[cfg(feature = "UIApplicationShortcutItem")]
pub use self::__UIApplicationShortcutItem::UIApplicationShortcutItem;
#[cfg(feature = "UIApplicationShortcutItem")]
pub use self::__UIApplicationShortcutItem::UIMutableApplicationShortcutItem;
#[cfg(all(feature = "UIAttachmentBehavior", feature = "UIDynamicBehavior"))]
pub use self::__UIAttachmentBehavior::UIAttachmentBehavior;
#[cfg(feature = "UIAttachmentBehavior")]
pub use self::__UIAttachmentBehavior::UIAttachmentBehaviorType;
#[cfg(feature = "UIAttachmentBehavior")]
pub use self::__UIAttachmentBehavior::UIFloatRange;
#[cfg(feature = "UIAttachmentBehavior")]
pub use self::__UIAttachmentBehavior::UIFloatRangeInfinite;
#[cfg(feature = "UIAttachmentBehavior")]
pub use self::__UIAttachmentBehavior::UIFloatRangeIsInfinite;
#[cfg(feature = "UIAttachmentBehavior")]
pub use self::__UIAttachmentBehavior::UIFloatRangeZero;
#[cfg(feature = "UIBackgroundConfiguration")]
pub use self::__UIBackgroundConfiguration::UIBackgroundConfiguration;
#[cfg(feature = "UIBandSelectionInteraction")]
pub use self::__UIBandSelectionInteraction::UIBandSelectionInteraction;
#[cfg(feature = "UIBandSelectionInteraction")]
pub use self::__UIBandSelectionInteraction::UIBandSelectionInteractionState;
#[cfg(feature = "UIBarAppearance")]
pub use self::__UIBarAppearance::UIBarAppearance;
#[cfg(all(feature = "UIBarButtonItem", feature = "UIBarItem"))]
pub use self::__UIBarButtonItem::UIBarButtonItem;
#[cfg(feature = "UIBarButtonItem")]
pub use self::__UIBarButtonItem::UIBarButtonItemStyle;
#[cfg(feature = "UIBarButtonItem")]
pub use self::__UIBarButtonItem::UIBarButtonSystemItem;
#[cfg(feature = "UIBarButtonItemAppearance")]
pub use self::__UIBarButtonItemAppearance::UIBarButtonItemAppearance;
#[cfg(feature = "UIBarButtonItemAppearance")]
pub use self::__UIBarButtonItemAppearance::UIBarButtonItemStateAppearance;
#[cfg(feature = "UIBarButtonItemGroup")]
pub use self::__UIBarButtonItemGroup::UIBarButtonItemGroup;
#[cfg(feature = "UIBarCommon")]
pub use self::__UIBarCommon::UIBarMetrics;
#[cfg(feature = "UIBarCommon")]
pub use self::__UIBarCommon::UIBarPosition;
#[cfg(feature = "UIBarCommon")]
pub use self::__UIBarCommon::UIBarPositioning;
#[cfg(feature = "UIBarCommon")]
pub use self::__UIBarCommon::UIBarPositioningDelegate;
#[cfg(feature = "UIBarItem")]
pub use self::__UIBarItem::UIBarItem;
#[cfg(feature = "UIBehavioralStyle")]
pub use self::__UIBehavioralStyle::UIBehavioralStyle;
#[cfg(feature = "UIBezierPath")]
pub use self::__UIBezierPath::UIBezierPath;
#[cfg(all(feature = "UIBlurEffect", feature = "UIVisualEffect"))]
pub use self::__UIBlurEffect::UIBlurEffect;
#[cfg(feature = "UIBlurEffect")]
pub use self::__UIBlurEffect::UIBlurEffectStyle;
#[cfg(all(
    feature = "UIButton",
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIButton::UIButton;
#[cfg(all(
    feature = "UIButton",
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIButton::UIButtonConfigurationUpdateHandler;
#[cfg(all(
    feature = "UIButton",
    feature = "UIControl",
    feature = "UIHoverStyle",
    feature = "UIPointerStyle",
    feature = "UIResponder",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIButton::UIButtonPointerStyleProvider;
#[cfg(feature = "UIButton")]
pub use self::__UIButton::UIButtonRole;
#[cfg(feature = "UIButton")]
pub use self::__UIButton::UIButtonType;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfiguration;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfigurationCornerStyle;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfigurationIndicator;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfigurationMacIdiomStyle;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfigurationSize;
#[cfg(feature = "UIButtonConfiguration")]
pub use self::__UIButtonConfiguration::UIButtonConfigurationTitleAlignment;
#[cfg(all(feature = "UIButtonConfiguration", feature = "block2"))]
pub use self::__UIButtonConfiguration::UIConfigurationTextAttributesTransformer;
#[cfg(feature = "UICalendarSelection")]
pub use self::__UICalendarSelection::UICalendarSelection;
#[cfg(all(
    feature = "UICalendarSelection",
    feature = "UICalendarSelectionMultiDate"
))]
pub use self::__UICalendarSelectionMultiDate::UICalendarSelectionMultiDate;
#[cfg(feature = "UICalendarSelectionMultiDate")]
pub use self::__UICalendarSelectionMultiDate::UICalendarSelectionMultiDateDelegate;
#[cfg(all(
    feature = "UICalendarSelection",
    feature = "UICalendarSelectionSingleDate"
))]
pub use self::__UICalendarSelectionSingleDate::UICalendarSelectionSingleDate;
#[cfg(feature = "UICalendarSelectionSingleDate")]
pub use self::__UICalendarSelectionSingleDate::UICalendarSelectionSingleDateDelegate;
#[cfg(all(
    feature = "UICalendarView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UICalendarView::UICalendarView;
#[cfg(feature = "UICalendarView")]
pub use self::__UICalendarView::UICalendarViewDelegate;
#[cfg(feature = "UICalendarViewDecoration")]
pub use self::__UICalendarViewDecoration::UICalendarViewDecoration;
#[cfg(feature = "UICalendarViewDecoration")]
pub use self::__UICalendarViewDecoration::UICalendarViewDecorationSize;
#[cfg(all(feature = "UICanvasFeedbackGenerator", feature = "UIFeedbackGenerator"))]
pub use self::__UICanvasFeedbackGenerator::UICanvasFeedbackGenerator;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessory;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryCheckmark;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryCustomView;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryDelete;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryDetail;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryDisclosureIndicator;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryDisplayedState;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryInsert;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryLabel;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryMultiselect;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryOutlineDisclosure;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryOutlineDisclosureStyle;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryPlacement;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryPopUpMenu;
#[cfg(all(feature = "UICellAccessory", feature = "block2"))]
pub use self::__UICellAccessory::UICellAccessoryPosition;
#[cfg(all(feature = "UICellAccessory", feature = "block2"))]
pub use self::__UICellAccessory::UICellAccessoryPositionAfterAccessoryOfClass;
#[cfg(all(feature = "UICellAccessory", feature = "block2"))]
pub use self::__UICellAccessory::UICellAccessoryPositionBeforeAccessoryOfClass;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryReorder;
#[cfg(feature = "UICellAccessory")]
pub use self::__UICellAccessory::UICellAccessoryStandardDimension;
#[cfg(feature = "UICellConfigurationState")]
pub use self::__UICellConfigurationState::UICellConfigurationDragState;
#[cfg(feature = "UICellConfigurationState")]
pub use self::__UICellConfigurationState::UICellConfigurationDropState;
#[cfg(all(
    feature = "UICellConfigurationState",
    feature = "UIViewConfigurationState"
))]
pub use self::__UICellConfigurationState::UICellConfigurationState;
#[cfg(all(
    feature = "UICloudSharingController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UICloudSharingController::UICloudSharingController;
#[cfg(feature = "UICloudSharingController")]
pub use self::__UICloudSharingController::UICloudSharingControllerDelegate;
#[cfg(feature = "UICloudSharingController")]
pub use self::__UICloudSharingController::UICloudSharingPermissionOptions;
#[cfg(feature = "UICollectionLayoutList")]
pub use self::__UICollectionLayoutList::UICollectionLayoutListAppearance;
#[cfg(feature = "UICollectionLayoutList")]
pub use self::__UICollectionLayoutList::UICollectionLayoutListConfiguration;
#[cfg(feature = "UICollectionLayoutList")]
pub use self::__UICollectionLayoutList::UICollectionLayoutListFooterMode;
#[cfg(feature = "UICollectionLayoutList")]
pub use self::__UICollectionLayoutList::UICollectionLayoutListHeaderMode;
#[cfg(all(
    feature = "UICollectionLayoutList",
    feature = "UIListSeparatorConfiguration",
    feature = "block2"
))]
pub use self::__UICollectionLayoutList::UICollectionLayoutListItemSeparatorHandler;
#[cfg(all(
    feature = "UICollectionLayoutList",
    feature = "UISwipeActionsConfiguration",
    feature = "block2"
))]
pub use self::__UICollectionLayoutList::UICollectionLayoutListSwipeActionsConfigurationProvider;
#[cfg(all(
    feature = "UICollectionView",
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UIView"
))]
pub use self::__UICollectionView::UICollectionView;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDataSource;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDataSourcePrefetching;
#[cfg(all(feature = "UICollectionView", feature = "UIScrollView"))]
pub use self::__UICollectionView::UICollectionViewDelegate;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDragDelegate;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDropCoordinator;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDropDelegate;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDropIntent;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDropItem;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewDropPlaceholder;
#[cfg(all(feature = "UICollectionView", feature = "UIDragInteraction"))]
pub use self::__UICollectionView::UICollectionViewDropPlaceholderContext;
#[cfg(all(feature = "UICollectionView", feature = "UIDropInteraction"))]
pub use self::__UICollectionView::UICollectionViewDropProposal;
#[cfg(all(feature = "UICollectionView", feature = "UIFocus"))]
pub use self::__UICollectionView::UICollectionViewFocusUpdateContext;
#[cfg(all(feature = "UICollectionView", feature = "block2"))]
pub use self::__UICollectionView::UICollectionViewLayoutInteractiveTransitionCompletion;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewPlaceholder;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewReorderingCadence;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewScrollPosition;
#[cfg(feature = "UICollectionView")]
pub use self::__UICollectionView::UICollectionViewSelfSizingInvalidation;
#[cfg(all(
    feature = "UICollectionViewCell",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UICollectionViewCell::UICollectionReusableView;
#[cfg(all(
    feature = "UICollectionViewCell",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UICollectionViewCell::UICollectionViewCell;
#[cfg(all(
    feature = "UICellConfigurationState",
    feature = "UICollectionViewCell",
    feature = "UIResponder",
    feature = "UIView",
    feature = "UIViewConfigurationState",
    feature = "block2"
))]
pub use self::__UICollectionViewCell::UICollectionViewCellConfigurationUpdateHandler;
#[cfg(feature = "UICollectionViewCell")]
pub use self::__UICollectionViewCell::UICollectionViewCellDragState;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutAnchor;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutBoundarySupplementaryItem;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutContainer;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutDecorationItem;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutDimension;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutEdgeSpacing;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutEnvironment;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutGroup;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutGroupCustomItem;
#[cfg(all(feature = "UICollectionViewCompositionalLayout", feature = "block2"))]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutGroupCustomItemProvider;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutItem;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutSection;
#[cfg(all(
    feature = "UICollectionViewCompositionalLayout",
    feature = "UIDynamicBehavior",
    feature = "block2"
))]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutSectionVisibleItemsInvalidationHandler;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutSize;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutSpacing;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutSupplementaryItem;
#[cfg(all(
    feature = "UICollectionViewCompositionalLayout",
    feature = "UIDynamicBehavior"
))]
pub use self::__UICollectionViewCompositionalLayout::NSCollectionLayoutVisibleItem;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingBehavior;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingBounce;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingDecelerationRate;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingDecelerationRateAutomatic;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingDecelerationRateFast;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingDecelerationRateNormal;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionLayoutSectionOrthogonalScrollingProperties;
#[cfg(all(
    feature = "UICollectionViewCompositionalLayout",
    feature = "UICollectionViewLayout"
))]
pub use self::__UICollectionViewCompositionalLayout::UICollectionViewCompositionalLayout;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UICollectionViewCompositionalLayoutConfiguration;
#[cfg(all(feature = "UICollectionViewCompositionalLayout", feature = "block2"))]
pub use self::__UICollectionViewCompositionalLayout::UICollectionViewCompositionalLayoutSectionProvider;
#[cfg(feature = "UICollectionViewCompositionalLayout")]
pub use self::__UICollectionViewCompositionalLayout::UIContentInsetsReference;
#[cfg(all(
    feature = "UICollectionViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UICollectionViewController::UICollectionViewController;
#[cfg(all(
    feature = "UICollectionView",
    feature = "UICollectionViewFlowLayout",
    feature = "UIScrollView"
))]
pub use self::__UICollectionViewFlowLayout::UICollectionViewDelegateFlowLayout;
#[cfg(all(
    feature = "UICollectionViewFlowLayout",
    feature = "UICollectionViewLayout"
))]
pub use self::__UICollectionViewFlowLayout::UICollectionViewFlowLayout;
#[cfg(feature = "UICollectionViewFlowLayout")]
pub use self::__UICollectionViewFlowLayout::UICollectionViewFlowLayoutAutomaticSize;
#[cfg(all(
    feature = "UICollectionViewFlowLayout",
    feature = "UICollectionViewLayout"
))]
pub use self::__UICollectionViewFlowLayout::UICollectionViewFlowLayoutInvalidationContext;
#[cfg(feature = "UICollectionViewFlowLayout")]
pub use self::__UICollectionViewFlowLayout::UICollectionViewFlowLayoutSectionInsetReference;
#[cfg(feature = "UICollectionViewItemRegistration")]
pub use self::__UICollectionViewItemRegistration::UICollectionViewCellRegistration;
#[cfg(all(
    feature = "UICollectionViewCell",
    feature = "UICollectionViewItemRegistration",
    feature = "UIResponder",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UICollectionViewItemRegistration::UICollectionViewCellRegistrationConfigurationHandler;
#[cfg(feature = "UICollectionViewItemRegistration")]
pub use self::__UICollectionViewItemRegistration::UICollectionViewSupplementaryRegistration;
#[cfg(all(
    feature = "UICollectionViewCell",
    feature = "UICollectionViewItemRegistration",
    feature = "UIResponder",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UICollectionViewItemRegistration::UICollectionViewSupplementaryRegistrationConfigurationHandler;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionElementCategory;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionElementKindSectionFooter;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionElementKindSectionHeader;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionViewLayout;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionViewLayoutAttributes;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionViewLayoutAutomaticDimension;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionViewLayoutInvalidationContext;
#[cfg(feature = "UICollectionViewLayout")]
pub use self::__UICollectionViewLayout::UICollectionViewScrollDirection;
#[cfg(all(
    feature = "UICollectionViewCell",
    feature = "UICollectionViewListCell",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UICollectionViewListCell::UICollectionViewListCell;
#[cfg(all(
    feature = "UICollectionViewLayout",
    feature = "UICollectionViewTransitionLayout"
))]
pub use self::__UICollectionViewTransitionLayout::UICollectionViewTransitionLayout;
#[cfg(feature = "UICollectionViewUpdateItem")]
pub use self::__UICollectionViewUpdateItem::UICollectionUpdateAction;
#[cfg(feature = "UICollectionViewUpdateItem")]
pub use self::__UICollectionViewUpdateItem::UICollectionViewUpdateItem;
#[cfg(all(feature = "UICollisionBehavior", feature = "UIDynamicBehavior"))]
pub use self::__UICollisionBehavior::UICollisionBehavior;
#[cfg(feature = "UICollisionBehavior")]
pub use self::__UICollisionBehavior::UICollisionBehaviorDelegate;
#[cfg(feature = "UICollisionBehavior")]
pub use self::__UICollisionBehavior::UICollisionBehaviorMode;
#[cfg(feature = "UIColor")]
pub use self::__UIColor::CIColorUIKitAdditions;
#[cfg(feature = "UIColor")]
pub use self::__UIColor::UIColor;
#[cfg(all(
    feature = "UIColorPickerViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIColorPickerViewController::UIColorPickerViewController;
#[cfg(feature = "UIColorPickerViewController")]
pub use self::__UIColorPickerViewController::UIColorPickerViewControllerDelegate;
#[cfg(all(
    feature = "UIColorWell",
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIColorWell::UIColorWell;
#[cfg(all(feature = "UICommand", feature = "UIMenuElement"))]
pub use self::__UICommand::UICommand;
#[cfg(feature = "UICommand")]
pub use self::__UICommand::UICommandAlternate;
#[cfg(feature = "UICommand")]
pub use self::__UICommand::UICommandTagShare;
#[cfg(feature = "UICommand")]
pub use self::__UICommand::UIKeyModifierFlags;
#[cfg(all(
    feature = "UIColor",
    feature = "UIConfigurationColorTransformer",
    feature = "block2"
))]
pub use self::__UIConfigurationColorTransformer::UIConfigurationColorTransformer;
#[cfg(all(
    feature = "UIColor",
    feature = "UIConfigurationColorTransformer",
    feature = "block2"
))]
pub use self::__UIConfigurationColorTransformer::UIConfigurationColorTransformerGrayscale;
#[cfg(all(
    feature = "UIColor",
    feature = "UIConfigurationColorTransformer",
    feature = "block2"
))]
pub use self::__UIConfigurationColorTransformer::UIConfigurationColorTransformerMonochromeTint;
#[cfg(all(
    feature = "UIColor",
    feature = "UIConfigurationColorTransformer",
    feature = "block2"
))]
pub use self::__UIConfigurationColorTransformer::UIConfigurationColorTransformerPreferredTint;
#[cfg(feature = "UIConfigurationState")]
pub use self::__UIConfigurationState::UIConfigurationState;
#[cfg(feature = "UIConfigurationState")]
pub use self::__UIConfigurationState::UIConfigurationStateCustomKey;
#[cfg(feature = "UIContentConfiguration")]
pub use self::__UIContentConfiguration::UIContentConfiguration;
#[cfg(feature = "UIContentConfiguration")]
pub use self::__UIContentConfiguration::UIContentView;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategory;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryAccessibilityExtraExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryAccessibilityExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryAccessibilityLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryAccessibilityMedium;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryCompareToCategory;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryDidChangeNotification;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryExtraExtraExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryExtraExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryExtraLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryExtraSmall;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryIsAccessibilityCategory;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryLarge;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryMedium;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryNewValueKey;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategorySmall;
#[cfg(feature = "UIContentSizeCategory")]
pub use self::__UIContentSizeCategory::UIContentSizeCategoryUnspecified;
#[cfg(feature = "UIContentSizeCategoryAdjusting")]
pub use self::__UIContentSizeCategoryAdjusting::UIContentSizeCategoryAdjusting;
#[cfg(feature = "UIContentUnavailableButtonProperties")]
pub use self::__UIContentUnavailableButtonProperties::UIContentUnavailableButtonProperties;
#[cfg(feature = "UIContentUnavailableConfiguration")]
pub use self::__UIContentUnavailableConfiguration::UIContentUnavailableAlignment;
#[cfg(feature = "UIContentUnavailableConfiguration")]
pub use self::__UIContentUnavailableConfiguration::UIContentUnavailableConfiguration;
#[cfg(feature = "UIContentUnavailableConfigurationState")]
pub use self::__UIContentUnavailableConfigurationState::UIContentUnavailableConfigurationState;
#[cfg(feature = "UIContentUnavailableImageProperties")]
pub use self::__UIContentUnavailableImageProperties::UIContentUnavailableImageProperties;
#[cfg(feature = "UIContentUnavailableTextProperties")]
pub use self::__UIContentUnavailableTextProperties::UIContentUnavailableTextProperties;
#[cfg(all(
    feature = "UIContentUnavailableView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIContentUnavailableView::UIContentUnavailableView;
#[cfg(all(
    feature = "UIContextMenuConfiguration",
    feature = "UIMenu",
    feature = "UIMenuElement",
    feature = "block2"
))]
pub use self::__UIContextMenuConfiguration::UIContextMenuActionProvider;
#[cfg(feature = "UIContextMenuConfiguration")]
pub use self::__UIContextMenuConfiguration::UIContextMenuConfiguration;
#[cfg(feature = "UIContextMenuConfiguration")]
pub use self::__UIContextMenuConfiguration::UIContextMenuConfigurationElementOrder;
#[cfg(all(
    feature = "UIContextMenuConfiguration",
    feature = "UIResponder",
    feature = "UIViewController",
    feature = "block2"
))]
pub use self::__UIContextMenuConfiguration::UIContextMenuContentPreviewProvider;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteraction;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteractionAnimating;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteractionAppearance;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteractionCommitAnimating;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteractionCommitStyle;
#[cfg(feature = "UIContextMenuInteraction")]
pub use self::__UIContextMenuInteraction::UIContextMenuInteractionDelegate;
#[cfg(feature = "UIContextualAction")]
pub use self::__UIContextualAction::UIContextualAction;
#[cfg(all(
    feature = "UIContextualAction",
    feature = "UIResponder",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIContextualAction::UIContextualActionHandler;
#[cfg(feature = "UIContextualAction")]
pub use self::__UIContextualAction::UIContextualActionStyle;
#[cfg(all(feature = "UIControl", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIControl::UIControl;
#[cfg(feature = "UIControl")]
pub use self::__UIControl::UIControlContentHorizontalAlignment;
#[cfg(feature = "UIControl")]
pub use self::__UIControl::UIControlContentVerticalAlignment;
#[cfg(feature = "UIControl")]
pub use self::__UIControl::UIControlEvents;
#[cfg(feature = "UIControl")]
pub use self::__UIControl::UIControlState;
#[cfg(feature = "UIDataDetectors")]
pub use self::__UIDataDetectors::UIDataDetectorTypes;
#[cfg(feature = "UIDataSourceTranslating")]
pub use self::__UIDataSourceTranslating::UIDataSourceTranslating;
#[cfg(all(
    feature = "UIControl",
    feature = "UIDatePicker",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIDatePicker::UIDatePicker;
#[cfg(feature = "UIDatePicker")]
pub use self::__UIDatePicker::UIDatePickerMode;
#[cfg(feature = "UIDatePicker")]
pub use self::__UIDatePicker::UIDatePickerStyle;
#[cfg(all(feature = "UIDeferredMenuElement", feature = "UIMenuElement"))]
pub use self::__UIDeferredMenuElement::UIDeferredMenuElement;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDevice;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDeviceBatteryLevelDidChangeNotification;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDeviceBatteryState;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDeviceBatteryStateDidChangeNotification;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDeviceOrientationDidChangeNotification;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIDeviceProximityStateDidChangeNotification;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIInputViewAudioFeedback;
#[cfg(feature = "UIDevice")]
pub use self::__UIDevice::UIUserInterfaceIdiom;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::NSDiffableDataSourceSectionTransaction;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::NSDiffableDataSourceSnapshot;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::NSDiffableDataSourceTransaction;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::UICollectionViewDiffableDataSource;
#[cfg(all(
    feature = "UICollectionView",
    feature = "UICollectionViewCell",
    feature = "UIDiffableDataSource",
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIDiffableDataSource::UICollectionViewDiffableDataSourceCellProvider;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::UICollectionViewDiffableDataSourceReorderingHandlers;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::UICollectionViewDiffableDataSourceSectionSnapshotHandlers;
#[cfg(all(
    feature = "UICollectionView",
    feature = "UICollectionViewCell",
    feature = "UIDiffableDataSource",
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIDiffableDataSource::UICollectionViewDiffableDataSourceSupplementaryViewProvider;
#[cfg(feature = "UIDiffableDataSource")]
pub use self::__UIDiffableDataSource::UITableViewDiffableDataSource;
#[cfg(all(
    feature = "UIDiffableDataSource",
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UITableView",
    feature = "UITableViewCell",
    feature = "UIView",
    feature = "block2"
))]
pub use self::__UIDiffableDataSource::UITableViewDiffableDataSourceCellProvider;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::NSUserActivityDocumentURLKey;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::UIDocument;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::UIDocumentChangeKind;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::UIDocumentSaveOperation;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::UIDocumentState;
#[cfg(feature = "UIDocument")]
pub use self::__UIDocument::UIDocumentStateChangedNotification;
#[cfg(feature = "UIDocumentBrowserAction")]
pub use self::__UIDocumentBrowserAction::UIDocumentBrowserAction;
#[cfg(feature = "UIDocumentBrowserAction")]
pub use self::__UIDocumentBrowserAction::UIDocumentBrowserActionAvailability;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserErrorCode;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserErrorDomain;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserImportMode;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserTransitionController;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserUserInterfaceStyle;
#[cfg(all(
    feature = "UIDocumentBrowserViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserViewController;
#[cfg(feature = "UIDocumentBrowserViewController")]
pub use self::__UIDocumentBrowserViewController::UIDocumentBrowserViewControllerDelegate;
#[cfg(feature = "UIDocumentInteractionController")]
pub use self::__UIDocumentInteractionController::UIDocumentInteractionController;
#[cfg(feature = "UIDocumentInteractionController")]
pub use self::__UIDocumentInteractionController::UIDocumentInteractionControllerDelegate;
#[cfg(feature = "UIDocumentMenuViewController")]
pub use self::__UIDocumentMenuViewController::UIDocumentMenuDelegate;
#[cfg(feature = "UIDocumentMenuViewController")]
pub use self::__UIDocumentMenuViewController::UIDocumentMenuOrder;
#[cfg(all(
    feature = "UIDocumentMenuViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIDocumentMenuViewController::UIDocumentMenuViewController;
#[cfg(all(
    feature = "UIDocumentPickerExtensionViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIDocumentPickerExtensionViewController::UIDocumentPickerExtensionViewController;
#[cfg(feature = "UIDocumentPickerViewController")]
pub use self::__UIDocumentPickerViewController::UIDocumentPickerDelegate;
#[cfg(feature = "UIDocumentPickerViewController")]
pub use self::__UIDocumentPickerViewController::UIDocumentPickerMode;
#[cfg(all(
    feature = "UIDocumentPickerViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIDocumentPickerViewController::UIDocumentPickerViewController;
#[cfg(feature = "UIDocumentProperties")]
pub use self::__UIDocumentProperties::UIDocumentProperties;
#[cfg(all(
    feature = "UIDocumentViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIDocumentViewController::UIDocumentViewController;
#[cfg(feature = "UIDragInteraction")]
pub use self::__UIDragInteraction::UIDragAnimating;
#[cfg(feature = "UIDragInteraction")]
pub use self::__UIDragInteraction::UIDragInteraction;
#[cfg(feature = "UIDragInteraction")]
pub use self::__UIDragInteraction::UIDragInteractionDelegate;
#[cfg(feature = "UIDragItem")]
pub use self::__UIDragItem::UIDragItem;
#[cfg(feature = "UIDragPreview")]
pub use self::__UIDragPreview::UIDragPreview;
#[cfg(all(feature = "UIDragPreviewParameters", feature = "UIPreviewParameters"))]
pub use self::__UIDragPreviewParameters::UIDragPreviewParameters;
#[cfg(feature = "UIDragSession")]
pub use self::__UIDragSession::UIDragDropSession;
#[cfg(feature = "UIDragSession")]
pub use self::__UIDragSession::UIDragSession;
#[cfg(feature = "UIDragSession")]
pub use self::__UIDragSession::UIDropSession;
#[cfg(feature = "UIDragSession")]
pub use self::__UIDragSession::UIDropSessionProgressIndicatorStyle;
#[cfg(feature = "UIDropInteraction")]
pub use self::__UIDropInteraction::UIDropInteraction;
#[cfg(feature = "UIDropInteraction")]
pub use self::__UIDropInteraction::UIDropInteractionDelegate;
#[cfg(feature = "UIDropInteraction")]
pub use self::__UIDropInteraction::UIDropOperation;
#[cfg(feature = "UIDropInteraction")]
pub use self::__UIDropInteraction::UIDropProposal;
#[cfg(feature = "UIDynamicAnimator")]
pub use self::__UIDynamicAnimator::UIDynamicAnimator;
#[cfg(feature = "UIDynamicAnimator")]
pub use self::__UIDynamicAnimator::UIDynamicAnimatorDelegate;
#[cfg(feature = "UIDynamicBehavior")]
pub use self::__UIDynamicBehavior::UIDynamicBehavior;
#[cfg(feature = "UIDynamicBehavior")]
pub use self::__UIDynamicBehavior::UIDynamicItem;
#[cfg(feature = "UIDynamicBehavior")]
pub use self::__UIDynamicBehavior::UIDynamicItemCollisionBoundsType;
#[cfg(feature = "UIDynamicBehavior")]
pub use self::__UIDynamicBehavior::UIDynamicItemGroup;
#[cfg(all(feature = "UIDynamicBehavior", feature = "UIDynamicItemBehavior"))]
pub use self::__UIDynamicItemBehavior::UIDynamicItemBehavior;
#[cfg(feature = "UIEditMenuInteraction")]
pub use self::__UIEditMenuInteraction::UIEditMenuArrowDirection;
#[cfg(feature = "UIEditMenuInteraction")]
pub use self::__UIEditMenuInteraction::UIEditMenuConfiguration;
#[cfg(feature = "UIEditMenuInteraction")]
pub use self::__UIEditMenuInteraction::UIEditMenuInteraction;
#[cfg(feature = "UIEditMenuInteraction")]
pub use self::__UIEditMenuInteraction::UIEditMenuInteractionAnimating;
#[cfg(feature = "UIEditMenuInteraction")]
pub use self::__UIEditMenuInteraction::UIEditMenuInteractionDelegate;
#[cfg(feature = "UIEvent")]
pub use self::__UIEvent::UIEvent;
#[cfg(feature = "UIEvent")]
pub use self::__UIEvent::UIEventButtonMask;
#[cfg(feature = "UIEvent")]
pub use self::__UIEvent::UIEventButtonMaskForButtonNumber;
#[cfg(feature = "UIEvent")]
pub use self::__UIEvent::UIEventSubtype;
#[cfg(feature = "UIEvent")]
pub use self::__UIEvent::UIEventType;
#[cfg(feature = "UIEventAttribution")]
pub use self::__UIEventAttribution::UIEventAttribution;
#[cfg(all(
    feature = "UIEventAttributionView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIEventAttributionView::UIEventAttributionView;
#[cfg(feature = "UIFeedbackGenerator")]
pub use self::__UIFeedbackGenerator::UIFeedbackGenerator;
#[cfg(all(feature = "UIDynamicBehavior", feature = "UIFieldBehavior"))]
pub use self::__UIFieldBehavior::UIFieldBehavior;
#[cfg(feature = "UIFindInteraction")]
pub use self::__UIFindInteraction::UIFindInteraction;
#[cfg(feature = "UIFindInteraction")]
pub use self::__UIFindInteraction::UIFindInteractionDelegate;
#[cfg(feature = "UIFindSession")]
pub use self::__UIFindSession::UIFindSession;
#[cfg(feature = "UIFindSession")]
pub use self::__UIFindSession::UIFindSessionSearchResultDisplayStyle;
#[cfg(feature = "UIFindSession")]
pub use self::__UIFindSession::UITextSearchMatchMethod;
#[cfg(feature = "UIFindSession")]
pub use self::__UIFindSession::UITextSearchOptions;
#[cfg(feature = "UIFindSession")]
pub use self::__UIFindSession::UITextSearchingFindSession;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusDidUpdateNotification;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusEnvironment;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusGroupPriority;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusGroupPriorityCurrentlyFocused;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusGroupPriorityIgnored;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusGroupPriorityPreviouslyFocused;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusGroupPriorityPrioritized;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusHeading;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusItem;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusItemContainer;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusItemScrollableContainer;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusMovementDidFailNotification;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusSoundIdentifier;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusSoundIdentifierDefault;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusSoundIdentifierNone;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusUpdateAnimationCoordinatorKey;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusUpdateContext;
#[cfg(feature = "UIFocus")]
pub use self::__UIFocus::UIFocusUpdateContextKey;
#[cfg(feature = "UIFocusAnimationCoordinator")]
pub use self::__UIFocusAnimationCoordinator::UIFocusAnimationContext;
#[cfg(feature = "UIFocusAnimationCoordinator")]
pub use self::__UIFocusAnimationCoordinator::UIFocusAnimationCoordinator;
#[cfg(feature = "UIFocusDebugger")]
pub use self::__UIFocusDebugger::UIFocusDebugger;
#[cfg(feature = "UIFocusDebugger")]
pub use self::__UIFocusDebugger::UIFocusDebuggerOutput;
#[cfg(feature = "UIFocusEffect")]
pub use self::__UIFocusEffect::UIFocusEffect;
#[cfg(feature = "UIFocusEffect")]
pub use self::__UIFocusEffect::UIFocusHaloEffect;
#[cfg(feature = "UIFocusEffect")]
pub use self::__UIFocusEffect::UIFocusHaloEffectPosition;
#[cfg(all(feature = "UIFocusGuide", feature = "UILayoutGuide"))]
pub use self::__UIFocusGuide::UIFocusGuide;
#[cfg(feature = "UIFocusMovementHint")]
pub use self::__UIFocusMovementHint::UIFocusMovementHint;
#[cfg(feature = "UIFocusSystem")]
pub use self::__UIFocusSystem::UIFocusSystem;
#[cfg(feature = "UIFont")]
pub use self::__UIFont::UIFont;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptor;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorAttributeName;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorCascadeListAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorCharacterSetAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorClass;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorFaceAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorFamilyAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorFeatureKey;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorFeatureSettingsAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorFixedAdvanceAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorMatrixAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorNameAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSizeAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSymbolicTraits;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSystemDesign;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSystemDesignDefault;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSystemDesignMonospaced;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSystemDesignRounded;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorSystemDesignSerif;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorTextStyleAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorTraitKey;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorTraitsAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontDescriptorVisibleNameAttribute;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontFeatureSelectorIdentifierKey;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontFeatureTypeIdentifierKey;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontSlantTrait;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontSymbolicTrait;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyle;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleBody;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleCallout;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleCaption1;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleCaption2;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleExtraLargeTitle;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleExtraLargeTitle2;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleFootnote;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleHeadline;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleLargeTitle;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleSubheadline;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleTitle1;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleTitle2;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontTextStyleTitle3;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeight;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightBlack;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightBold;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightHeavy;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightLight;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightMedium;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightRegular;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightSemibold;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightThin;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightTrait;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWeightUltraLight;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidth;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidthCompressed;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidthCondensed;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidthExpanded;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidthStandard;
#[cfg(feature = "UIFontDescriptor")]
pub use self::__UIFontDescriptor::UIFontWidthTrait;
#[cfg(feature = "UIFontMetrics")]
pub use self::__UIFontMetrics::UIFontMetrics;
#[cfg(all(
    feature = "UIFontPickerViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIFontPickerViewController::UIFontPickerViewController;
#[cfg(feature = "UIFontPickerViewController")]
pub use self::__UIFontPickerViewController::UIFontPickerViewControllerDelegate;
#[cfg(feature = "UIFontPickerViewControllerConfiguration")]
pub use self::__UIFontPickerViewControllerConfiguration::UIFontPickerViewControllerConfiguration;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::CGAffineTransformFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::CGPointFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::CGRectFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::CGSizeFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::CGVectorFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSCoderUIGeometryKeyedCoding;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSDirectionalEdgeInsets;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSDirectionalEdgeInsetsFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSDirectionalEdgeInsetsZero;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSDirectionalRectEdge;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSRectAlignment;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromCGAffineTransform;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromCGPoint;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromCGRect;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromCGSize;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromCGVector;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromDirectionalEdgeInsets;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromUIEdgeInsets;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSStringFromUIOffset;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::NSValueUIGeometryExtensions;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIAxis;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIDirectionalRectEdge;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIEdgeInsets;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIEdgeInsetsFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIEdgeInsetsZero;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIOffset;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIOffsetFromString;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIOffsetZero;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIRectCorner;
#[cfg(feature = "UIGeometry")]
pub use self::__UIGeometry::UIRectEdge;
#[cfg(feature = "UIGestureRecognizer")]
pub use self::__UIGestureRecognizer::UIGestureRecognizer;
#[cfg(feature = "UIGestureRecognizer")]
pub use self::__UIGestureRecognizer::UIGestureRecognizerDelegate;
#[cfg(feature = "UIGestureRecognizer")]
pub use self::__UIGestureRecognizer::UIGestureRecognizerState;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsAddPDFContextDestinationAtPoint;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginImageContext;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginImageContextWithOptions;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginPDFContextToData;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginPDFContextToFile;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginPDFPage;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsBeginPDFPageWithInfo;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsEndImageContext;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsEndPDFContext;
#[cfg(all(feature = "UIGraphics", feature = "UIImage"))]
pub use self::__UIGraphics::UIGraphicsGetImageFromCurrentImageContext;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsGetPDFContextBounds;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsPopContext;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsSetPDFContextDestinationForRect;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIGraphicsSetPDFContextURLForRect;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIRectClip;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIRectFill;
#[cfg(feature = "UIGraphics")]
pub use self::__UIGraphics::UIRectFrame;
#[cfg(all(
    feature = "UIGraphicsImageRenderer",
    feature = "UIGraphicsRenderer",
    feature = "block2"
))]
pub use self::__UIGraphicsImageRenderer::UIGraphicsImageDrawingActions;
#[cfg(all(feature = "UIGraphicsImageRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsImageRenderer::UIGraphicsImageRenderer;
#[cfg(all(feature = "UIGraphicsImageRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsImageRenderer::UIGraphicsImageRendererContext;
#[cfg(all(feature = "UIGraphicsImageRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsImageRenderer::UIGraphicsImageRendererFormat;
#[cfg(feature = "UIGraphicsImageRenderer")]
pub use self::__UIGraphicsImageRenderer::UIGraphicsImageRendererFormatRange;
#[cfg(all(
    feature = "UIGraphicsPDFRenderer",
    feature = "UIGraphicsRenderer",
    feature = "block2"
))]
pub use self::__UIGraphicsPDFRenderer::UIGraphicsPDFDrawingActions;
#[cfg(all(feature = "UIGraphicsPDFRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsPDFRenderer::UIGraphicsPDFRenderer;
#[cfg(all(feature = "UIGraphicsPDFRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsPDFRenderer::UIGraphicsPDFRendererContext;
#[cfg(all(feature = "UIGraphicsPDFRenderer", feature = "UIGraphicsRenderer"))]
pub use self::__UIGraphicsPDFRenderer::UIGraphicsPDFRendererFormat;
#[cfg(feature = "UIGraphicsRenderer")]
pub use self::__UIGraphicsRenderer::UIGraphicsRenderer;
#[cfg(feature = "UIGraphicsRenderer")]
pub use self::__UIGraphicsRenderer::UIGraphicsRendererContext;
#[cfg(feature = "UIGraphicsRenderer")]
pub use self::__UIGraphicsRenderer::UIGraphicsRendererFormat;
#[cfg(all(
    feature = "UIGraphicsRenderer",
    feature = "UIGraphicsRendererSubclass",
    feature = "block2"
))]
pub use self::__UIGraphicsRendererSubclass::UIGraphicsDrawingActions;
#[cfg(all(feature = "UIDynamicBehavior", feature = "UIGravityBehavior"))]
pub use self::__UIGravityBehavior::UIGravityBehavior;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessAccessibilityFeature;
#[cfg(all(feature = "UIGuidedAccess", feature = "block2"))]
pub use self::__UIGuidedAccess::UIGuidedAccessConfigureAccessibilityFeatures;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessErrorCode;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessErrorDomain;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessRestrictionDelegate;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessRestrictionState;
#[cfg(feature = "UIGuidedAccess")]
pub use self::__UIGuidedAccess::UIGuidedAccessRestrictionStateForIdentifier;
#[cfg(feature = "UIHoverEffect")]
pub use self::__UIHoverEffect::UIHoverAutomaticEffect;
#[cfg(feature = "UIHoverEffect")]
pub use self::__UIHoverEffect::UIHoverEffect;
#[cfg(feature = "UIHoverEffect")]
pub use self::__UIHoverEffect::UIHoverHighlightEffect;
#[cfg(feature = "UIHoverEffect")]
pub use self::__UIHoverEffect::UIHoverLiftEffect;
#[cfg(all(feature = "UIHoverEffectLayer", feature = "objc2-quartz-core"))]
#[cfg(not(target_os = "watchos"))]
pub use self::__UIHoverEffectLayer::UIHoverEffectLayer;
#[cfg(all(feature = "UIGestureRecognizer", feature = "UIHoverGestureRecognizer"))]
pub use self::__UIHoverGestureRecognizer::UIHoverGestureRecognizer;
#[cfg(feature = "UIHoverStyle")]
pub use self::__UIHoverStyle::UIHoverStyle;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::CIImageUIKitAdditions;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImage;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImageHEICRepresentation;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImageJPEGRepresentation;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImageOrientation;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImagePNGRepresentation;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImageRenderingMode;
#[cfg(feature = "UIImage")]
pub use self::__UIImage::UIImageResizingMode;
#[cfg(feature = "UIImageAsset")]
pub use self::__UIImageAsset::UIImageAsset;
#[cfg(feature = "UIImageConfiguration")]
pub use self::__UIImageConfiguration::UIImageConfiguration;
#[cfg(all(
    feature = "UIImagePickerController",
    feature = "UINavigationController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIImagePickerController::UIImagePickerController;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerCameraCaptureMode;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerCameraDevice;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerCameraFlashMode;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerCropRect;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerDelegate;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerEditedImage;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerImageURL;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerImageURLExportPreset;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerInfoKey;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerLivePhoto;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerMediaMetadata;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerMediaType;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerMediaURL;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerOriginalImage;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerPHAsset;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerQualityType;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerReferenceURL;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIImagePickerControllerSourceType;
#[cfg(all(feature = "UIImage", feature = "UIImagePickerController"))]
pub use self::__UIImagePickerController::UIImageWriteToSavedPhotosAlbum;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UISaveVideoAtPathToSavedPhotosAlbum;
#[cfg(feature = "UIImagePickerController")]
pub use self::__UIImagePickerController::UIVideoAtPathIsCompatibleWithSavedPhotosAlbum;
#[cfg(feature = "UIImageReader")]
pub use self::__UIImageReader::UIImageReader;
#[cfg(feature = "UIImageReader")]
pub use self::__UIImageReader::UIImageReaderConfiguration;
#[cfg(all(feature = "UIFontDescriptor", feature = "UIImageSymbolConfiguration"))]
pub use self::__UIImageSymbolConfiguration::UIFontWeightForImageSymbolWeight;
#[cfg(all(
    feature = "UIImageConfiguration",
    feature = "UIImageSymbolConfiguration"
))]
pub use self::__UIImageSymbolConfiguration::UIImageSymbolConfiguration;
#[cfg(feature = "UIImageSymbolConfiguration")]
pub use self::__UIImageSymbolConfiguration::UIImageSymbolScale;
#[cfg(feature = "UIImageSymbolConfiguration")]
pub use self::__UIImageSymbolConfiguration::UIImageSymbolWeight;
#[cfg(all(feature = "UIFontDescriptor", feature = "UIImageSymbolConfiguration"))]
pub use self::__UIImageSymbolConfiguration::UIImageSymbolWeightForFontWeight;
#[cfg(all(feature = "UIImageView", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIImageView::UIImageView;
#[cfg(all(feature = "UIFeedbackGenerator", feature = "UIImpactFeedbackGenerator"))]
pub use self::__UIImpactFeedbackGenerator::UIImpactFeedbackGenerator;
#[cfg(feature = "UIImpactFeedbackGenerator")]
pub use self::__UIImpactFeedbackGenerator::UIImpactFeedbackStyle;
#[cfg(feature = "UIIndirectScribbleInteraction")]
pub use self::__UIIndirectScribbleInteraction::UIIndirectScribbleInteraction;
#[cfg(feature = "UIIndirectScribbleInteraction")]
pub use self::__UIIndirectScribbleInteraction::UIIndirectScribbleInteractionDelegate;
#[cfg(feature = "UIIndirectScribbleInteraction")]
pub use self::__UIIndirectScribbleInteraction::UIScribbleElementIdentifier;
#[cfg(all(feature = "UIInputView", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIInputView::UIInputView;
#[cfg(feature = "UIInputView")]
pub use self::__UIInputView::UIInputViewStyle;
#[cfg(all(
    feature = "UIInputViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIInputViewController::UIInputViewController;
#[cfg(all(
    feature = "UIInputViewController",
    feature = "UITextInput",
    feature = "UITextInputTraits"
))]
pub use self::__UIInputViewController::UITextDocumentProxy;
#[cfg(feature = "UIInteraction")]
pub use self::__UIInteraction::UIInteraction;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIAccessibilityContrast;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIBarStyle;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIDisplayGamut;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIImageDynamicRange;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UILegibilityWeight;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UINSToolbarItemPresentationSize;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UITraitEnvironmentLayoutDirection;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIUserInterfaceActiveAppearance;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIUserInterfaceLayoutDirection;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIUserInterfaceLevel;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIUserInterfaceSizeClass;
#[cfg(feature = "UIInterface")]
pub use self::__UIInterface::UIUserInterfaceStyle;
#[cfg(feature = "UIKey")]
pub use self::__UIKey::UIKey;
#[cfg(all(
    feature = "UICommand",
    feature = "UIKeyCommand",
    feature = "UIMenuElement"
))]
pub use self::__UIKeyCommand::UIKeyCommand;
#[cfg(feature = "UIKeyConstants")]
pub use self::__UIKeyConstants::UIKeyboardHIDUsage;
#[cfg(all(
    feature = "UIKeyboardLayoutGuide",
    feature = "UILayoutGuide",
    feature = "UITrackingLayoutGuide"
))]
pub use self::__UIKeyboardLayoutGuide::UIKeyboardLayoutGuide;
#[cfg(all(feature = "UILabel", feature = "UIResponder", feature = "UIView"))]
pub use self::__UILabel::UILabel;
#[cfg(feature = "UILabel")]
pub use self::__UILabel::UILabelVibrancy;
#[cfg(feature = "UILargeContentViewer")]
pub use self::__UILargeContentViewer::UILargeContentViewerInteraction;
#[cfg(feature = "UILargeContentViewer")]
pub use self::__UILargeContentViewer::UILargeContentViewerInteractionDelegate;
#[cfg(feature = "UILargeContentViewer")]
pub use self::__UILargeContentViewer::UILargeContentViewerInteractionEnabledStatusDidChangeNotification;
#[cfg(feature = "UILargeContentViewer")]
pub use self::__UILargeContentViewer::UILargeContentViewerItem;
#[cfg(feature = "UILayoutGuide")]
pub use self::__UILayoutGuide::UILayoutGuide;
#[cfg(feature = "UILetterformAwareAdjusting")]
pub use self::__UILetterformAwareAdjusting::UILetterformAwareAdjusting;
#[cfg(feature = "UILetterformAwareAdjusting")]
pub use self::__UILetterformAwareAdjusting::UILetterformAwareSizingRule;
#[cfg(feature = "UILexicon")]
pub use self::__UILexicon::UILexicon;
#[cfg(feature = "UILexicon")]
pub use self::__UILexicon::UILexiconEntry;
#[cfg(feature = "UIListContentConfiguration")]
pub use self::__UIListContentConfiguration::UIListContentConfiguration;
#[cfg(all(
    feature = "UIListContentConfiguration",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIListContentConfiguration::UIListContentView;
#[cfg(feature = "UIListContentImageProperties")]
pub use self::__UIListContentImageProperties::UIListContentImageProperties;
#[cfg(feature = "UIListContentImageProperties")]
pub use self::__UIListContentImageProperties::UIListContentImageStandardDimension;
#[cfg(feature = "UIListContentTextProperties")]
pub use self::__UIListContentTextProperties::UIListContentTextAlignment;
#[cfg(feature = "UIListContentTextProperties")]
pub use self::__UIListContentTextProperties::UIListContentTextProperties;
#[cfg(feature = "UIListContentTextProperties")]
pub use self::__UIListContentTextProperties::UIListContentTextTransform;
#[cfg(all(feature = "UIGeometry", feature = "UIListSeparatorConfiguration"))]
pub use self::__UIListSeparatorConfiguration::UIListSeparatorAutomaticInsets;
#[cfg(feature = "UIListSeparatorConfiguration")]
pub use self::__UIListSeparatorConfiguration::UIListSeparatorConfiguration;
#[cfg(feature = "UIListSeparatorConfiguration")]
pub use self::__UIListSeparatorConfiguration::UIListSeparatorVisibility;
#[cfg(feature = "UILocalNotification")]
pub use self::__UILocalNotification::UILocalNotification;
#[cfg(feature = "UILocalNotification")]
pub use self::__UILocalNotification::UILocalNotificationDefaultSoundName;
#[cfg(feature = "UILocalizedIndexedCollation")]
pub use self::__UILocalizedIndexedCollation::UILocalizedIndexedCollation;
#[cfg(all(
    feature = "UIGestureRecognizer",
    feature = "UILongPressGestureRecognizer"
))]
pub use self::__UILongPressGestureRecognizer::UILongPressGestureRecognizer;
#[cfg(all(feature = "UIDocument", feature = "UIManagedDocument"))]
pub use self::__UIManagedDocument::UIManagedDocument;
#[cfg(all(feature = "UIMenu", feature = "UIMenuElement"))]
pub use self::__UIMenu::UIMenu;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuAbout;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuAlignment;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuApplication;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuAutoFill;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuBringAllToFront;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuClose;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuDocument;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuEdit;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuElementSize;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuFile;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuFind;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuFont;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuFormat;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuFullscreen;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuHelp;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuHide;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuIdentifier;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuLearn;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuLookup;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuMinimizeAndZoom;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuNewScene;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuOpenRecent;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuOptions;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuPreferences;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuPrint;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuQuit;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuReplace;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuRoot;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuServices;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuShare;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSidebar;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSpeech;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSpelling;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSpellingOptions;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSpellingPanel;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuStandardEdit;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSubstitutionOptions;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSubstitutions;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuSubstitutionsPanel;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuText;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuTextColor;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuTextSize;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuTextStyle;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuTextStylePasteboard;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuToolbar;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuTransformations;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuUndoRedo;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuView;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuWindow;
#[cfg(feature = "UIMenu")]
pub use self::__UIMenu::UIMenuWritingDirection;
#[cfg(feature = "UIMenuBuilder")]
pub use self::__UIMenuBuilder::UIMenuBuilder;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuController;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerArrowDirection;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerDidHideMenuNotification;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerDidShowMenuNotification;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerMenuFrameDidChangeNotification;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerWillHideMenuNotification;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuControllerWillShowMenuNotification;
#[cfg(feature = "UIMenuController")]
pub use self::__UIMenuController::UIMenuItem;
#[cfg(feature = "UIMenuDisplayPreferences")]
pub use self::__UIMenuDisplayPreferences::UIMenuDisplayPreferences;
#[cfg(feature = "UIMenuElement")]
pub use self::__UIMenuElement::UIMenuElement;
#[cfg(feature = "UIMenuElement")]
pub use self::__UIMenuElement::UIMenuElementAttributes;
#[cfg(feature = "UIMenuElement")]
pub use self::__UIMenuElement::UIMenuElementState;
#[cfg(feature = "UIMenuLeaf")]
pub use self::__UIMenuLeaf::UIMenuLeaf;
#[cfg(feature = "UIMenuSystem")]
pub use self::__UIMenuSystem::UIMenuSystem;
#[cfg(feature = "UIMotionEffect")]
pub use self::__UIMotionEffect::UIInterpolatingMotionEffect;
#[cfg(feature = "UIMotionEffect")]
pub use self::__UIMotionEffect::UIInterpolatingMotionEffectType;
#[cfg(feature = "UIMotionEffect")]
pub use self::__UIMotionEffect::UIMotionEffect;
#[cfg(feature = "UIMotionEffect")]
pub use self::__UIMotionEffect::UIMotionEffectGroup;
#[cfg(all(
    feature = "UINavigationBar",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UINavigationBar::UINavigationBar;
#[cfg(all(feature = "UIBarCommon", feature = "UINavigationBar"))]
pub use self::__UINavigationBar::UINavigationBarDelegate;
#[cfg(feature = "UINavigationBar")]
pub use self::__UINavigationBar::UINavigationBarNSToolbarSection;
#[cfg(all(feature = "UIBarAppearance", feature = "UINavigationBarAppearance"))]
pub use self::__UINavigationBarAppearance::UINavigationBarAppearance;
#[cfg(all(
    feature = "UINavigationController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UINavigationController::UINavigationController;
#[cfg(feature = "UINavigationController")]
pub use self::__UINavigationController::UINavigationControllerDelegate;
#[cfg(feature = "UINavigationController")]
pub use self::__UINavigationController::UINavigationControllerHideShowBarDuration;
#[cfg(feature = "UINavigationController")]
pub use self::__UINavigationController::UINavigationControllerOperation;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItem;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItemBackButtonDisplayMode;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItemLargeTitleDisplayMode;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItemRenameDelegate;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItemSearchBarPlacement;
#[cfg(feature = "UINavigationItem")]
pub use self::__UINavigationItem::UINavigationItemStyle;
#[cfg(feature = "UINib")]
pub use self::__UINib::UINib;
#[cfg(feature = "UINibLoading")]
pub use self::__UINibLoading::UINibExternalObjects;
#[cfg(feature = "UINibLoading")]
pub use self::__UINibLoading::UINibOptionsKey;
#[cfg(feature = "UINibLoading")]
pub use self::__UINibLoading::UINibProxiedObjectsKey;
#[cfg(all(
    feature = "UIFeedbackGenerator",
    feature = "UINotificationFeedbackGenerator"
))]
pub use self::__UINotificationFeedbackGenerator::UINotificationFeedbackGenerator;
#[cfg(feature = "UINotificationFeedbackGenerator")]
pub use self::__UINotificationFeedbackGenerator::UINotificationFeedbackType;
#[cfg(feature = "UIOpenURLContext")]
pub use self::__UIOpenURLContext::UIOpenURLContext;
#[cfg(feature = "UIOrientation")]
pub use self::__UIOrientation::UIDeviceOrientation;
#[cfg(feature = "UIOrientation")]
pub use self::__UIOrientation::UIInterfaceOrientation;
#[cfg(feature = "UIOrientation")]
pub use self::__UIOrientation::UIInterfaceOrientationMask;
#[cfg(all(
    feature = "UIControl",
    feature = "UIPageControl",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIPageControl::UIPageControl;
#[cfg(feature = "UIPageControl")]
pub use self::__UIPageControl::UIPageControlBackgroundStyle;
#[cfg(feature = "UIPageControl")]
pub use self::__UIPageControl::UIPageControlDirection;
#[cfg(feature = "UIPageControl")]
pub use self::__UIPageControl::UIPageControlInteractionState;
#[cfg(feature = "UIPageControlProgress")]
pub use self::__UIPageControlProgress::UIPageControlProgress;
#[cfg(feature = "UIPageControlProgress")]
pub use self::__UIPageControlProgress::UIPageControlProgressDelegate;
#[cfg(feature = "UIPageControlProgress")]
pub use self::__UIPageControlProgress::UIPageControlTimerProgress;
#[cfg(feature = "UIPageControlProgress")]
pub use self::__UIPageControlProgress::UIPageControlTimerProgressDelegate;
#[cfg(all(
    feature = "UIPageViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIPageViewController::UIPageViewController;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerDataSource;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerDelegate;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerNavigationDirection;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerNavigationOrientation;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerOptionInterPageSpacingKey;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerOptionSpineLocationKey;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerOptionsKey;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerSpineLocation;
#[cfg(feature = "UIPageViewController")]
pub use self::__UIPageViewController::UIPageViewControllerTransitionStyle;
#[cfg(all(feature = "UIGestureRecognizer", feature = "UIPanGestureRecognizer"))]
pub use self::__UIPanGestureRecognizer::UIPanGestureRecognizer;
#[cfg(feature = "UIPanGestureRecognizer")]
pub use self::__UIPanGestureRecognizer::UIScrollType;
#[cfg(feature = "UIPanGestureRecognizer")]
pub use self::__UIPanGestureRecognizer::UIScrollTypeMask;
#[cfg(feature = "UIPasteConfiguration")]
pub use self::__UIPasteConfiguration::UIPasteConfiguration;
#[cfg(feature = "UIPasteConfigurationSupporting")]
pub use self::__UIPasteConfigurationSupporting::UIPasteConfigurationSupporting;
#[cfg(all(
    feature = "UIControl",
    feature = "UIPasteControl",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIPasteControl::UIPasteControl;
#[cfg(feature = "UIPasteControl")]
pub use self::__UIPasteControl::UIPasteControlConfiguration;
#[cfg(feature = "UIPasteControl")]
pub use self::__UIPasteControl::UIPasteControlDisplayMode;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboard;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardChangedNotification;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardChangedTypesAddedKey;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardChangedTypesRemovedKey;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPattern;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternCalendarEvent;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternEmailAddress;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternFlightNumber;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternLink;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternMoneyAmount;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternNumber;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternPhoneNumber;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternPostalAddress;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternProbableWebSearch;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternProbableWebURL;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardDetectionPatternShipmentTrackingNumber;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardName;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardNameFind;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardNameGeneral;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardOption;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardOptionExpirationDate;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardOptionLocalOnly;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardRemovedNotification;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardTypeAutomatic;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardTypeListColor;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardTypeListImage;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardTypeListString;
#[cfg(feature = "UIPasteboard")]
pub use self::__UIPasteboard::UIPasteboardTypeListURL;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilHoverPose;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilInteraction;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilInteractionDelegate;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilInteractionPhase;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilInteractionSqueeze;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilInteractionTap;
#[cfg(feature = "UIPencilInteraction")]
pub use self::__UIPencilInteraction::UIPencilPreferredAction;
#[cfg(all(feature = "UIPickerView", feature = "UIResponder", feature = "UIView"))]
pub use self::__UIPickerView::UIPickerView;
#[cfg(feature = "UIPickerView")]
pub use self::__UIPickerView::UIPickerViewDataSource;
#[cfg(feature = "UIPickerView")]
pub use self::__UIPickerView::UIPickerViewDelegate;
#[cfg(all(feature = "UIGestureRecognizer", feature = "UIPinchGestureRecognizer"))]
pub use self::__UIPinchGestureRecognizer::UIPinchGestureRecognizer;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessory;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPosition;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionBottom;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionBottomLeft;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionBottomRight;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionLeft;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionRight;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionTop;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionTopLeft;
#[cfg(feature = "UIPointerAccessory")]
pub use self::__UIPointerAccessory::UIPointerAccessoryPositionTopRight;
#[cfg(feature = "UIPointerInteraction")]
pub use self::__UIPointerInteraction::UIPointerInteraction;
#[cfg(feature = "UIPointerInteraction")]
pub use self::__UIPointerInteraction::UIPointerInteractionAnimating;
#[cfg(feature = "UIPointerInteraction")]
pub use self::__UIPointerInteraction::UIPointerInteractionDelegate;
#[cfg(feature = "UIPointerInteraction")]
pub use self::__UIPointerInteraction::UIPointerRegionRequest;
#[cfg(feature = "UIPointerLockState")]
pub use self::__UIPointerLockState::UIPointerLockState;
#[cfg(feature = "UIPointerLockState")]
pub use self::__UIPointerLockState::UIPointerLockStateDidChangeNotification;
#[cfg(feature = "UIPointerLockState")]
pub use self::__UIPointerLockState::UIPointerLockStateSceneUserInfoKey;
#[cfg(feature = "UIPointerRegion")]
pub use self::__UIPointerRegion::UIPointerRegion;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerEffect;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerEffectTintMode;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerHighlightEffect;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerHoverEffect;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerLiftEffect;
#[cfg(feature = "UIPointerStyle")]
pub use self::__UIPointerStyle::UIPointerShape;
#[cfg(all(feature = "UIHoverStyle", feature = "UIPointerStyle"))]
pub use self::__UIPointerStyle::UIPointerStyle;
#[cfg(all(
    feature = "UIPopoverBackgroundView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIPopoverBackgroundView::UIPopoverBackgroundView;
#[cfg(feature = "UIPopoverBackgroundView")]
pub use self::__UIPopoverBackgroundView::UIPopoverBackgroundViewMethods;
#[cfg(feature = "UIPopoverController")]
pub use self::__UIPopoverController::UIPopoverController;
#[cfg(feature = "UIPopoverController")]
pub use self::__UIPopoverController::UIPopoverControllerDelegate;
#[cfg(all(
    feature = "UIPopoverPresentationController",
    feature = "UIPresentationController"
))]
pub use self::__UIPopoverPresentationController::UIPopoverPresentationController;
#[cfg(all(
    feature = "UIPopoverPresentationController",
    feature = "UIPresentationController"
))]
pub use self::__UIPopoverPresentationController::UIPopoverPresentationControllerDelegate;
#[cfg(feature = "UIPopoverPresentationControllerSourceItem")]
pub use self::__UIPopoverPresentationControllerSourceItem::UIPopoverPresentationControllerSourceItem;
#[cfg(feature = "UIPopoverSupport")]
pub use self::__UIPopoverSupport::UIPopoverArrowDirection;
#[cfg(feature = "UIPresentationController")]
pub use self::__UIPresentationController::UIAdaptivePresentationControllerDelegate;
#[cfg(feature = "UIPresentationController")]
pub use self::__UIPresentationController::UIPresentationController;
#[cfg(feature = "UIPress")]
pub use self::__UIPress::UIPress;
#[cfg(feature = "UIPress")]
pub use self::__UIPress::UIPressPhase;
#[cfg(feature = "UIPress")]
pub use self::__UIPress::UIPressType;
#[cfg(all(feature = "UIEvent", feature = "UIPressesEvent"))]
pub use self::__UIPressesEvent::UIPressesEvent;
#[cfg(feature = "UIPreviewInteraction")]
pub use self::__UIPreviewInteraction::UIPreviewInteraction;
#[cfg(feature = "UIPreviewInteraction")]
pub use self::__UIPreviewInteraction::UIPreviewInteractionDelegate;
#[cfg(feature = "UIPreviewParameters")]
pub use self::__UIPreviewParameters::UIPreviewParameters;
#[cfg(feature = "UIPrintError")]
pub use self::__UIPrintError::UIPrintErrorCode;
#[cfg(feature = "UIPrintError")]
pub use self::__UIPrintError::UIPrintErrorDomain;
#[cfg(feature = "UIPrintFormatter")]
pub use self::__UIPrintFormatter::UIMarkupTextPrintFormatter;
#[cfg(feature = "UIPrintFormatter")]
pub use self::__UIPrintFormatter::UIPrintFormatter;
#[cfg(feature = "UIPrintFormatter")]
pub use self::__UIPrintFormatter::UISimpleTextPrintFormatter;
#[cfg(feature = "UIPrintFormatter")]
pub use self::__UIPrintFormatter::UIViewPrintFormatter;
#[cfg(feature = "UIPrintInfo")]
pub use self::__UIPrintInfo::UIPrintInfo;
#[cfg(feature = "UIPrintInfo")]
pub use self::__UIPrintInfo::UIPrintInfoDuplex;
#[cfg(feature = "UIPrintInfo")]
pub use self::__UIPrintInfo::UIPrintInfoOrientation;
#[cfg(feature = "UIPrintInfo")]
pub use self::__UIPrintInfo::UIPrintInfoOutputType;
#[cfg(all(feature = "UIPrintInteractionController", feature = "block2"))]
pub use self::__UIPrintInteractionController::UIPrintInteractionCompletionHandler;
#[cfg(feature = "UIPrintInteractionController")]
pub use self::__UIPrintInteractionController::UIPrintInteractionController;
#[cfg(feature = "UIPrintInteractionController")]
pub use self::__UIPrintInteractionController::UIPrintInteractionControllerDelegate;
#[cfg(feature = "UIPrintInteractionController")]
pub use self::__UIPrintInteractionController::UIPrinterCutterBehavior;
#[cfg(feature = "UIPrintPageRenderer")]
pub use self::__UIPrintPageRenderer::UIPrintPageRenderer;
#[cfg(feature = "UIPrintPageRenderer")]
pub use self::__UIPrintPageRenderer::UIPrintRenderingQuality;
#[cfg(feature = "UIPrintPaper")]
pub use self::__UIPrintPaper::UIPrintPaper;
#[cfg(feature = "UIPrintServiceExtension")]
pub use self::__UIPrintServiceExtension::UIPrintServiceExtension;
#[cfg(feature = "UIPrintServiceExtension")]
pub use self::__UIPrintServiceExtension::UIPrinterDestination;
#[cfg(feature = "UIPrinter")]
pub use self::__UIPrinter::UIPrinter;
#[cfg(feature = "UIPrinter")]
pub use self::__UIPrinter::UIPrinterJobTypes;
#[cfg(all(feature = "UIPrinterPickerController", feature = "block2"))]
pub use self::__UIPrinterPickerController::UIPrinterPickerCompletionHandler;
#[cfg(feature = "UIPrinterPickerController")]
pub use self::__UIPrinterPickerController::UIPrinterPickerController;
#[cfg(feature = "UIPrinterPickerController")]
pub use self::__UIPrinterPickerController::UIPrinterPickerControllerDelegate;
#[cfg(all(
    feature = "UIProgressView",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIProgressView::UIProgressView;
#[cfg(feature = "UIProgressView")]
pub use self::__UIProgressView::UIProgressViewStyle;
#[cfg(all(feature = "UIDynamicBehavior", feature = "UIPushBehavior"))]
pub use self::__UIPushBehavior::UIPushBehavior;
#[cfg(feature = "UIPushBehavior")]
pub use self::__UIPushBehavior::UIPushBehaviorMode;
#[cfg(all(
    feature = "UIReferenceLibraryViewController",
    feature = "UIResponder",
    feature = "UIViewController"
))]
pub use self::__UIReferenceLibraryViewController::UIReferenceLibraryViewController;
#[cfg(all(
    feature = "UIControl",
    feature = "UIRefreshControl",
    feature = "UIResponder",
    feature = "UIView"
))]
pub use self::__UIRefreshControl::UIRefreshControl;
#[cfg(feature = "UIRegion")]
pub use self::__UIRegion::UIRegion;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIEditingInteractionConfiguration;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputDelete;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputDownArrow;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputEnd;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputEscape;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF10;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF11;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF12;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF2;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF3;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF4;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF5;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF6;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF7;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF8;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputF9;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputHome;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputLeftArrow;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputPageDown;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputPageUp;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputRightArrow;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIKeyInputUpArrow;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIResponder;
#[cfg(feature = "UIResponder")]
pub use self::__UIResponder::UIResponderStandardEditActions;
#[cfg(all(feature = "UIResponder", feature = "block2"))]
pub use self::__UIResponder::UITextAttributesConversionHandler;
#[cfg(all(
    feature = "UIGestureRecognizer",
    feature = "UIRotationGestureRecognizer"
))]
pub use self::__UIRotationGestureRecognizer::UIRotationGestureRecognizer;
#[cfg(all(feature = "UIResponder", feature = "UIScene"))]
pub use self::__UIScene::UIScene;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneDelegate;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneDidActivateNotification;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneDidDisconnectNotification;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneDidEnterBackgroundNotification;
#[cfg(all(feature = "UIScene", feature = "UISceneDefinitions"))]
pub use self::__UIScene::UISceneSessionRoleImmersiveSpaceApplication;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneWillConnectNotification;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneWillDeactivateNotification;
#[cfg(feature = "UIScene")]
pub use self::__UIScene::UISceneWillEnterForegroundNotification;
#[cfg(feature = "UISceneActivationConditions")]
pub use self::__UISceneActivationConditions::NSUserActivityUISceneActivationConditions;
#[cfg(feature = "UISceneActivationConditions")]
pub use self::__UISceneActivationConditions::UISceneActivationConditions;
#[cfg(feature = "UISceneDefinitions")]
pub use self::__UISceneDefinitions::UISceneActivationState;
#[cfg(feature = "UISceneDefinitions")]
pub use self::__UISceneDefinitions::UISceneCaptureState;
#[cfg(feature = "UISceneDefinitions")]
pub use self::__UISceneDefinitions::UISceneErrorCode;
#[cfg(feature = "UISceneDefinitions")]
pub use self::__UISceneDefinitions::UISceneErrorDomain;
#[cfg(feature = "UISceneDefinitions")]
pub use self::__UISceneDefinitions::UISceneSessionRole;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneActivationRequestOptions;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneCollectionJoinBehavior;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneConnectionOptions;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneDestructionRequestOptions;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneOpenExternalURLOptions;
#[cfg(feature = "UISceneOptions")]
pub use self::__UISceneOptions::UISceneOpenURLOptions;
#[cfg(feature = "UISceneSession")]
pub use self::__UISceneSession::UISceneConfiguration;
#[cfg(feature = "UISceneSession")]
pub use self::__UISceneSession::UISceneSession;
#[cfg(feature = "UISceneSessionActivationRequest")]
pub use self::__UISceneSessionActivationRequest::UISceneSessionActivationRequest;
#[cfg(feature = "UISceneWindowingBehaviors")]
pub use self::__UISceneWindowingBehaviors::UISceneWindowingBehaviors;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreen;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenBrightnessDidChangeNotification;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenCapturedDidChangeNotification;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenDidConnectNotification;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenDidDisconnectNotification;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenModeDidChangeNotification;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenOverscanCompensation;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenReferenceDisplayModeStatus;
#[cfg(feature = "UIScreen")]
pub use self::__UIScreen::UIScreenReferenceDisplayModeStatusDidChangeNotification;
#[cfg(all(
    feature = "UIGestureRecognizer",
    feature = "UIPanGestureRecognizer",
    feature = "UIScreenEdgePanGestureRecognizer"
))]
pub use self::__UIScreenEdgePanGestureRecognizer::UIScreenEdgePanGestureRecognizer;
#[cfg(feature = "UIScreenMode")]
pub use self::__UIScreenMode::UIScreenMode;
#[cfg(feature = "UIScreenshotService")]
pub use self::__UIScreenshotService::UIScreenshotService;
#[cfg(feature = "UIScreenshotService")]
pub use self::__UIScreenshotService::UIScreenshotServiceDelegate;
#[cfg(feature = "UIScribbleInteraction")]
pub use self::__UIScribbleInteraction::UIScribbleInteraction;
#[cfg(feature = "UIScribbleInteraction")]
pub use self::__UIScribbleInteraction::UIScribbleInteractionDelegate;
#[cfg(all(feature = "UIResponder", feature = "UIScrollView", feature = "UIView"))]
pub use self::__UIScrollView::UIScrollView;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewContentInsetAdjustmentBehavior;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewDecelerationRate;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewDecelerationRateFast;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewDecelerationRateNormal;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewDelegate;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewIndexDisplayMode;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewIndicatorStyle;
#[cfg(feature = "UIScrollView")]
pub use self::__UIScrollView::UIScrollViewKeyboardDismissMode;
#[cfg(feature = "UISearchBar")]
pub use self::__UISearchBar::UILookToDictateCapable;
#[cfg(all(feature = "UIResponder", feature = "UISearchBar", feature = "UIView"))]
pub use self::__UISearchBar::UISearchBar;
#[cfg(all(feature = "UIBarCommon", feature = "UISearchBar"))]
pub use self::__UISearchBar::UISearchBarDelegate;
#[cfg(feature = "UISearchBar")]
pub use self::__UISearchBar::UISearchBarIcon;
#[cfg(feature = "UISearchBar")]
pub use self::__UISearchBar::UISearchBarStyle;
#[cfg(all(
    feature = "UIResponder",
    feature = "UISearchContainerViewController",
    feature = "UIViewController"
))]
pub use self::__UISearchContainerViewController::UISearchContainerViewController;
#[cfg(all(
    feature = "UIResponder",
    feature = "UISearchController",
    feature = "UIViewController"
))]
pub use self::__UISearchController::UISearchController;
#[cfg(feature = "UISearchController")]
pub use self::__UISearchController::UISearchControllerDelegate;
#[cfg(feature = "UISearchController")]
pub use self::__UISearchController::UISearchControllerScopeBarActivation;
#[cfg(feature = "UISearchController")]
pub use self::__UISearchController::UISearchResultsUpdating;
#[cfg(feature = "UISearchDisplayController")]
pub use self::__UISearchDisplayController::UISearchDisplayController;
#[cfg(feature = "UISearchDisplayController")]
pub use self::__UISearchDisplayController::UISearchDisplayDelegate;
#[cfg(feature = "UISearchSuggestion")]
pub use self::__UISearchSuggestion::UISearchSuggestion;
#[cfg(feature = "UISearchSuggestion")]
pub use self::__UISearchSuggestion::UISearchSuggestionItem;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UISearchTextField",
    feature = "UITextField",
    feature = "UIView"
))]
pub use self::__UISearchTextField::UISearchTextField;
#[cfg(all(feature = "UISearchTextField", feature = "UITextField"))]
pub use self::__UISearchTextField::UISearchTextFieldDelegate;
#[cfg(all(feature = "UISearchTextField", feature = "UITextPasteDelegate"))]
pub use self::__UISearchTextField::UISearchTextFieldPasteItem;
#[cfg(feature = "UISearchTextField")]
pub use self::__UISearchTextField::UISearchToken;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UISegmentedControl",
    feature = "UIView"
))]
pub use self::__UISegmentedControl::UISegmentedControl;
#[cfg(feature = "UISegmentedControl")]
pub use self::__UISegmentedControl::UISegmentedControlNoSegment;
#[cfg(feature = "UISegmentedControl")]
pub use self::__UISegmentedControl::UISegmentedControlSegment;
#[cfg(feature = "UISegmentedControl")]
pub use self::__UISegmentedControl::UISegmentedControlStyle;
#[cfg(all(
    feature = "UIFeedbackGenerator",
    feature = "UISelectionFeedbackGenerator"
))]
pub use self::__UISelectionFeedbackGenerator::UISelectionFeedbackGenerator;
#[cfg(feature = "UIShape")]
pub use self::__UIShape::UICornerCurve;
#[cfg(feature = "UIShape")]
pub use self::__UIShape::UIResolvedShape;
#[cfg(feature = "UIShape")]
pub use self::__UIShape::UIShape;
#[cfg(feature = "UIShape")]
pub use self::__UIShape::UIShapeProvider;
#[cfg(feature = "UIShape")]
pub use self::__UIShape::UIShapeResolutionContext;
#[cfg(all(
    feature = "UIPresentationController",
    feature = "UISheetPresentationController"
))]
pub use self::__UISheetPresentationController::UISheetPresentationController;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerAutomaticDimension;
#[cfg(all(
    feature = "UIPresentationController",
    feature = "UISheetPresentationController"
))]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDelegate;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetent;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetentIdentifier;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetentIdentifierLarge;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetentIdentifierMedium;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetentInactive;
#[cfg(feature = "UISheetPresentationController")]
pub use self::__UISheetPresentationController::UISheetPresentationControllerDetentResolutionContext;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UISlider",
    feature = "UIView"
))]
pub use self::__UISlider::UISlider;
#[cfg(all(feature = "UIDynamicBehavior", feature = "UISnapBehavior"))]
pub use self::__UISnapBehavior::UISnapBehavior;
#[cfg(all(
    feature = "UIResponder",
    feature = "UISplitViewController",
    feature = "UIViewController"
))]
pub use self::__UISplitViewController::UISplitViewController;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerAutomaticDimension;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerBackgroundStyle;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerColumn;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerDelegate;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerDisplayMode;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerDisplayModeButtonVisibility;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerPrimaryEdge;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerSplitBehavior;
#[cfg(feature = "UISplitViewController")]
pub use self::__UISplitViewController::UISplitViewControllerStyle;
#[cfg(feature = "UISpringLoadedInteraction")]
pub use self::__UISpringLoadedInteraction::UISpringLoadedInteraction;
#[cfg(feature = "UISpringLoadedInteraction")]
pub use self::__UISpringLoadedInteraction::UISpringLoadedInteractionBehavior;
#[cfg(feature = "UISpringLoadedInteraction")]
pub use self::__UISpringLoadedInteraction::UISpringLoadedInteractionContext;
#[cfg(feature = "UISpringLoadedInteraction")]
pub use self::__UISpringLoadedInteraction::UISpringLoadedInteractionEffect;
#[cfg(feature = "UISpringLoadedInteraction")]
pub use self::__UISpringLoadedInteraction::UISpringLoadedInteractionEffectState;
#[cfg(feature = "UISpringLoadedInteractionSupporting")]
pub use self::__UISpringLoadedInteractionSupporting::UISpringLoadedInteractionSupporting;
#[cfg(all(feature = "UIResponder", feature = "UIStackView", feature = "UIView"))]
pub use self::__UIStackView::UIStackView;
#[cfg(feature = "UIStackView")]
pub use self::__UIStackView::UIStackViewAlignment;
#[cfg(feature = "UIStackView")]
pub use self::__UIStackView::UIStackViewDistribution;
#[cfg(feature = "UIStackView")]
pub use self::__UIStackView::UIStackViewSpacingUseDefault;
#[cfg(feature = "UIStackView")]
pub use self::__UIStackView::UIStackViewSpacingUseSystem;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIStandardTextCursorView",
    feature = "UIView"
))]
pub use self::__UIStandardTextCursorView::UIStandardTextCursorView;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIApplicationStateRestorationBundleVersionKey;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIApplicationStateRestorationSystemVersionKey;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIApplicationStateRestorationTimestampKey;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIApplicationStateRestorationUserInterfaceIdiomKey;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIDataSourceModelAssociation;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIObjectRestoration;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIStateRestorationViewControllerStoryboardKey;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIStateRestoring;
#[cfg(feature = "UIStateRestoration")]
pub use self::__UIStateRestoration::UIViewControllerRestoration;
#[cfg(feature = "UIStatusBarManager")]
pub use self::__UIStatusBarManager::UIStatusBarManager;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UIStepper",
    feature = "UIView"
))]
pub use self::__UIStepper::UIStepper;
#[cfg(feature = "UIStoryboard")]
pub use self::__UIStoryboard::UIStoryboard;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIStoryboard",
    feature = "UIViewController",
    feature = "block2"
))]
pub use self::__UIStoryboard::UIStoryboardViewControllerCreator;
#[cfg(all(feature = "UIStoryboardPopoverSegue", feature = "UIStoryboardSegue"))]
pub use self::__UIStoryboardPopoverSegue::UIStoryboardPopoverSegue;
#[cfg(feature = "UIStoryboardSegue")]
pub use self::__UIStoryboardSegue::UIStoryboardSegue;
#[cfg(feature = "UIStoryboardSegue")]
pub use self::__UIStoryboardSegue::UIStoryboardUnwindSegueSource;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UIBaselineAdjustment;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UILineBreakMode;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UITextAlignment;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UITextAttributeFont;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UITextAttributeTextColor;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UITextAttributeTextShadowColor;
#[cfg(feature = "UIStringDrawing")]
pub use self::__UIStringDrawing::UITextAttributeTextShadowOffset;
#[cfg(feature = "UISwipeActionsConfiguration")]
pub use self::__UISwipeActionsConfiguration::UISwipeActionsConfiguration;
#[cfg(all(feature = "UIGestureRecognizer", feature = "UISwipeGestureRecognizer"))]
pub use self::__UISwipeGestureRecognizer::UISwipeGestureRecognizer;
#[cfg(feature = "UISwipeGestureRecognizer")]
pub use self::__UISwipeGestureRecognizer::UISwipeGestureRecognizerDirection;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UISwitch",
    feature = "UIView"
))]
pub use self::__UISwitch::UISwitch;
#[cfg(feature = "UISwitch")]
pub use self::__UISwitch::UISwitchStyle;
#[cfg(all(feature = "UISymbolEffectCompletion", feature = "block2"))]
pub use self::__UISymbolEffectCompletion::UISymbolEffectCompletion;
#[cfg(feature = "UISymbolEffectCompletion")]
pub use self::__UISymbolEffectCompletion::UISymbolEffectCompletionContext;
#[cfg(all(feature = "UIResponder", feature = "UITabBar", feature = "UIView"))]
pub use self::__UITabBar::UITabBar;
#[cfg(feature = "UITabBar")]
pub use self::__UITabBar::UITabBarDelegate;
#[cfg(feature = "UITabBar")]
pub use self::__UITabBar::UITabBarItemPositioning;
#[cfg(all(feature = "UIBarAppearance", feature = "UITabBarAppearance"))]
pub use self::__UITabBarAppearance::UITabBarAppearance;
#[cfg(feature = "UITabBarAppearance")]
pub use self::__UITabBarAppearance::UITabBarItemAppearance;
#[cfg(feature = "UITabBarAppearance")]
pub use self::__UITabBarAppearance::UITabBarItemAppearanceStyle;
#[cfg(feature = "UITabBarAppearance")]
pub use self::__UITabBarAppearance::UITabBarItemStateAppearance;
#[cfg(all(
    feature = "UIResponder",
    feature = "UITabBarController",
    feature = "UIViewController"
))]
pub use self::__UITabBarController::UITabBarController;
#[cfg(feature = "UITabBarController")]
pub use self::__UITabBarController::UITabBarControllerDelegate;
#[cfg(all(feature = "UIBarItem", feature = "UITabBarItem"))]
pub use self::__UITabBarItem::UITabBarItem;
#[cfg(feature = "UITabBarItem")]
pub use self::__UITabBarItem::UITabBarSystemItem;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UITableView",
    feature = "UIView"
))]
pub use self::__UITableView::UITableView;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewAutomaticDimension;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDataSource;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDataSourcePrefetching;
#[cfg(all(feature = "UIScrollView", feature = "UITableView"))]
pub use self::__UITableView::UITableViewDelegate;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDragDelegate;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDropCoordinator;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDropDelegate;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDropIntent;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDropItem;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewDropPlaceholder;
#[cfg(all(feature = "UIDragInteraction", feature = "UITableView"))]
pub use self::__UITableView::UITableViewDropPlaceholderContext;
#[cfg(all(feature = "UIDropInteraction", feature = "UITableView"))]
pub use self::__UITableView::UITableViewDropProposal;
#[cfg(all(feature = "UIFocus", feature = "UITableView"))]
pub use self::__UITableView::UITableViewFocusUpdateContext;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewIndexSearch;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewPlaceholder;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewRowAction;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewRowActionStyle;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewRowAnimation;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewScrollPosition;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewSelectionDidChangeNotification;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewSelfSizingInvalidation;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewSeparatorInsetReference;
#[cfg(feature = "UITableView")]
pub use self::__UITableView::UITableViewStyle;
#[cfg(all(
    feature = "UIResponder",
    feature = "UITableViewCell",
    feature = "UIView"
))]
pub use self::__UITableViewCell::UITableViewCell;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellAccessoryType;
#[cfg(all(
    feature = "UICellConfigurationState",
    feature = "UIResponder",
    feature = "UITableViewCell",
    feature = "UIView",
    feature = "UIViewConfigurationState",
    feature = "block2"
))]
pub use self::__UITableViewCell::UITableViewCellConfigurationUpdateHandler;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellDragState;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellEditingStyle;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellFocusStyle;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellSelectionStyle;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellSeparatorStyle;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellStateMask;
#[cfg(feature = "UITableViewCell")]
pub use self::__UITableViewCell::UITableViewCellStyle;
#[cfg(all(
    feature = "UIResponder",
    feature = "UITableViewController",
    feature = "UIViewController"
))]
pub use self::__UITableViewController::UITableViewController;
#[cfg(all(
    feature = "UIResponder",
    feature = "UITableViewHeaderFooterView",
    feature = "UIView"
))]
pub use self::__UITableViewHeaderFooterView::UITableViewHeaderFooterView;
#[cfg(all(
    feature = "UIResponder",
    feature = "UITableViewHeaderFooterView",
    feature = "UIView",
    feature = "UIViewConfigurationState",
    feature = "block2"
))]
pub use self::__UITableViewHeaderFooterView::UITableViewHeaderFooterViewConfigurationUpdateHandler;
#[cfg(all(feature = "UIGestureRecognizer", feature = "UITapGestureRecognizer"))]
pub use self::__UITapGestureRecognizer::UITapGestureRecognizer;
#[cfg(all(feature = "UITargetedDragPreview", feature = "UITargetedPreview"))]
pub use self::__UITargetedDragPreview::UIDragPreviewTarget;
#[cfg(all(feature = "UITargetedDragPreview", feature = "UITargetedPreview"))]
pub use self::__UITargetedDragPreview::UITargetedDragPreview;
#[cfg(feature = "UITargetedPreview")]
pub use self::__UITargetedPreview::UIPreviewTarget;
#[cfg(feature = "UITargetedPreview")]
pub use self::__UITargetedPreview::UITargetedPreview;
#[cfg(feature = "UITextChecker")]
pub use self::__UITextChecker::UITextChecker;
#[cfg(feature = "UITextCursorDropPositionAnimator")]
pub use self::__UITextCursorDropPositionAnimator::UITextCursorDropPositionAnimator;
#[cfg(all(feature = "UITextCursorView", feature = "UIView"))]
pub use self::__UITextCursorView::UITextCursorView;
#[cfg(feature = "UITextDragPreviewRenderer")]
pub use self::__UITextDragPreviewRenderer::UITextDragPreviewRenderer;
#[cfg(feature = "UITextDragging")]
pub use self::__UITextDragging::UITextDragDelegate;
#[cfg(feature = "UITextDragging")]
pub use self::__UITextDragging::UITextDragOptions;
#[cfg(feature = "UITextDragging")]
pub use self::__UITextDragging::UITextDragRequest;
#[cfg(all(
    feature = "UITextDragging",
    feature = "UITextInput",
    feature = "UITextInputTraits"
))]
pub use self::__UITextDragging::UITextDraggable;
#[cfg(feature = "UITextDropProposal")]
pub use self::__UITextDropProposal::UITextDropAction;
#[cfg(feature = "UITextDropProposal")]
pub use self::__UITextDropProposal::UITextDropPerformer;
#[cfg(feature = "UITextDropProposal")]
pub use self::__UITextDropProposal::UITextDropProgressMode;
#[cfg(all(feature = "UIDropInteraction", feature = "UITextDropProposal"))]
pub use self::__UITextDropProposal::UITextDropProposal;
#[cfg(feature = "UITextDropping")]
pub use self::__UITextDropping::UITextDropDelegate;
#[cfg(feature = "UITextDropping")]
pub use self::__UITextDropping::UITextDropEditability;
#[cfg(feature = "UITextDropping")]
pub use self::__UITextDropping::UITextDropRequest;
#[cfg(all(
    feature = "UIPasteConfigurationSupporting",
    feature = "UITextDropping",
    feature = "UITextInput",
    feature = "UITextInputTraits",
    feature = "UITextPasteConfigurationSupporting"
))]
pub use self::__UITextDropping::UITextDroppable;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextBorderStyle;
#[cfg(all(
    feature = "UIControl",
    feature = "UIResponder",
    feature = "UITextField",
    feature = "UIView"
))]
pub use self::__UITextField::UITextField;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldDelegate;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldDidEndEditingReason;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldDidEndEditingReasonKey;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldTextDidBeginEditingNotification;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldTextDidChangeNotification;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldTextDidEndEditingNotification;
#[cfg(feature = "UITextField")]
pub use self::__UITextField::UITextFieldViewMode;
#[cfg(feature = "UITextFormattingCoordinator")]
pub use self::__UITextFormattingCoordinator::UITextFormattingCoordinator;
#[cfg(feature = "UITextFormattingCoordinator")]
pub use self::__UITextFormattingCoordinator::UITextFormattingCoordinatorDelegate;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UIDictationPhrase;
#[cfg(all(feature = "UITextInput", feature = "UITextInputTraits"))]
pub use self::__UITextInput::UIKeyInput;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextAlternativeStyle;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextDirection;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextGranularity;
#[cfg(all(feature = "UITextInput", feature = "UITextInputTraits"))]
pub use self::__UITextInput::UITextInput;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputAssistantItem;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputCurrentInputModeDidChangeNotification;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputDelegate;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputMode;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputStringTokenizer;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputTextBackgroundColorKey;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputTextColorKey;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputTextFontKey;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextInputTokenizer;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextLayoutDirection;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextPlaceholder;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextPosition;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextRange;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextSelectionRect;
#[cfg(feature = "UITextInput")]
pub use self::__UITextInput::UITextStorageDirection;
#[cfg(feature = "UITextInputContext")]
pub use self::__UITextInputContext::UITextInputContext;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UIKeyboardAppearance;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UIKeyboardType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UIReturnKeyType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextAutocapitalizationType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextAutocorrectionType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeAddressCity;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeAddressCityAndState;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeAddressState;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeBirthdate;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeBirthdateDay;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeBirthdateMonth;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeBirthdateYear;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCellularEID;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCellularIMEI;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCountryName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardExpiration;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardExpirationMonth;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardExpirationYear;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardFamilyName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardGivenName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardMiddleName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardNumber;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardSecurityCode;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeCreditCardType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeDateTime;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeEmailAddress;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeFamilyName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeFlightNumber;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeFullStreetAddress;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeGivenName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeJobTitle;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeLocation;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeMiddleName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeNamePrefix;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeNameSuffix;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeNewPassword;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeNickname;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeOneTimeCode;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeOrganizationName;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypePassword;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypePostalCode;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeShipmentTrackingNumber;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeStreetAddressLine1;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeStreetAddressLine2;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeSublocality;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeTelephoneNumber;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeURL;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextContentTypeUsername;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextInlinePredictionType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextInputPasswordRules;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextInputTraits;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextSmartDashesType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextSmartInsertDeleteType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextSmartQuotesType;
#[cfg(feature = "UITextInputTraits")]
pub use self::__UITextInputTraits::UITextSpellCheckingType;
#[cfg(feature = "UITextInteraction")]
pub use self::__UITextInteraction::UITextInteraction;
#[cfg(feature = "UITextInteraction")]
pub use self::__UITextInteraction::UITextInteractionDelegate;
#[cfg(feature = "UITextInteraction")]
pub use self::__UITextInteraction::UITextInteractionMode;
#[cfg(feature = "UITextItem")]
pub use self::__UITextItem::UITextItem;
#[cfg(feature = "UITextItem")]
pub use self::__UITextItem::UITextItemContentType;
#[cfg(feature = "UITextItem")]
pub use self::__UITextItem::UITextItemMenuConfiguration;
#[cfg(feature = "UITextItem")]
pub use self::__UITextItem::UITextItemMenuPreview;
#[cfg(feature = "UITextItem")]
pub use self::__UITextItem::UITextItemTagAttributeName;
#[cfg(feature = "UITextItemInteraction")]
pub use self::__UITextItemInteraction::UITextItemInteraction;
#[cfg(feature = "UITextLoupeSession")]
pub use self::__UITextLoupeSession::UITextLoupeSession;
#[cfg(all(
    feature = "UIPasteConfigurationSupporting",
    feature = "UITextPasteConfigurationSupporting"
))]
pub use self::__UITextPasteConfigurationSupporting::UITextPasteConfigurationSupporting;
#[cfg(feature = "UITextPasteDelegate")]
pub use self::__UITextPasteDelegate::UITextPasteDelegate;
#[cfg(feature = "UITextPasteDelegate")]
pub use self::__UITextPasteDelegate::UITextPasteItem;
#[cfg(feature = "UITextSearching")]
pub use self::__UITextSearching::UITextSearchAggregator;
#[cfg(feature = "UITextSearching")]
pub use self::__UITextSearching::UITextSearchDocumentIdentifier;
#[cfg(feature = "UITextSearching")]
pub use self::__UITextSearching::UITextSearchFoundTextStyle;
#[cfg(feature = "UITextSearching")]
pub use self::__UITextSearching::UITextSearching;
#[cfg(feature = "UITextSelectionDisplayInteraction")]
pub use self::__UITextSelectionDisplayInteraction::UITextSelectionDisplayInteraction;
#[cfg(feature = "UITextSelectionDisplayInteraction")]
pub use self::__UITextSelectionDisplayInteraction::UITextSelectionDisplayInteractionDelegate;
#[cfg(all(feature = "UITextSelectionHandleView", feature = "UIView"))]
pub use self::__UITextSelectionHandleView::UITextSelectionHandleView;
#[cfg(all(feature = "UITextSelectionHighlightView", feature = "UIView"))]
pub use self::__UITextSelectionHighlightView::UITextSelectionHighlightView;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIScrollView",
    feature = "UITextView",
    feature = "UIView"
))]
pub use self::__UITextView::UITextView;
#[cfg(feature = "UITextView")]
pub use self::__UITextView::UITextViewBorderStyle;
#[cfg(all(feature = "UIScrollView", feature = "UITextView"))]
pub use self::__UITextView::UITextViewDelegate;
#[cfg(feature = "UITextView")]
pub use self::__UITextView::UITextViewTextDidBeginEditingNotification;
#[cfg(feature = "UITextView")]
pub use self::__UITextView::UITextViewTextDidChangeNotification;
#[cfg(feature = "UITextView")]
pub use self::__UITextView::UITextViewTextDidEndEditingNotification;
#[cfg(feature = "UITimingCurveProvider")]
pub use self::__UITimingCurveProvider::UITimingCurveProvider;
#[cfg(feature = "UITimingCurveProvider")]
pub use self::__UITimingCurveProvider::UITimingCurveType;
#[cfg(feature = "UITimingParameters")]
pub use self::__UITimingParameters::UICubicTimingParameters;
#[cfg(feature = "UITimingParameters")]
pub use self::__UITimingParameters::UISpringTimingParameters;
#[cfg(feature = "UIToolTipInteraction")]
pub use self::__UIToolTipInteraction::UIToolTipConfiguration;
#[cfg(feature = "UIToolTipInteraction")]
pub use self::__UIToolTipInteraction::UIToolTipInteraction;
#[cfg(feature = "UIToolTipInteraction")]
pub use self::__UIToolTipInteraction::UIToolTipInteractionDelegate;
#[cfg(all(feature = "UIResponder", feature = "UIToolbar", feature = "UIView"))]
pub use self::__UIToolbar::UIToolbar;
#[cfg(all(feature = "UIBarCommon", feature = "UIToolbar"))]
pub use self::__UIToolbar::UIToolbarDelegate;
#[cfg(all(feature = "UIBarAppearance", feature = "UIToolbarAppearance"))]
pub use self::__UIToolbarAppearance::UIToolbarAppearance;
#[cfg(feature = "UITouch")]
pub use self::__UITouch::UIForceTouchCapability;
#[cfg(feature = "UITouch")]
pub use self::__UITouch::UITouch;
#[cfg(feature = "UITouch")]
pub use self::__UITouch::UITouchPhase;
#[cfg(feature = "UITouch")]
pub use self::__UITouch::UITouchProperties;
#[cfg(feature = "UITouch")]
pub use self::__UITouch::UITouchType;
#[cfg(all(feature = "UILayoutGuide", feature = "UITrackingLayoutGuide"))]
pub use self::__UITrackingLayoutGuide::UITrackingLayoutGuide;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UICGFloatTrait;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UICGFloatTraitDefinition;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UINSIntegerTrait;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UINSIntegerTraitDefinition;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UIObjectTrait;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UIObjectTraitDefinition;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITrait;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitAccessibilityContrast;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitActiveAppearance;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitDefinition;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitDisplayGamut;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitDisplayScale;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitForceTouchCapability;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitHorizontalSizeClass;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitImageDynamicRange;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitLayoutDirection;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitLegibilityWeight;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitPreferredContentSizeCategory;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitSceneCaptureState;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitToolbarItemPresentationSize;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitTypesettingLanguage;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitUserInterfaceIdiom;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitUserInterfaceLevel;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitUserInterfaceStyle;
#[cfg(feature = "UITrait")]
pub use self::__UITrait::UITraitVerticalSizeClass;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UIMutableTraits;
#[cfg(all(feature = "UITraitCollection", feature = "block2"))]
pub use self::__UITraitCollection::UITraitChangeHandler;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UITraitChangeObservable;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UITraitChangeRegistration;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UITraitCollection;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UITraitEnvironment;
#[cfg(all(feature = "UITraitCollection", feature = "block2"))]
pub use self::__UITraitCollection::UITraitMutations;
#[cfg(feature = "UITraitCollection")]
pub use self::__UITraitCollection::UITraitOverrides;
#[cfg(feature = "UIUserActivity")]
pub use self::__UIUserActivity::UIUserActivityRestoring;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIMutableUserNotificationAction;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIMutableUserNotificationCategory;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationAction;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationActionBehavior;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationActionContext;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationActionResponseTypedTextKey;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationActivationMode;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationCategory;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationSettings;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationTextInputActionButtonTitleKey;
#[cfg(feature = "UIUserNotificationSettings")]
pub use self::__UIUserNotificationSettings::UIUserNotificationType;
#[cfg(all(feature = "UIVibrancyEffect", feature = "UIVisualEffect"))]
pub use self::__UIVibrancyEffect::UIVibrancyEffect;
#[cfg(feature = "UIVibrancyEffect")]
pub use self::__UIVibrancyEffect::UIVibrancyEffectStyle;
#[cfg(all(
    feature = "UINavigationController",
    feature = "UIResponder",
    feature = "UIVideoEditorController",
    feature = "UIViewController"
))]
pub use self::__UIVideoEditorController::UIVideoEditorController;
#[cfg(feature = "UIVideoEditorController")]
pub use self::__UIVideoEditorController::UIVideoEditorControllerDelegate;
#[cfg(feature = "UIView")]
pub use self::__UIView::UICoordinateSpace;
#[cfg(feature = "UIView")]
pub use self::__UIView::UILayoutConstraintAxis;
#[cfg(feature = "UIView")]
pub use self::__UIView::UILayoutFittingCompressedSize;
#[cfg(feature = "UIView")]
pub use self::__UIView::UILayoutFittingExpandedSize;
#[cfg(feature = "UIView")]
pub use self::__UIView::UISemanticContentAttribute;
#[cfg(feature = "UIView")]
pub use self::__UIView::UISystemAnimation;
#[cfg(all(feature = "UIResponder", feature = "UIView"))]
pub use self::__UIView::UIView;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewAnimationCurve;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewAnimationOptions;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewAnimationTransition;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewAutoresizing;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewContentMode;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewKeyframeAnimationOptions;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewNoIntrinsicMetric;
#[cfg(feature = "UIView")]
pub use self::__UIView::UIViewTintAdjustmentMode;
#[cfg(feature = "UIViewAnimating")]
pub use self::__UIViewAnimating::UIViewAnimating;
#[cfg(feature = "UIViewAnimating")]
pub use self::__UIViewAnimating::UIViewAnimatingPosition;
#[cfg(feature = "UIViewAnimating")]
pub use self::__UIViewAnimating::UIViewAnimatingState;
#[cfg(feature = "UIViewAnimating")]
pub use self::__UIViewAnimating::UIViewImplicitlyAnimating;
#[cfg(feature = "UIViewConfigurationState")]
pub use self::__UIViewConfigurationState::UIViewConfigurationState;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIContainerBackgroundStyle;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIContentContainer;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIModalPresentationStyle;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIModalTransitionStyle;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIPreviewAction;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIPreviewActionGroup;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIPreviewActionItem;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIPreviewActionStyle;
#[cfg(all(feature = "UIResponder", feature = "UIViewController"))]
pub use self::__UIViewController::UIViewController;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIViewControllerHierarchyInconsistencyException;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIViewControllerPreviewing;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIViewControllerPreviewingDelegate;
#[cfg(feature = "UIViewController")]
pub use self::__UIViewController::UIViewControllerShowDetailTargetDidChangeNotification;
#[cfg(feature = "UIViewControllerTransitionCoordinator")]
pub use self::__UIViewControllerTransitionCoordinator::UITransitionContextViewControllerKey;
#[cfg(feature = "UIViewControllerTransitionCoordinator")]
pub use self::__UIViewControllerTransitionCoordinator::UITransitionContextViewKey;
#[cfg(feature = "UIViewControllerTransitionCoordinator")]
pub use self::__UIViewControllerTransitionCoordinator::UIViewControllerTransitionCoordinator;
#[cfg(feature = "UIViewControllerTransitionCoordinator")]
pub use self::__UIViewControllerTransitionCoordinator::UIViewControllerTransitionCoordinatorContext;
#[cfg(feature = "UIViewControllerTransitioning")]
pub use self::__UIViewControllerTransitioning::UIPercentDrivenInteractiveTransition;
#[cfg(all(
    feature = "UIViewControllerTransitionCoordinator",
    feature = "UIViewControllerTransitioning"
))]
pub use self::__UIViewControllerTransitioning::UITransitionContextFromViewControllerKey;
#[cfg(all(
    feature = "UIViewControllerTransitionCoordinator",
    feature = "UIViewControllerTransitioning"
))]
pub use self::__UIViewControllerTransitioning::UITransitionContextFromViewKey;
#[cfg(all(
    feature = "UIViewControllerTransitionCoordinator",
    feature = "UIViewControllerTransitioning"
))]
pub use self::__UIViewControllerTransitioning::UITransitionContextToViewControllerKey;
#[cfg(all(
    feature = "UIViewControllerTransitionCoordinator",
    feature = "UIViewControllerTransitioning"
))]
pub use self::__UIViewControllerTransitioning::UITransitionContextToViewKey;
#[cfg(feature = "UIViewControllerTransitioning")]
pub use self::__UIViewControllerTransitioning::UIViewControllerAnimatedTransitioning;
#[cfg(feature = "UIViewControllerTransitioning")]
pub use self::__UIViewControllerTransitioning::UIViewControllerContextTransitioning;
#[cfg(feature = "UIViewControllerTransitioning")]
pub use self::__UIViewControllerTransitioning::UIViewControllerInteractiveTransitioning;
#[cfg(feature = "UIViewControllerTransitioning")]
pub use self::__UIViewControllerTransitioning::UIViewControllerTransitioningDelegate;
#[cfg(feature = "UIViewPropertyAnimator")]
pub use self::__UIViewPropertyAnimator::UIViewPropertyAnimator;
#[cfg(feature = "UIVisualEffect")]
pub use self::__UIVisualEffect::UIVisualEffect;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIView",
    feature = "UIVisualEffectView"
))]
pub use self::__UIVisualEffectView::UIVisualEffectView;
#[cfg(feature = "UIWebView")]
pub use self::__UIWebView::UIWebPaginationBreakingMode;
#[cfg(feature = "UIWebView")]
pub use self::__UIWebView::UIWebPaginationMode;
#[cfg(all(feature = "UIResponder", feature = "UIView", feature = "UIWebView"))]
pub use self::__UIWebView::UIWebView;
#[cfg(feature = "UIWebView")]
pub use self::__UIWebView::UIWebViewDelegate;
#[cfg(feature = "UIWebView")]
pub use self::__UIWebView::UIWebViewNavigationType;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardAnimationCurveUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardAnimationDurationUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardBoundsUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardCenterBeginUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardCenterEndUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardDidChangeFrameNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardDidHideNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardDidShowNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardFrameBeginUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardFrameEndUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardIsLocalUserInfoKey;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardWillChangeFrameNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardWillHideNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIKeyboardWillShowNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UILayoutGuideAspectFitting;
#[cfg(all(feature = "UIResponder", feature = "UIView", feature = "UIWindow"))]
pub use self::__UIWindow::UIWindow;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowDidBecomeHiddenNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowDidBecomeKeyNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowDidBecomeVisibleNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowDidResignKeyNotification;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowLevel;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowLevelAlert;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowLevelNormal;
#[cfg(feature = "UIWindow")]
pub use self::__UIWindow::UIWindowLevelStatusBar;
#[cfg(feature = "UIWindowScene")]
pub use self::__UIWindowScene::UISceneSizeRestrictions;
#[cfg(all(
    feature = "UIResponder",
    feature = "UIScene",
    feature = "UIWindowScene"
))]
pub use self::__UIWindowScene::UIWindowScene;
#[cfg(all(feature = "UIScene", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneDelegate;
#[cfg(all(feature = "UISceneOptions", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneDestructionRequestOptions;
#[cfg(feature = "UIWindowScene")]
pub use self::__UIWindowScene::UIWindowSceneDismissalAnimation;
#[cfg(all(feature = "UISceneDefinitions", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneSessionRoleApplication;
#[cfg(all(feature = "UISceneDefinitions", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneSessionRoleExternalDisplay;
#[cfg(all(feature = "UISceneDefinitions", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneSessionRoleExternalDisplayNonInteractive;
#[cfg(all(feature = "UISceneDefinitions", feature = "UIWindowScene"))]
pub use self::__UIWindowScene::UIWindowSceneSessionRoleVolumetricApplication;
#[cfg(all(
    feature = "UIAction",
    feature = "UIMenuElement",
    feature = "UIWindowSceneActivationAction"
))]
pub use self::__UIWindowSceneActivationAction::UIWindowSceneActivationAction;
#[cfg(all(
    feature = "UIAction",
    feature = "UIMenuElement",
    feature = "UIWindowSceneActivationAction",
    feature = "UIWindowSceneActivationConfiguration",
    feature = "block2"
))]
pub use self::__UIWindowSceneActivationAction::UIWindowSceneActivationActionConfigurationProvider;
#[cfg(feature = "UIWindowSceneActivationConfiguration")]
pub use self::__UIWindowSceneActivationConfiguration::UIWindowSceneActivationConfiguration;
#[cfg(feature = "UIWindowSceneActivationInteraction")]
pub use self::__UIWindowSceneActivationInteraction::UIWindowSceneActivationInteraction;
#[cfg(all(
    feature = "UIWindowSceneActivationConfiguration",
    feature = "UIWindowSceneActivationInteraction",
    feature = "block2"
))]
pub use self::__UIWindowSceneActivationInteraction::UIWindowSceneActivationInteractionConfigurationProvider;
#[cfg(all(
    feature = "UISceneOptions",
    feature = "UIWindowSceneActivationRequestOptions"
))]
pub use self::__UIWindowSceneActivationRequestOptions::UIWindowSceneActivationRequestOptions;
#[cfg(feature = "UIWindowSceneActivationRequestOptions")]
pub use self::__UIWindowSceneActivationRequestOptions::UIWindowScenePresentationStyle;
#[cfg(feature = "UIWindowSceneDragInteraction")]
pub use self::__UIWindowSceneDragInteraction::UIWindowSceneDragInteraction;
#[cfg(feature = "UIWindowSceneGeometry")]
pub use self::__UIWindowSceneGeometry::UIWindowSceneGeometry;
#[cfg(feature = "UIWindowSceneGeometry")]
pub use self::__UIWindowSceneGeometry::UIWindowSceneResizingRestrictions;
#[cfg(feature = "UIWindowSceneGeometryPreferences")]
pub use self::__UIWindowSceneGeometryPreferences::UIWindowSceneGeometryPreferences;
#[cfg(all(
    feature = "UIWindowSceneGeometryPreferences",
    feature = "UIWindowSceneGeometryPreferencesIOS"
))]
pub use self::__UIWindowSceneGeometryPreferencesIOS::UIWindowSceneGeometryPreferencesIOS;
#[cfg(all(
    feature = "UIWindowSceneGeometryPreferences",
    feature = "UIWindowSceneGeometryPreferencesMac"
))]
pub use self::__UIWindowSceneGeometryPreferencesMac::UIWindowSceneGeometryPreferencesMac;
#[cfg(feature = "UIWindowSceneGeometryPreferencesVision")]
pub use self::__UIWindowSceneGeometryPreferencesVision::UIProposedSceneSizeNoPreference;
#[cfg(all(
    feature = "UIWindowSceneGeometryPreferences",
    feature = "UIWindowSceneGeometryPreferencesVision"
))]
pub use self::__UIWindowSceneGeometryPreferencesVision::UIWindowSceneGeometryPreferencesVision;
#[cfg(feature = "UIWindowScenePlacement")]
pub use self::__UIWindowScenePlacement::UIWindowScenePlacement;
#[cfg(all(
    feature = "UIWindowScenePlacement",
    feature = "UIWindowSceneProminentPlacement"
))]
pub use self::__UIWindowSceneProminentPlacement::UIWindowSceneProminentPlacement;
#[cfg(all(
    feature = "UIWindowScenePlacement",
    feature = "UIWindowSceneStandardPlacement"
))]
pub use self::__UIWindowSceneStandardPlacement::UIWindowSceneStandardPlacement;
#[cfg(feature = "UNNotificationResponse_UIKitAdditions")]
pub use self::__UNNotificationResponse_UIKitAdditions::UNNotificationResponseUIKitAdditions;
