//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIPreviewParameters;

    unsafe impl ClassType for UIPreviewParameters {
        type Super = NSObject;
        type Mutability = MainThreadOnly;
    }
);

unsafe impl NSCopying for UIPreviewParameters {}

unsafe impl NSObjectProtocol for UIPreviewParameters {}

extern_methods!(
    unsafe impl UIPreviewParameters {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithTextLineRects:)]
        pub unsafe fn initWithTextLineRects(
            this: Allocated<Self>,
            text_line_rects: &NSArray<NSValue>,
        ) -> Retained<Self>;

        #[cfg(feature = "UIBezierPath")]
        #[method_id(@__retain_semantics Other visiblePath)]
        pub unsafe fn visiblePath(&self) -> Option<Retained<UIBezierPath>>;

        #[cfg(feature = "UIBezierPath")]
        #[method(setVisiblePath:)]
        pub unsafe fn setVisiblePath(&self, visible_path: Option<&UIBezierPath>);

        #[cfg(feature = "UIBezierPath")]
        #[method_id(@__retain_semantics Other shadowPath)]
        pub unsafe fn shadowPath(&self) -> Option<Retained<UIBezierPath>>;

        #[cfg(feature = "UIBezierPath")]
        #[method(setShadowPath:)]
        pub unsafe fn setShadowPath(&self, shadow_path: Option<&UIBezierPath>);

        #[cfg(feature = "UIColor")]
        #[method_id(@__retain_semantics Other backgroundColor)]
        pub unsafe fn backgroundColor(&self) -> Retained<UIColor>;

        #[cfg(feature = "UIColor")]
        #[method(setBackgroundColor:)]
        pub unsafe fn setBackgroundColor(&self, background_color: Option<&UIColor>);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIPreviewParameters {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
