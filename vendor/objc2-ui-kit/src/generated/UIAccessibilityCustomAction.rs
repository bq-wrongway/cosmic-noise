//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

#[cfg(feature = "block2")]
pub type UIAccessibilityCustomActionHandler =
    *mut block2::Block<dyn Fn(NonNull<UIAccessibilityCustomAction>) -> Bool>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIAccessibilityCustomAction;

    unsafe impl ClassType for UIAccessibilityCustomAction {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for UIAccessibilityCustomAction {}

extern_methods!(
    unsafe impl UIAccessibilityCustomAction {
        #[method_id(@__retain_semantics Init initWithName:target:selector:)]
        pub unsafe fn initWithName_target_selector(
            this: Allocated<Self>,
            name: &NSString,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithAttributedName:target:selector:)]
        pub unsafe fn initWithAttributedName_target_selector(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "UIImage")]
        #[method_id(@__retain_semantics Init initWithName:image:target:selector:)]
        pub unsafe fn initWithName_image_target_selector(
            this: Allocated<Self>,
            name: &NSString,
            image: Option<&UIImage>,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "UIImage")]
        #[method_id(@__retain_semantics Init initWithAttributedName:image:target:selector:)]
        pub unsafe fn initWithAttributedName_image_target_selector(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            image: Option<&UIImage>,
            target: Option<&AnyObject>,
            selector: Sel,
        ) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[method_id(@__retain_semantics Init initWithName:actionHandler:)]
        pub unsafe fn initWithName_actionHandler(
            this: Allocated<Self>,
            name: &NSString,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[method_id(@__retain_semantics Init initWithAttributedName:actionHandler:)]
        pub unsafe fn initWithAttributedName_actionHandler(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIImage", feature = "block2"))]
        #[method_id(@__retain_semantics Init initWithName:image:actionHandler:)]
        pub unsafe fn initWithName_image_actionHandler(
            this: Allocated<Self>,
            name: &NSString,
            image: Option<&UIImage>,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIImage", feature = "block2"))]
        #[method_id(@__retain_semantics Init initWithAttributedName:image:actionHandler:)]
        pub unsafe fn initWithAttributedName_image_actionHandler(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            image: Option<&UIImage>,
            action_handler: UIAccessibilityCustomActionHandler,
        ) -> Retained<Self>;

        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[method(setName:)]
        pub unsafe fn setName(&self, name: &NSString);

        #[cfg(feature = "UIImage")]
        #[method_id(@__retain_semantics Other image)]
        pub unsafe fn image(&self) -> Option<Retained<UIImage>>;

        #[cfg(feature = "UIImage")]
        #[method(setImage:)]
        pub unsafe fn setImage(&self, image: Option<&UIImage>);

        #[method_id(@__retain_semantics Other attributedName)]
        pub unsafe fn attributedName(&self) -> Retained<NSAttributedString>;

        #[method(setAttributedName:)]
        pub unsafe fn setAttributedName(&self, attributed_name: &NSAttributedString);

        #[method_id(@__retain_semantics Other target)]
        pub unsafe fn target(&self) -> Option<Retained<AnyObject>>;

        #[method(setTarget:)]
        pub unsafe fn setTarget(&self, target: Option<&AnyObject>);

        #[method(selector)]
        pub unsafe fn selector(&self) -> Sel;

        #[method(setSelector:)]
        pub unsafe fn setSelector(&self, selector: Sel);

        #[cfg(feature = "block2")]
        #[method(actionHandler)]
        pub unsafe fn actionHandler(&self) -> UIAccessibilityCustomActionHandler;

        #[cfg(feature = "block2")]
        #[method(setActionHandler:)]
        pub unsafe fn setActionHandler(&self, action_handler: UIAccessibilityCustomActionHandler);
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIAccessibilityCustomAction {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
