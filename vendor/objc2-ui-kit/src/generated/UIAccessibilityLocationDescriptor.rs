//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIAccessibilityLocationDescriptor;

    unsafe impl ClassType for UIAccessibilityLocationDescriptor {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for UIAccessibilityLocationDescriptor {}

extern_methods!(
    unsafe impl UIAccessibilityLocationDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Init initWithName:view:)]
        pub unsafe fn initWithName_view(
            this: Allocated<Self>,
            name: &NSString,
            view: &UIView,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Init initWithName:point:inView:)]
        pub unsafe fn initWithName_point_inView(
            this: Allocated<Self>,
            name: &NSString,
            point: CGPoint,
            view: &UIView,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Init initWithAttributedName:point:inView:)]
        pub unsafe fn initWithAttributedName_point_inView(
            this: Allocated<Self>,
            attributed_name: &NSAttributedString,
            point: CGPoint,
            view: &UIView,
        ) -> Retained<Self>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other view)]
        pub unsafe fn view(&self, mtm: MainThreadMarker) -> Option<Retained<UIView>>;

        #[method(point)]
        pub unsafe fn point(&self) -> CGPoint;

        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[method_id(@__retain_semantics Other attributedName)]
        pub unsafe fn attributedName(&self) -> Retained<NSAttributedString>;
    }
);
