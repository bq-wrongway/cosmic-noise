# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "objc2-quartz-core"
version = "0.2.2"
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bindings to the QuartzCore/CoreAnimation framework"
readme = "README.md"
keywords = [
    "cocoa",
    "apple",
    "framework",
    "macos",
    "ios",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
license = "MIT"
repository = "https://github.com/madsmtm/objc2"

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-ios-macabi",
]

[lib]
name = "objc2_quartz_core"
path = "src/lib.rs"

[dependencies.bitflags]
version = "2.5.0"
optional = true
default-features = false

[dependencies.block2]
version = "0.5.1"
optional = true
default-features = false

[dependencies.objc2]
version = "0.5.2"
default-features = false

[dependencies.objc2-foundation]
version = "0.2.2"
default-features = false

[dependencies.objc2-metal]
version = "0.2.2"
optional = true
default-features = false

[features]
CAAnimation = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
CABase = []
CAConstraintLayoutManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CADisplayLink = [
    "objc2-foundation/NSObjCRuntime",
    "objc2-foundation/NSRunLoop",
    "objc2-foundation/NSString",
]
CAEDRMetadata = [
    "objc2-foundation/NSData",
    "objc2-foundation/NSObject",
]
CAEmitterCell = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CAEmitterLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CAFrameRateRange = []
CAGradientLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
CALayer = [
    "bitflags",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSNull",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CAMediaTiming = ["objc2-foundation/NSString"]
CAMediaTimingFunction = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CAMetalDisplayLink = [
    "objc2-foundation/NSObjCRuntime",
    "objc2-foundation/NSRunLoop",
    "objc2-foundation/NSString",
    "objc2-metal?/MTLDrawable",
]
CAMetalLayer = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-metal?/MTLDevice",
    "objc2-metal?/MTLDrawable",
    "objc2-metal?/MTLPixelFormat",
    "objc2-metal?/MTLResource",
    "objc2-metal?/MTLTexture",
]
CAOpenGLLayer = []
CARemoteLayerClient = []
CARemoteLayerServer = []
CARenderer = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSString",
]
CAReplicatorLayer = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
CAScrollLayer = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CAShapeLayer = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSValue",
]
CATextLayer = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CATiledLayer = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSObject",
]
CATransaction = ["objc2-foundation/NSString"]
CATransform3D = [
    "objc2-foundation/NSGeometry",
    "objc2-foundation/NSValue",
]
CATransformLayer = ["objc2-foundation/NSObject"]
CAValueFunction = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CoreAnimation = []
CoreImage = []
CoreVideo = []
all = [
    "CAAnimation",
    "CABase",
    "CAConstraintLayoutManager",
    "CADisplayLink",
    "CAEDRMetadata",
    "CAEmitterCell",
    "CAEmitterLayer",
    "CAFrameRateRange",
    "CAGradientLayer",
    "CALayer",
    "CAMediaTiming",
    "CAMediaTimingFunction",
    "CAMetalDisplayLink",
    "CAMetalLayer",
    "CAOpenGLLayer",
    "CARemoteLayerClient",
    "CARemoteLayerServer",
    "CARenderer",
    "CAReplicatorLayer",
    "CAScrollLayer",
    "CAShapeLayer",
    "CATextLayer",
    "CATiledLayer",
    "CATransaction",
    "CATransform3D",
    "CATransformLayer",
    "CAValueFunction",
    "CoreAnimation",
    "CoreImage",
    "CoreVideo",
    "bitflags",
    "block2",
    "objc2-metal",
]
alloc = [
    "block2?/alloc",
    "objc2/alloc",
    "objc2-foundation/alloc",
    "objc2-metal?/alloc",
]
apple = []
bitflags = [
    "dep:bitflags",
    "objc2-foundation/bitflags",
    "objc2-metal?/bitflags",
]
block2 = [
    "dep:block2",
    "objc2-foundation/block2",
    "objc2-metal?/block2",
]
default = ["std"]
gnustep-1-7 = []
gnustep-1-8 = []
gnustep-1-9 = []
gnustep-2-0 = []
gnustep-2-1 = []
objc2-metal = ["dep:objc2-metal"]
std = [
    "alloc",
    "bitflags?/std",
    "block2?/std",
    "objc2/std",
    "objc2-foundation/std",
    "objc2-metal?/std",
]

[lints.clippy]
cargo = "warn"
ptr_as_ptr = "warn"

[lints.rust]
elided_lifetimes_in_paths = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "deny"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "deny"
