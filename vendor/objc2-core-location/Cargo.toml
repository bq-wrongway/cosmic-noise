# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "objc2-core-location"
version = "0.2.2"
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bindings to the CoreLocation framework"
readme = "README.md"
keywords = [
    "cocoa",
    "apple",
    "framework",
    "macos",
    "ios",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
license = "MIT"
repository = "https://github.com/madsmtm/objc2"

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[lib]
name = "objc2_core_location"
path = "src/lib.rs"

[dependencies.block2]
version = "0.5.1"
optional = true
default-features = false

[dependencies.objc2]
version = "0.5.2"
default-features = false

[dependencies.objc2-foundation]
version = "0.2.2"
default-features = false

[features]
CLAvailability = []
CLBackgroundActivitySession = []
CLBeaconIdentityCondition = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CLBeaconIdentityConstraint = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSUUID",
]
CLBeaconRegion = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSUUID",
    "objc2-foundation/NSValue",
]
CLCircularGeographicCondition = ["objc2-foundation/NSObject"]
CLCircularRegion = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLCondition = ["objc2-foundation/NSObject"]
CLError = ["objc2-foundation/NSString"]
CLErrorDomain = ["objc2-foundation/NSString"]
CLGeocoder = [
    "objc2-contacts?/CNPostalAddress",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSError",
    "objc2-foundation/NSLocale",
    "objc2-foundation/NSString",
]
CLHeading = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
]
CLLocation = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
]
CLLocationManager = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSData",
    "objc2-foundation/NSDate",
    "objc2-foundation/NSError",
    "objc2-foundation/NSSet",
    "objc2-foundation/NSString",
]
CLLocationManagerDelegate = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSError",
]
CLLocationManager_CLVisitExtensions = []
CLLocationPushServiceError = [
    "objc2-foundation/NSError",
    "objc2-foundation/NSString",
]
CLLocationPushServiceExtension = [
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSString",
]
CLLocationUpdater = []
CLMonitor = [
    "objc2-foundation/NSArray",
    "objc2-foundation/NSString",
]
CLMonitorConfiguration = ["objc2-foundation/NSString"]
CLMonitoringEvent = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLMonitoringRecord = ["objc2-foundation/NSObject"]
CLPlacemark = [
    "objc2-contacts?/CNPostalAddress",
    "objc2-foundation/NSArray",
    "objc2-foundation/NSDictionary",
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
    "objc2-foundation/NSTimeZone",
]
CLRegion = [
    "objc2-foundation/NSObject",
    "objc2-foundation/NSString",
]
CLVisit = [
    "objc2-foundation/NSDate",
    "objc2-foundation/NSObject",
]
all = [
    "CLAvailability",
    "CLBackgroundActivitySession",
    "CLBeaconIdentityCondition",
    "CLBeaconIdentityConstraint",
    "CLBeaconRegion",
    "CLCircularGeographicCondition",
    "CLCircularRegion",
    "CLCondition",
    "CLError",
    "CLErrorDomain",
    "CLGeocoder",
    "CLHeading",
    "CLLocation",
    "CLLocationManager",
    "CLLocationManagerDelegate",
    "CLLocationManager_CLVisitExtensions",
    "CLLocationPushServiceError",
    "CLLocationPushServiceExtension",
    "CLLocationUpdater",
    "CLMonitor",
    "CLMonitorConfiguration",
    "CLMonitoringEvent",
    "CLMonitoringRecord",
    "CLPlacemark",
    "CLRegion",
    "CLVisit",
    "block2",
    "objc2-contacts",
]
alloc = [
    "block2?/alloc",
    "objc2/alloc",
    "objc2-contacts?/alloc",
    "objc2-foundation/alloc",
]
block2 = [
    "dep:block2",
    "objc2-contacts?/block2",
    "objc2-foundation/block2",
]
default = ["std"]
objc2-contacts = ["dep:objc2-contacts"]
std = [
    "alloc",
    "block2?/std",
    "objc2/std",
    "objc2-contacts?/std",
    "objc2-foundation/std",
]

[target."cfg(not(target_os = \"tvos\"))".dependencies.objc2-contacts]
version = "0.2.2"
optional = true
default-features = false

[lints.clippy]
cargo = "warn"
ptr_as_ptr = "warn"

[lints.rust]
elided_lifetimes_in_paths = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "deny"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "deny"
