# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70.0"
name = "softbuffer"
version = "0.4.6"
build = "build.rs"
exclude = ["examples"]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Cross-platform software buffer"
documentation = "https://docs.rs/softbuffer"
readme = "README.md"
keywords = [
    "framebuffer",
    "windowing",
]
categories = [
    "game-development",
    "graphics",
    "gui",
    "multimedia",
    "rendering",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-windowing/softbuffer"

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "wasm32-unknown-unknown",
]

[lib]
name = "softbuffer"
path = "src/lib.rs"

[[bench]]
name = "buffer_mut"
path = "benches/buffer_mut.rs"
harness = false

[dependencies.log]
version = "0.4.17"

[dependencies.raw_window_handle]
version = "0.6"
features = ["std"]
package = "raw-window-handle"

[dev-dependencies.colorous]
version = "1.0.12"

[dev-dependencies.criterion]
version = "0.4.0"
features = ["cargo_bench_support"]
default-features = false

[dev-dependencies.image]
version = "0.25.0"
features = ["jpeg"]
default-features = false

[dev-dependencies.web-time]
version = "1.0.0"

[dev-dependencies.winit]
version = "0.30.0"

[build-dependencies.cfg_aliases]
version = "0.2.0"

[features]
default = [
    "kms",
    "x11",
    "x11-dlopen",
    "wayland",
    "wayland-dlopen",
]
kms = [
    "bytemuck",
    "drm",
    "rustix",
]
wayland = [
    "wayland-backend",
    "wayland-client",
    "wayland-sys",
    "memmap2",
    "rustix",
    "fastrand",
]
wayland-dlopen = ["wayland-sys/dlopen"]
x11 = [
    "as-raw-xcb-connection",
    "bytemuck",
    "fastrand",
    "rustix",
    "tiny-xlib",
    "x11rb",
]
x11-dlopen = [
    "tiny-xlib/dlopen",
    "x11rb/dl-libxcb",
]

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.as-raw-xcb-connection]
version = "1.0.0"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.bytemuck]
version = "1.12.3"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.drm]
version = "0.12.0"
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.fastrand]
version = "2.0.0"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.memmap2]
version = "0.9.0"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.rustix]
version = "0.38.19"
features = [
    "fs",
    "mm",
    "shm",
    "std",
]
optional = true
default-features = false

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.tiny-xlib]
version = "0.2.1"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.wayland-backend]
version = "0.3.0"
features = ["client_system"]
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.wayland-client]
version = "0.31.0"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.wayland-sys]
version = "0.31.0"
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dependencies.x11rb]
version = "0.13.0"
features = [
    "allow-unsafe-code",
    "shm",
]
optional = true

[target.'cfg(all(unix, not(any(target_vendor = "apple", target_os = "android", target_os = "redox"))))'.dev-dependencies.rustix]
version = "0.38.8"
features = ["event"]

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies.rayon]
version = "1.5.1"

[target.'cfg(target_arch = "wasm32")'.dependencies.js-sys]
version = "0.3.63"

[target.'cfg(target_arch = "wasm32")'.dependencies.wasm-bindgen]
version = "0.2.86"

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.55"
features = [
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "ImageData",
    "OffscreenCanvas",
    "OffscreenCanvasRenderingContext2d",
    "Window",
]

[target.'cfg(target_arch = "wasm32")'.dev-dependencies.wasm-bindgen-test]
version = "0.3"

[target.'cfg(target_os = "redox")'.dependencies.redox_syscall]
version = "0.5"

[target.'cfg(target_os = "windows")'.dependencies.windows-sys]
version = "0.59.0"
features = [
    "Win32_Graphics_Gdi",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Foundation",
]

[target.'cfg(target_vendor = "apple")'.dependencies.bytemuck]
version = "1.12.3"
features = ["extern_crate_alloc"]

[target.'cfg(target_vendor = "apple")'.dependencies.core-graphics]
version = "0.24.0"

[target.'cfg(target_vendor = "apple")'.dependencies.foreign-types]
version = "0.5.0"

[target.'cfg(target_vendor = "apple")'.dependencies.objc2]
version = "0.5.2"

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-foundation]
version = "0.2.2"
features = [
    "NSDictionary",
    "NSGeometry",
    "NSKeyValueObserving",
    "NSString",
    "NSThread",
    "NSValue",
]

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-quartz-core]
version = "0.2.2"
features = [
    "CALayer",
    "CATransaction",
]
